{"snapshots":{"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/pom.xml":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/pom.xml","baseContent":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\t xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>3.2.5</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\t<groupId>com.prodapt</groupId>\n\t<artifactId>FilmRental</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<name>FilmRental</name>\n\t<description>Demo project for Spring Boot</description>\n\t<url/>\n\t<licenses>\n\t\t<license/>\n\t</licenses>\n\t<developers>\n\t\t<developer/>\n\t</developers>\n\t<scm>\n\t\t<connection/>\n\t\t<developerConnection/>\n\t\t<tag/>\n\t\t<url/>\n\t</scm>\n\t<properties>\n\t\t<java.version>17</java.version>\n\t</properties>\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t\t<optional>true</optional>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.mysql</groupId>\n\t\t\t<artifactId>mysql-connector-j</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t<artifactId>lombok</artifactId>\n\t\t\t<optional>true</optional>\n\t\t</dependency>\n\t\t<!-- <dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-tomcat</artifactId>\n\t\t\t<scope>provided</scope>\n\t\t</dependency> -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.fasterxml.jackson.dataformat</groupId>\n\t\t\t<artifactId>jackson-dataformat-xml</artifactId>\n\t\t</dependency>\n\n\t\t<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui -->\n\t\t<dependency>\n\t\t\t<groupId>org.springdoc</groupId>\n\t\t\t<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\n\t\t\t<version>2.5.0</version>\n\t\t</dependency>\n\n\n\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<annotationProcessorPaths>\n\t\t\t\t\t\t<path>\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n\t\t\t\t\t\t\t<version>1.18.34</version>\n\t\t\t\t\t\t</path>\n\t\t\t\t\t</annotationProcessorPaths>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<excludes>\n\t\t\t\t\t\t<exclude>\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n\t\t\t\t\t\t</exclude>\n\t\t\t\t\t</excludes>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n</project>\n\n","baseTimestamp":1760685404996,"deltas":[{"timestamp":1760685412559,"changes":[{"type":"MODIFY","lineNumber":10,"content":"\t<groupId>com.project</groupId>","oldContent":"\t<groupId>com.prodapt</groupId>"}]},{"timestamp":1760685421503,"changes":[{"type":"MODIFY","lineNumber":11,"content":"\t<artifactId>NetworkApp</artifactId>","oldContent":"\t<artifactId>FilmRental</artifactId>"}]},{"timestamp":1760685425461,"changes":[{"type":"MODIFY","lineNumber":13,"content":"\t<name>NetworkApp</name>","oldContent":"\t<name>FilmRental</name>"}]},{"timestamp":1760690744737,"changes":[{"type":"MODIFY","lineNumber":11,"content":"\t<artifactId>NetworkApp_Backend</artifactId>","oldContent":"\t<artifactId>NetworkApp</artifactId>"}]},{"timestamp":1760767176385,"changes":[{"type":"INSERT","lineNumber":47,"content":"<!--\t\t<dependency>-->"},{"type":"INSERT","lineNumber":48,"content":"<!--\t\t\t<groupId>org.springframework.boot</groupId>-->"},{"type":"INSERT","lineNumber":49,"content":"<!--\t\t\t<artifactId>spring-boot-starter-security</artifactId>-->"},{"type":"INSERT","lineNumber":50,"content":"<!--\t\t</dependency>-->"},{"type":"DELETE","lineNumber":48,"oldContent":"\t\t\t<groupId>org.springframework.boot</groupId>"},{"type":"DELETE","lineNumber":49,"oldContent":"\t\t\t<artifactId>spring-boot-starter-security</artifactId>"},{"type":"DELETE","lineNumber":50,"oldContent":"\t\t</dependency>"},{"type":"DELETE","lineNumber":51,"oldContent":"\t\t<dependency>"}]},{"timestamp":1760767183931,"changes":[{"type":"DELETE","lineNumber":48,"oldContent":"\t\t<dependency>"},{"type":"INSERT","lineNumber":51,"content":"<!--\t\t<dependency>-->"}]},{"timestamp":1760767193258,"changes":[{"type":"MODIFY","lineNumber":51,"content":"\t\t<dependency>","oldContent":"<!--\t\t<dependency>-->"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/resources/application.properties":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/resources/application.properties","baseContent":"spring.application.name=NetworkApp\nspring.datasource.url=jdbc:mysql://localhost:3306/flight?createDatabaseIfNotExist=true\nspring.datasource.username=root\nspring.datasource.password=root\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect\nspring.jpa.hibernate.ddl-auto=update\nspring.jpa.show-sql=true\n","baseTimestamp":1760685461658,"deltas":[{"timestamp":1760685471395,"changes":[{"type":"MODIFY","lineNumber":1,"content":"spring.datasource.url=jdbc:mysql://localhost:3306/NetworkApp?createDatabaseIfNotExist=true","oldContent":"spring.datasource.url=jdbc:mysql://localhost:3306/flight?createDatabaseIfNotExist=true"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/ConnectionType.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/ConnectionType.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum ConnectionType {\n    WIRED,\n    WIRELESS\n}","baseTimestamp":1760685625386},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/CustomerStatus.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/CustomerStatus.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum CustomerStatus {\n    ACTIVE,\n    INACTIVE,\n    PENDING\n}","baseTimestamp":1760685643575,"deltas":[{"timestamp":1760882280775,"changes":[{"type":"MODIFY","lineNumber":5,"content":"    PENDING,SCHEDULED","oldContent":"    PENDING"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/AssetType.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/AssetType.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum AssetType {\n    ONT,\n    ROUTER,\n    SWITCH,\n    CPE,\n    FIBERROLL\n}","baseTimestamp":1760685663390},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/AssetStatus.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/AssetStatus.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum AssetStatus {\n    AVAILABLE,\n    ASSIGNED,\n    FAULTY,\n    RETIRED\n}","baseTimestamp":1760685690288},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/FibreLineStatus.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/FibreLineStatus.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum FiberLineStatus {\n    ACTIVE,\n    DISCONNECTED\n}\n","baseTimestamp":1760685709087},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/TaskStatus.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/TaskStatus.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum TaskStatus {\n    SCHEDULED,\n    INPROGRESS,\n    COMPLETED,\n    FAILED\n}","baseTimestamp":1760685733920},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/UserRole.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/UserRole.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum UserRole {\n    PLANNER,\n    TECHNICIAN,\n    ADMIN,\n    SUPPORTAGENT\n}","baseTimestamp":1760688822567,"deltas":[{"timestamp":1760768332004,"changes":[{"type":"MODIFY","lineNumber":6,"content":"    SUPPORTAGENT,","oldContent":"    SUPPORTAGENT"},{"type":"INSERT","lineNumber":7,"content":"    SALES_AGENT"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Headend.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Headend.java","baseContent":"package com.project.NetworkApp.entity;\n\nv","baseTimestamp":1760688856583,"deltas":[{"timestamp":1760688858890,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.model;","oldContent":"v"},{"type":"INSERT","lineNumber":3,"content":""},{"type":"INSERT","lineNumber":4,"content":"import jakarta.persistence.*;"},{"type":"INSERT","lineNumber":5,"content":"import lombok.AllArgsConstructor;"},{"type":"INSERT","lineNumber":6,"content":"import lombok.Getter;"},{"type":"INSERT","lineNumber":7,"content":"import lombok.NoArgsConstructor;"},{"type":"INSERT","lineNumber":8,"content":"import lombok.Setter;"},{"type":"INSERT","lineNumber":9,"content":"import java.util.Set;"},{"type":"INSERT","lineNumber":10,"content":""},{"type":"INSERT","lineNumber":11,"content":"@Entity"},{"type":"INSERT","lineNumber":12,"content":"@Table(name = \"headends\")"},{"type":"INSERT","lineNumber":13,"content":"@Getter"},{"type":"INSERT","lineNumber":14,"content":"@Setter"},{"type":"INSERT","lineNumber":15,"content":"@NoArgsConstructor"},{"type":"INSERT","lineNumber":16,"content":"@AllArgsConstructor"},{"type":"INSERT","lineNumber":17,"content":"public class Headend {"},{"type":"INSERT","lineNumber":18,"content":""},{"type":"INSERT","lineNumber":19,"content":"    @Id"},{"type":"INSERT","lineNumber":20,"content":"    @GeneratedValue(strategy = GenerationType.IDENTITY)"},{"type":"INSERT","lineNumber":21,"content":"    @Column(name = \"headend_id\")"},{"type":"INSERT","lineNumber":22,"content":"    private Integer id;"},{"type":"INSERT","lineNumber":23,"content":""},{"type":"INSERT","lineNumber":24,"content":"    private String name;"},{"type":"INSERT","lineNumber":25,"content":"    private String location;"},{"type":"INSERT","lineNumber":26,"content":""},{"type":"INSERT","lineNumber":27,"content":"    // A Headend feeds many FDHs"},{"type":"INSERT","lineNumber":28,"content":"    @OneToMany(mappedBy = \"headend\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)"},{"type":"INSERT","lineNumber":29,"content":"    private Set<Fdh> fdhs;"},{"type":"INSERT","lineNumber":30,"content":"}"}]},{"timestamp":1760689009534,"changes":[{"type":"MODIFY","lineNumber":4,"content":"// package com.example.inventory.entity;","oldContent":"}"},{"type":"INSERT","lineNumber":5,"content":""},{"type":"DELETE","lineNumber":6,"oldContent":"    private Set<Fdh> fdhs;"},{"type":"DELETE","lineNumber":8,"oldContent":"    @OneToMany(mappedBy = \"headend\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)"},{"type":"DELETE","lineNumber":10,"oldContent":"    // A Headend feeds many FDHs"},{"type":"DELETE","lineNumber":12,"oldContent":""},{"type":"DELETE","lineNumber":14,"oldContent":"    private String location;"},{"type":"DELETE","lineNumber":16,"oldContent":"    private String name;"},{"type":"DELETE","lineNumber":18,"oldContent":""},{"type":"DELETE","lineNumber":20,"oldContent":"    private Integer id;"},{"type":"DELETE","lineNumber":22,"oldContent":"    @Column(name = \"headend_id\")"},{"type":"DELETE","lineNumber":24,"oldContent":"    @GeneratedValue(strategy = GenerationType.IDENTITY)"},{"type":"DELETE","lineNumber":26,"oldContent":"    @Id"},{"type":"DELETE","lineNumber":28,"oldContent":""},{"type":"INSERT","lineNumber":20,"content":""},{"type":"INSERT","lineNumber":21,"content":"    @Id"},{"type":"INSERT","lineNumber":22,"content":"    @GeneratedValue(strategy = GenerationType.IDENTITY)"},{"type":"INSERT","lineNumber":23,"content":"    @Column(name = \"headend_id\")"},{"type":"INSERT","lineNumber":24,"content":"    private Integer id;"},{"type":"INSERT","lineNumber":25,"content":""},{"type":"INSERT","lineNumber":26,"content":"    private String name;"},{"type":"INSERT","lineNumber":27,"content":"    private String location;"},{"type":"INSERT","lineNumber":28,"content":""},{"type":"INSERT","lineNumber":29,"content":"    @OneToMany(mappedBy = \"headend\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)"},{"type":"INSERT","lineNumber":30,"content":"    private Set<Fdh> fdhs;"},{"type":"INSERT","lineNumber":31,"content":"}"}]},{"timestamp":1760689262550,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.model;"},{"type":"DELETE","lineNumber":4,"oldContent":"// package com.example.inventory.entity;"},{"type":"INSERT","lineNumber":12,"content":"@Table(name = \"headends\")"},{"type":"INSERT","lineNumber":13,"content":"@Getter"},{"type":"INSERT","lineNumber":14,"content":"@Setter"},{"type":"INSERT","lineNumber":15,"content":"@NoArgsConstructor"},{"type":"INSERT","lineNumber":16,"content":"@AllArgsConstructor"},{"type":"INSERT","lineNumber":17,"content":"public class Headend {"},{"type":"DELETE","lineNumber":16,"oldContent":"@Table(name = \"headends\")"},{"type":"DELETE","lineNumber":19,"oldContent":"@Getter"},{"type":"DELETE","lineNumber":22,"oldContent":"@Setter"},{"type":"DELETE","lineNumber":25,"oldContent":"@NoArgsConstructor"},{"type":"DELETE","lineNumber":28,"oldContent":"@AllArgsConstructor"},{"type":"DELETE","lineNumber":30,"oldContent":"public class Headend {"}]},{"timestamp":1760781714863,"changes":[{"type":"DELETE","lineNumber":10,"oldContent":"@Table(name = \"headends\")"},{"type":"MODIFY","lineNumber":12,"content":"@Table(name = \"headends\")","oldContent":"@Getter"},{"type":"INSERT","lineNumber":13,"content":"@Getter"},{"type":"DELETE","lineNumber":15,"oldContent":""},{"type":"DELETE","lineNumber":17,"oldContent":"    @Id"},{"type":"INSERT","lineNumber":18,"content":""},{"type":"INSERT","lineNumber":19,"content":"    @Id"},{"type":"INSERT","lineNumber":27,"content":"    @Column(name = \"city\", nullable = false) // Match your DB column"},{"type":"INSERT","lineNumber":28,"content":"    private String city;"},{"type":"INSERT","lineNumber":29,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Fdh.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Fdh.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.util.Set;\n\n@Entity\n@Table(name = \"fdh\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Fdh {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"fdh_id\")\n    private Integer id;\n\n    private String name;\n    private String location;\n    private String region;\n    private int maxPorts;\n\n    // Many FDHs belong to one Headend\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"headend_id\") // This matches your SQL\n    private Headend headend;\n\n    // One FDH has many Splitters\n    @OneToMany(mappedBy = \"fdh\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)\n    private Set<Splitter> splitters;\n}","baseTimestamp":1760688876428,"deltas":[{"timestamp":1760689021326,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"DELETE","lineNumber":29,"oldContent":"    // Many FDHs belong to one Headend"},{"type":"MODIFY","lineNumber":30,"content":"    @JoinColumn(name = \"headend_id\")","oldContent":"    @JoinColumn(name = \"headend_id\") // This matches your SQL"},{"type":"DELETE","lineNumber":34,"oldContent":"    // One FDH has many Splitters"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Splitter.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Splitter.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.util.Set;\n\n@Entity\n@Table(name = \"splitters\") // I'll pluralize \"Splitter\" to follow convention\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Splitter {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"splitter_id\")\n    private Integer id;\n\n    private String model;\n    private int portCapacity;\n    private int usedPorts;\n    private String location;\n\n    // Many Splitters belong to one FDH\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"fdh_id\") // This matches your SQL\n    private Fdh fdh;\n\n    // One Splitter serves many Customers\n    @OneToMany(mappedBy = \"splitter\", fetch = FetchType.LAZY)\n    private Set<Customer> customers;\n\n    // One Splitter is the source for many Fiber Drop Lines\n    @OneToMany(mappedBy = \"splitter\", fetch = FetchType.LAZY)\n    private Set<FiberDropLine> fiberDropLines;\n}","baseTimestamp":1760688891459,"deltas":[{"timestamp":1760689033415,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"MODIFY","lineNumber":12,"content":"@Table(name = \"splitters\")","oldContent":"@Table(name = \"splitters\") // I'll pluralize \"Splitter\" to follow convention"},{"type":"DELETE","lineNumber":29,"oldContent":"    // Many Splitters belong to one FDH"},{"type":"MODIFY","lineNumber":30,"content":"    @JoinColumn(name = \"fdh_id\")","oldContent":"    @JoinColumn(name = \"fdh_id\") // This matches your SQL"},{"type":"DELETE","lineNumber":34,"oldContent":"    // One Splitter serves many Customers"},{"type":"DELETE","lineNumber":38,"oldContent":"    // One Splitter is the source for many Fiber Drop Lines"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Customer.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Customer.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport com.example.inventory.model.enums.ConnectionType;\nimport com.example.inventory.model.enums.CustomerStatus;\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport org.hibernate.annotations.CreationTimestamp;\nimport java.time.LocalDateTime;\nimport java.util.Set;\n\n@Entity\n@Table(name = \"customers\") // Pluralized\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Customer {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"customer_id\")\n    private Integer id;\n\n    private String name;\n\n    @Column(columnDefinition = \"TEXT\")\n    private String address;\n\n    private String neighborhood;\n    private String plan;\n\n    @Enumerated(EnumType.STRING)\n    private ConnectionType connectionType;\n\n    @Enumerated(EnumType.STRING)\n    private CustomerStatus status;\n\n    @Column(name = \"assigned_port\")\n    private int assignedPort;\n\n    @CreationTimestamp // Automatically sets the time when created\n    @Column(updatable = false)\n    private LocalDateTime createdAt;\n\n    // Many Customers are connected to one Splitter\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"splitter_id\") // This matches your SQL\n    private Splitter splitter;\n\n    // One Customer has many AssignedAssets (the join table)\n    @OneToMany(mappedBy = \"customer\", cascade = CascadeType.ALL, orphanRemoval = true)\n    private Set<AssignedAssets> assignedAssets;\n\n    // One Customer has one Fiber Drop Line\n    @OneToOne(mappedBy = \"customer\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)\n    private FiberDropLine fiberDropLine;\n\n    // One Customer can have many Deployment Tasks\n    @OneToMany(mappedBy = \"customer\", fetch = FetchType.LAZY)\n    private Set<DeploymentTask> deploymentTasks;\n}","baseTimestamp":1760688905904,"deltas":[{"timestamp":1760689049790,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.model.enums.ConnectionType;"},{"type":"MODIFY","lineNumber":4,"content":"// package com.example.inventory.entity;","oldContent":"import com.example.inventory.model.enums.CustomerStatus;"},{"type":"INSERT","lineNumber":5,"content":""},{"type":"INSERT","lineNumber":6,"content":"import com.example.inventory.enums.ConnectionType;"},{"type":"INSERT","lineNumber":7,"content":"import com.example.inventory.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":16,"oldContent":"@Table(name = \"customers\") // Pluralized"},{"type":"INSERT","lineNumber":18,"content":"@Table(name = \"customers\")"},{"type":"DELETE","lineNumber":45,"oldContent":"    @CreationTimestamp // Automatically sets the time when created"},{"type":"INSERT","lineNumber":47,"content":"    @CreationTimestamp"},{"type":"DELETE","lineNumber":49,"oldContent":"    // Many Customers are connected to one Splitter"},{"type":"MODIFY","lineNumber":52,"content":"    @JoinColumn(name = \"splitter_id\")","oldContent":"    @JoinColumn(name = \"splitter_id\") // This matches your SQL"},{"type":"DELETE","lineNumber":54,"oldContent":"    // One Customer has many AssignedAssets (the join table)"},{"type":"DELETE","lineNumber":58,"oldContent":"    // One Customer has one Fiber Drop Line"},{"type":"DELETE","lineNumber":62,"oldContent":"    // One Customer can have many Deployment Tasks"}]},{"timestamp":1760689216404,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.model;"},{"type":"DELETE","lineNumber":4,"oldContent":"// package com.example.inventory.entity;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.inventory.model.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":6,"oldContent":"import com.example.inventory.enums.ConnectionType;"},{"type":"DELETE","lineNumber":8,"oldContent":"import com.example.inventory.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":18,"oldContent":"@Getter"},{"type":"INSERT","lineNumber":14,"content":"@Getter"},{"type":"DELETE","lineNumber":47,"oldContent":"    @Column(updatable = false)"},{"type":"INSERT","lineNumber":43,"content":"    @Column(updatable = false)"},{"type":"DELETE","lineNumber":52,"oldContent":"    @JoinColumn(name = \"splitter_id\") // This matches your SQL"},{"type":"INSERT","lineNumber":48,"content":"    private Splitter splitter;"}]},{"timestamp":1760689220521,"changes":[{"type":"INSERT","lineNumber":3,"content":"import com.project.NetworkApp.enums.ConnectionType;"},{"type":"DELETE","lineNumber":9,"oldContent":"@Getter"},{"type":"INSERT","lineNumber":15,"content":"@Getter"},{"type":"DELETE","lineNumber":38,"oldContent":"    @Column(updatable = false)"},{"type":"DELETE","lineNumber":43,"oldContent":"    private Splitter splitter;"},{"type":"INSERT","lineNumber":44,"content":"    @Column(updatable = false)"},{"type":"INSERT","lineNumber":49,"content":"    private Splitter splitter;"}]},{"timestamp":1760689223747,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":43,"oldContent":"    @Column(updatable = false)"},{"type":"INSERT","lineNumber":45,"content":"    @Column(updatable = false)"}]},{"timestamp":1760791588293,"changes":[{"type":"INSERT","lineNumber":41,"content":"    "},{"type":"INSERT","lineNumber":42,"content":"    @Column(nullable = false)"},{"type":"INSERT","lineNumber":43,"content":"    private String city;"},{"type":"INSERT","lineNumber":44,"content":""},{"type":"INSERT","lineNumber":45,"content":""}]},{"timestamp":1760791604104,"changes":[{"type":"DELETE","lineNumber":41,"oldContent":"    "},{"type":"DELETE","lineNumber":42,"oldContent":"    @Column(name = \"assigned_port\")"},{"type":"INSERT","lineNumber":41,"content":""},{"type":"DELETE","lineNumber":44,"oldContent":"    private int assignedPort;"},{"type":"DELETE","lineNumber":48,"oldContent":"    @CreationTimestamp"},{"type":"INSERT","lineNumber":46,"content":"    @Column(name = \"assigned_port\")"},{"type":"INSERT","lineNumber":47,"content":"    private int assignedPort;"},{"type":"INSERT","lineNumber":49,"content":"    @CreationTimestamp"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Asset.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Asset.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport com.example.inventory.model.enums.AssetStatus;\nimport com.example.inventory.model.enums.AssetType;\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.time.LocalDateTime;\nimport java.util.Set;\n\n@Entity\n@Table(name = \"assets\") // Pluralized\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Asset {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"asset_id\")\n    private Integer id;\n\n    @Enumerated(EnumType.STRING)\n    private AssetType assetType;\n\n    private String model;\n\n    @Column(unique = true, nullable = false)\n    private String serialNumber;\n\n    @Enumerated(EnumType.STRING)\n    private AssetStatus status;\n\n    private String location; // e.g., \"Warehouse\", \"Customer Premise\"\n\n    // This field from your SQL is NOT a relationship, just a log\n    private Integer assignedToCustomerId;\n\n    private LocalDateTime assignedDate;\n\n    // One Asset can be in many assignments (though typically just one active)\n    @OneToMany(mappedBy = \"asset\", cascade = CascadeType.ALL, orphanRemoval = true)\n    private Set<AssignedAssets> assignments;\n}","baseTimestamp":1760688923074,"deltas":[{"timestamp":1760689060683,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.model.enums.AssetStatus;"},{"type":"MODIFY","lineNumber":4,"content":"import com.example.inventory.enums.AssetStatus;","oldContent":"import com.example.inventory.model.enums.AssetType;"},{"type":"INSERT","lineNumber":5,"content":"import com.example.inventory.enums.AssetType;"},{"type":"MODIFY","lineNumber":15,"content":"@Table(name = \"assets\")","oldContent":"@Table(name = \"assets\") // Pluralized"},{"type":"MODIFY","lineNumber":38,"content":"    private String location;","oldContent":"    private String location; // e.g., \"Warehouse\", \"Customer Premise\""},{"type":"DELETE","lineNumber":40,"oldContent":"    // This field from your SQL is NOT a relationship, just a log"},{"type":"DELETE","lineNumber":42,"oldContent":""},{"type":"DELETE","lineNumber":45,"oldContent":"    // One Asset can be in many assignments (though typically just one active)"}]},{"timestamp":1760689190309,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.enums.AssetStatus;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.inventory.model.enums.AssetType;"},{"type":"INSERT","lineNumber":4,"content":""}]},{"timestamp":1760689196482,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.enums.AssetType;"}]},{"timestamp":1760689199922,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.enums.AssetStatus;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/AssignedAssets.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/AssignedAssets.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport org.hibernate.annotations.CreationTimestamp;\nimport java.time.LocalDateTime;\n\n@Entity\n@Table(name = \"assigned_assets\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class AssignedAssets {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Integer id;\n\n    // Many assignments point to one Customer\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"customer_id\")\n    private Customer customer;\n\n    // Many assignments point to one Asset\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"asset_id\")\n    private Asset asset;\n\n    @CreationTimestamp\n    @Column(updatable = false)\n    private LocalDateTime assignedOn;\n}\n","baseTimestamp":1760688942074,"deltas":[{"timestamp":1760689071686,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"DELETE","lineNumber":24,"oldContent":"    // Many assignments point to one Customer"},{"type":"DELETE","lineNumber":29,"oldContent":"    // Many assignments point to one Asset"},{"type":"DELETE","lineNumber":38,"oldContent":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/FiberDropLine.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/FiberDropLine.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport com.example.inventory.model.enums.FiberLineStatus;\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.math.BigDecimal;\n\n@Entity\n@Table(name = \"fiber_drop_lines\") // Pluralized\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class FiberDropLine {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"line_id\")\n    private Integer id;\n\n    @Column(precision = 6, scale = 2)\n    private BigDecimal lengthMeters;\n\n    @Enumerated(EnumType.STRING)\n    private FiberLineStatus status;\n\n    // Many lines can come from one Splitter\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"from_splitter_id\")\n    private Splitter splitter;\n\n    // One line goes to one Customer\n    @OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"to_customer_id\", unique = true) // one-to-one\n    private Customer customer;\n}","baseTimestamp":1760688958408,"deltas":[{"timestamp":1760689100793,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"MODIFY","lineNumber":4,"content":"import com.example.inventory.enums.FiberLineStatus;","oldContent":"import com.example.inventory.model.enums.FiberLineStatus;"},{"type":"MODIFY","lineNumber":13,"content":"@Table(name = \"fiber_drop_lines\")","oldContent":"@Table(name = \"fiber_drop_lines\") // Pluralized"},{"type":"DELETE","lineNumber":31,"oldContent":"    // Many lines can come from one Splitter"},{"type":"DELETE","lineNumber":36,"oldContent":"    // One line goes to one Customer"},{"type":"DELETE","lineNumber":38,"oldContent":"    @JoinColumn(name = \"to_customer_id\", unique = true) // one-to-one"},{"type":"INSERT","lineNumber":36,"content":"    @JoinColumn(name = \"to_customer_id\", unique = true)"}]},{"timestamp":1760689251793,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.entity;"},{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.enums.FiberLineStatus;"},{"type":"MODIFY","lineNumber":34,"content":"    @JoinColumn(name = \"to_customer_id\", unique = true)","oldContent":"    @JoinColumn(name = \"to_customer_id\", unique = true)"}]},{"timestamp":1760689256375,"changes":[{"type":"INSERT","lineNumber":3,"content":"import com.project.NetworkApp.enums.FiberLineStatus;"},{"type":"DELETE","lineNumber":32,"oldContent":"    @JoinColumn(name = \"to_customer_id\", unique = true)"},{"type":"MODIFY","lineNumber":33,"content":"","oldContent":"    @JoinColumn(name = \"to_customer_id\", unique = true)"},{"type":"INSERT","lineNumber":35,"content":"    @JoinColumn(name = \"to_customer_id\", unique = true)"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Technician.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Technician.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.util.Set;\n\n@Entity\n@Table(name = \"technicians\") // Pluralized\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Technician {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"technician_id\")\n    private Integer id;\n\n    private String name;\n    private String contact;\n    private String region;\n\n    // One Technician has many Deployment Tasks\n    @OneToMany(mappedBy = \"technician\", fetch = FetchType.LAZY)\n    private Set<DeploymentTask> deploymentTasks;\n}\n","baseTimestamp":1760688982703,"deltas":[{"timestamp":1760689111680,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"MODIFY","lineNumber":12,"content":"@Table(name = \"technicians\")","oldContent":"@Table(name = \"technicians\") // Pluralized"},{"type":"DELETE","lineNumber":28,"oldContent":"    // One Technician has many Deployment Tasks"}]},{"timestamp":1761035064691,"changes":[{"type":"INSERT","lineNumber":28,"content":"    @OneToOne(fetch = FetchType.LAZY)"},{"type":"INSERT","lineNumber":29,"content":"    @JoinColumn(name = \"user_id\", unique = true) // Maps to the DB column"},{"type":"INSERT","lineNumber":30,"content":"    private User user;"},{"type":"INSERT","lineNumber":31,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/DeploymentTask.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/DeploymentTask.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.entity;\n\nimport com.example.inventory.enums.TaskStatus;\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.time.LocalDate;\n\n@Entity\n@Table(name = \"deployment_tasks\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class DeploymentTask {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"task_id\")\n    private Integer id;\n\n    @Enumerated(EnumType.STRING)\n    private TaskStatus status;\n\n    private LocalDate scheduledDate;\n\n    @Column(columnDefinition = \"TEXT\")\n    private String notes;\n\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"customer_id\")\n    private Customer customer;\n\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"technician_id\")\n    private Technician technician;\n}\n","baseTimestamp":1760689126852,"deltas":[{"timestamp":1760689232380,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.entity;"},{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.enums.TaskStatus;"}]},{"timestamp":1760689239904,"changes":[{"type":"INSERT","lineNumber":3,"content":"import com.project.NetworkApp.enums.TaskStatus;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/User.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/User.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.entity;\n\nimport com.example.inventory.enums.UserRole;\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.time.LocalDateTime;\n\n@Entity\n@Table(name = \"users\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class User {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"user_id\")\n    private Integer id;\n\n    @Column(unique = true, nullable = false)\n    private String username;\n\n    @Column(name = \"password_hash\", nullable = false)\n    private String password;\n\n    @Enumerated(EnumType.STRING)\n    private UserRole role;\n\n    private LocalDateTime lastLogin;\n}","baseTimestamp":1760689161738,"deltas":[{"timestamp":1760689297234,"changes":[{"type":"MODIFY","lineNumber":4,"content":"","oldContent":"import com.example.inventory.enums.UserRole;"}]},{"timestamp":1760689301590,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.enums.UserRole;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/AuditLog.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/AuditLog.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.entity;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport org.hibernate.annotations.CreationTimestamp;\nimport java.time.LocalDateTime;\n\n@Entity\n@Table(name = \"audit_logs\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class AuditLog {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"log_id\")\n    private Long id;\n\n    private Integer userId;\n\n    private String actionType;\n\n    @Column(columnDefinition = \"TEXT\")\n    private String description;\n\n    @CreationTimestamp\n    @Column(updatable = false)\n    private LocalDateTime timestamp;\n}","baseTimestamp":1760689173797},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/CustomerRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/CustomerRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\n// package com.example.inventory.repository;\n\nimport com.example.inventory.entity.Customer;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.List;\n\n/**\n * Repository interface for Customer entity.\n * JpaRepository gives us CRUD (Create, Read, Update, Delete) methods for free.\n * The two generic types are the Entity class (Customer) and the type of its Primary Key (Integer).\n */\n@Repository\npublic interface CustomerRepository extends JpaRepository<Customer, Integer> {\n\n    // Spring Data JPA is smart. It can create queries from method names.\n    // This method will automatically generate a query like:\n    // \"SELECT c FROM Customer c WHERE c.neighborhood = ?1\"\n    List<Customer> findByNeighborhood(String neighborhood);\n\n    // This method will find all customers with a specific status.\n    List<Customer> findByStatus(com.example.inventory.enums.CustomerStatus status);\n\n}","baseTimestamp":1760692554539,"deltas":[{"timestamp":1760692564804,"changes":[{"type":"DELETE","lineNumber":1,"oldContent":""},{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.repository;"},{"type":"DELETE","lineNumber":3,"oldContent":""},{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.entity.Customer;"}]},{"timestamp":1760692568349,"changes":[{"type":"INSERT","lineNumber":1,"content":"import com.project.NetworkApp.entity.Customer;"}]},{"timestamp":1760692587789,"changes":[{"type":"DELETE","lineNumber":7,"oldContent":"/**"},{"type":"DELETE","lineNumber":8,"oldContent":" * Repository interface for Customer entity."},{"type":"DELETE","lineNumber":9,"oldContent":" * JpaRepository gives us CRUD (Create, Read, Update, Delete) methods for free."},{"type":"DELETE","lineNumber":10,"oldContent":" * The two generic types are the Entity class (Customer) and the type of its Primary Key (Integer)."},{"type":"DELETE","lineNumber":11,"oldContent":" */"}]},{"timestamp":1760692601197,"changes":[{"type":"DELETE","lineNumber":10,"oldContent":"    // Spring Data JPA is smart. It can create queries from method names."},{"type":"DELETE","lineNumber":11,"oldContent":"    // This method will automatically generate a query like:"},{"type":"DELETE","lineNumber":12,"oldContent":"    // \"SELECT c FROM Customer c WHERE c.neighborhood = ?1\""}]},{"timestamp":1760692606647,"changes":[{"type":"MODIFY","lineNumber":12,"content":"   ","oldContent":"    // This method will find all customers with a specific status."}]},{"timestamp":1760692638352,"changes":[{"type":"MODIFY","lineNumber":13,"content":"    List<Customer> findByStatus(com.project.NetworkApp.enums.CustomerStatus status);","oldContent":"    List<Customer> findByStatus(com.example.inventory.enums.CustomerStatus status);"}]},{"timestamp":1760692641119,"changes":[{"type":"MODIFY","lineNumber":12,"content":"","oldContent":"   "}]},{"timestamp":1760786777500,"changes":[{"type":"INSERT","lineNumber":15,"content":"    List<Customer> findByStatus(CustomerStatus status);"},{"type":"INSERT","lineNumber":16,"content":""}]},{"timestamp":1760786781327,"changes":[{"type":"INSERT","lineNumber":2,"content":"import com.project.NetworkApp.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":16,"oldContent":"}"},{"type":"INSERT","lineNumber":18,"content":"}"}]},{"timestamp":1760786810467,"changes":[{"type":"MODIFY","lineNumber":14,"content":"   ","oldContent":"    List<Customer> findByStatus(com.project.NetworkApp.enums.CustomerStatus status);"}]},{"timestamp":1760786827009,"changes":[{"type":"MODIFY","lineNumber":15,"content":"","oldContent":"   "}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/CustomerDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/CustomerDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\n// package com.example.inventory.dto;\n\nimport com.example.inventory.enums.ConnectionType;\nimport com.example.inventory.enums.CustomerStatus;\nimport java.time.LocalDateTime;\n\n/**\n * DTO for transferring Customer data. This is the object that will be\n * sent and received in our REST API's request and response bodies.\n *\n * We use a Java 'record' for this because it's immutable and provides\n * constructor, getters, equals(), hashCode(), and toString() automatically.\n */\npublic record CustomerDTO(\n        Integer id,\n        String name,\n        String address,\n        String neighborhood,\n        String plan,\n        ConnectionType connectionType,\n        CustomerStatus status,\n        int assignedPort,\n        LocalDateTime createdAt,\n\n        // We include the ID of the related entity, not the whole object.\n        // This is a best practice for clean APIs.\n        Integer splitterId\n) {\n}","baseTimestamp":1760692706331,"deltas":[{"timestamp":1760692713328,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.enums.ConnectionType;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.inventory.enums.CustomerStatus;"},{"type":"INSERT","lineNumber":4,"content":""}]},{"timestamp":1760692716978,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.enums.ConnectionType;"},{"type":"INSERT","lineNumber":6,"content":""}]},{"timestamp":1760692720929,"changes":[{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.enums.CustomerStatus;"},{"type":"INSERT","lineNumber":7,"content":""},{"type":"DELETE","lineNumber":8,"oldContent":""}]},{"timestamp":1760879653687,"changes":[{"type":"INSERT","lineNumber":7,"content":""},{"type":"DELETE","lineNumber":9,"oldContent":""},{"type":"INSERT","lineNumber":21,"content":"        String city,"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/CustomerService.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/CustomerService.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.example.inventory.service;\n\nimport com.example.inventory.dto.CustomerDTO;\nimport java.util.List;\n\n/**\n * Interface for customer-related business logic.\n * This defines the contract for our Customer service, outlining the operations\n * that can be performed.\n */\npublic interface CustomerService {\n\n    /**\n     * Creates a new customer.\n     * @param customerDTO The DTO containing the new customer's data.\n     * @return The DTO of the newly created customer.\n     */\n    CustomerDTO createCustomer(CustomerDTO customerDTO);\n\n    /**\n     * Retrieves a customer by their ID.\n     * @param id The ID of the customer to retrieve.\n     * @return The DTO of the found customer, or throws an exception if not found.\n     */\n    CustomerDTO getCustomerById(Integer id);\n\n    /**\n     * Retrieves all customers.\n     * @return A list of all customer DTOs.\n     */\n    List<CustomerDTO> getAllCustomers();\n\n    // We will add update and delete methods later.\n}","baseTimestamp":1760693144348,"deltas":[{"timestamp":1760693154986,"changes":[{"type":"MODIFY","lineNumber":4,"content":"","oldContent":"import com.example.inventory.dto.CustomerDTO;"}]},{"timestamp":1760693158112,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.DTO.CustomerDTO;"},{"type":"INSERT","lineNumber":6,"content":""}]},{"timestamp":1760694604546,"changes":[{"type":"INSERT","lineNumber":6,"content":""},{"type":"DELETE","lineNumber":8,"oldContent":""},{"type":"INSERT","lineNumber":36,"content":"    CustomerDTO updateCustomer(Integer id, CustomerDTO customerDTO);"},{"type":"INSERT","lineNumber":37,"content":""},{"type":"INSERT","lineNumber":38,"content":"    /**"},{"type":"INSERT","lineNumber":39,"content":"     * Deactivates a customer (sets their status to INACTIVE)."},{"type":"INSERT","lineNumber":40,"content":"     * @param id The ID of the customer to deactivate."},{"type":"INSERT","lineNumber":41,"content":"     */"},{"type":"INSERT","lineNumber":42,"content":"    void deactivateCustomer(Integer id);"},{"type":"INSERT","lineNumber":43,"content":""}]},{"timestamp":1760786823021,"changes":[{"type":"DELETE","lineNumber":37,"oldContent":"    // We will add update and delete methods later."},{"type":"DELETE","lineNumber":39,"oldContent":"}"},{"type":"DELETE","lineNumber":41,"oldContent":""},{"type":"MODIFY","lineNumber":42,"content":"    void deactivateCustomer(Integer id);","oldContent":"    void deactivateCustomer(Integer id);"},{"type":"INSERT","lineNumber":43,"content":""},{"type":"INSERT","lineNumber":44,"content":"    List<CustomerDTO> getCustomersByStatus(CustomerStatus status);"},{"type":"INSERT","lineNumber":45,"content":""},{"type":"INSERT","lineNumber":46,"content":"    // We will add update and delete methods later."},{"type":"INSERT","lineNumber":47,"content":"}"}]},{"timestamp":1760786826649,"changes":[{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.enums.CustomerStatus;"},{"type":"INSERT","lineNumber":40,"content":"     * Deactivates a customer (sets their status to INACTIVE)."},{"type":"INSERT","lineNumber":41,"content":"     * @param id The ID of the customer to deactivate."},{"type":"INSERT","lineNumber":42,"content":"     */"},{"type":"DELETE","lineNumber":41,"oldContent":"    void deactivateCustomer(Integer id);"},{"type":"DELETE","lineNumber":43,"oldContent":"     * @param id The ID of the customer to deactivate."},{"type":"DELETE","lineNumber":45,"oldContent":"     */"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/SplitterRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/SplitterRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\n// package com.example.inventory.repository;\n\nimport com.example.inventory.entity.Splitter;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface SplitterRepository extends JpaRepository<Splitter, Integer> {\n    // You can add custom query methods here later if needed\n}","baseTimestamp":1760693196310,"deltas":[{"timestamp":1760693199353,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.entity.Splitter;"}]},{"timestamp":1760693202448,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.entity.Splitter;"}]},{"timestamp":1760791661809,"changes":[{"type":"INSERT","lineNumber":10,"content":""},{"type":"INSERT","lineNumber":11,"content":"    List<Splitter> findByFdhId(Integer fdhId);"}]},{"timestamp":1760791677072,"changes":[{"type":"INSERT","lineNumber":8,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":9,"content":""},{"type":"DELETE","lineNumber":11,"oldContent":"    // You can add custom query methods here later if needed"},{"type":"INSERT","lineNumber":14,"content":"    // You can add custom query methods here later if needed"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/CustomerServiceImpl.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/CustomerServiceImpl.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.example.inventory.service;\n\nimport com.example.inventory.dto.CustomerDTO;\nimport com.example.inventory.entity.Customer;\nimport com.example.inventory.entity.Splitter;\nimport com.example.inventory.repository.CustomerRepository;\nimport com.example.inventory.repository.SplitterRepository; // We'll need this soon\nimport jakarta.persistence.EntityNotFoundException;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n/**\n * Implementation of the CustomerService interface.\n * This class contains the core business logic for customer operations.\n */\n@Service // Marks this class as a Spring service bean\n@RequiredArgsConstructor // Lombok annotation to create a constructor for all final fields\npublic class CustomerServiceImpl implements CustomerService {\n\n    // Dependency Injection: Spring will automatically provide an instance of our repository.\n    private final CustomerRepository customerRepository;\n\n    // We inject the SplitterRepository to link a customer to a splitter.\n    // You will need to create this repository interface similar to CustomerRepository.\n    private final SplitterRepository splitterRepository;\n\n    @Override\n    public CustomerDTO createCustomer(CustomerDTO customerDTO) {\n        // 1. Convert the incoming DTO to a Customer entity\n        Customer customer = toEntity(customerDTO);\n\n        // 2. Save the new Customer entity using the repository\n        Customer savedCustomer = customerRepository.save(customer);\n\n        // 3. Convert the saved entity back to a DTO to return to the caller\n        return toDTO(savedCustomer);\n    }\n\n    @Override\n    public CustomerDTO getCustomerById(Integer id) {\n        // Find the customer by ID or throw an exception if it doesn't exist\n        Customer customer = customerRepository.findById(id)\n                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));\n        return toDTO(customer);\n    }\n\n    @Override\n    public List<CustomerDTO> getAllCustomers() {\n        // Fetch all customers from the database\n        List<Customer> customers = customerRepository.findAll();\n\n        // Convert the list of entities to a list of DTOs and return it\n        return customers.stream()\n                .map(this::toDTO)\n                .collect(Collectors.toList());\n    }\n\n    // --- Private Helper Methods (Mappers) ---\n\n    /**\n     * Converts a Customer entity to a CustomerDTO.\n     */\n    private CustomerDTO toDTO(Customer customer) {\n        return new CustomerDTO(\n                customer.getId(),\n                customer.getName(),\n                customer.getAddress(),\n                customer.getNeighborhood(),\n                customer.getPlan(),\n                customer.getConnectionType(),\n                customer.getStatus(),\n                customer.getAssignedPort(),\n                customer.getCreatedAt(),\n                // Safely get the splitter ID, handling the case where it might be null\n                customer.getSplitter() != null ? customer.getSplitter().getId() : null\n        );\n    }\n\n    /**\n     * Converts a CustomerDTO to a Customer entity.\n     */\n    private Customer toEntity(CustomerDTO dto) {\n        Customer customer = new Customer();\n        customer.setName(dto.name());\n        customer.setAddress(dto.address());\n        customer.setNeighborhood(dto.neighborhood());\n        customer.setPlan(dto.plan());\n        customer.setConnectionType(dto.connectionType());\n        customer.setStatus(dto.status());\n        customer.setAssignedPort(dto.assignedPort());\n\n        // Find the associated Splitter and link it\n        if (dto.splitterId() != null) {\n            Splitter splitter = splitterRepository.findById(dto.splitterId())\n                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + dto.splitterId()));\n            customer.setSplitter(splitter);\n        }\n\n        return customer;\n    }\n}","baseTimestamp":1760693243855,"deltas":[{"timestamp":1760693271088,"changes":[{"type":"DELETE","lineNumber":7,"oldContent":"import jakarta.persistence.EntityNotFoundException;"},{"type":"INSERT","lineNumber":8,"content":"import com.project.NetworkApp.entity.Splitter;"},{"type":"INSERT","lineNumber":9,"content":"import jakarta.persistence.EntityNotFoundException;"}]},{"timestamp":1760694628664,"changes":[{"type":"MODIFY","lineNumber":8,"content":"import com.project.NetworkApp.entity.Splitter;","oldContent":"import com.project.NetworkApp.entity.Splitter;"},{"type":"INSERT","lineNumber":105,"content":""},{"type":"INSERT","lineNumber":106,"content":"    @Override"},{"type":"INSERT","lineNumber":107,"content":"    public CustomerDTO updateCustomer(Integer id, CustomerDTO customerDTO) {"},{"type":"INSERT","lineNumber":108,"content":"        // 1. Find the existing customer"},{"type":"INSERT","lineNumber":109,"content":"        Customer existingCustomer = customerRepository.findById(id)"},{"type":"INSERT","lineNumber":110,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"INSERT","lineNumber":111,"content":""},{"type":"INSERT","lineNumber":112,"content":"        // 2. Update the entity's fields from the DTO"},{"type":"INSERT","lineNumber":113,"content":"        existingCustomer.setName(customerDTO.name());"},{"type":"INSERT","lineNumber":114,"content":"        existingCustomer.setAddress(customerDTO.address());"},{"type":"INSERT","lineNumber":115,"content":"        existingCustomer.setNeighborhood(customerDTO.neighborhood());"},{"type":"INSERT","lineNumber":116,"content":"        existingCustomer.setPlan(customerDTO.plan());"},{"type":"INSERT","lineNumber":117,"content":"        existingCustomer.setConnectionType(customerDTO.connectionType());"},{"type":"INSERT","lineNumber":118,"content":"        existingCustomer.setStatus(customerDTO.status());"},{"type":"INSERT","lineNumber":119,"content":"        existingCustomer.setAssignedPort(customerDTO.assignedPort());"},{"type":"INSERT","lineNumber":120,"content":""},{"type":"INSERT","lineNumber":121,"content":"        // 3. Handle the relationship with Splitter"},{"type":"INSERT","lineNumber":122,"content":"        if (customerDTO.splitterId() != null) {"},{"type":"INSERT","lineNumber":123,"content":"            Splitter splitter = splitterRepository.findById(customerDTO.splitterId())"},{"type":"INSERT","lineNumber":124,"content":"                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + customerDTO.splitterId()));"},{"type":"INSERT","lineNumber":125,"content":"            existingCustomer.setSplitter(splitter);"},{"type":"INSERT","lineNumber":126,"content":"        } else {"},{"type":"INSERT","lineNumber":127,"content":"            existingCustomer.setSplitter(null);"},{"type":"INSERT","lineNumber":128,"content":"        }"},{"type":"INSERT","lineNumber":129,"content":""},{"type":"INSERT","lineNumber":130,"content":"        // 4. Save the updated entity"},{"type":"INSERT","lineNumber":131,"content":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"INSERT","lineNumber":132,"content":""},{"type":"INSERT","lineNumber":133,"content":"        // 5. Return the updated DTO"},{"type":"INSERT","lineNumber":134,"content":"        return toDTO(updatedCustomer);"},{"type":"INSERT","lineNumber":135,"content":"    }"},{"type":"INSERT","lineNumber":136,"content":""},{"type":"INSERT","lineNumber":137,"content":"    @Override"},{"type":"INSERT","lineNumber":138,"content":"    public void deactivateCustomer(Integer id) {"},{"type":"INSERT","lineNumber":139,"content":"        // 1. Find the existing customer"},{"type":"INSERT","lineNumber":140,"content":"        Customer customer = customerRepository.findById(id)"},{"type":"INSERT","lineNumber":141,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"INSERT","lineNumber":142,"content":""},{"type":"INSERT","lineNumber":143,"content":"        // 2. Change the status to INACTIVE"},{"type":"INSERT","lineNumber":144,"content":"        customer.setStatus(CustomerStatus.INACTIVE);"},{"type":"INSERT","lineNumber":145,"content":""},{"type":"INSERT","lineNumber":146,"content":"        // 3. Save the change"},{"type":"INSERT","lineNumber":147,"content":"        customerRepository.save(customer);"},{"type":"INSERT","lineNumber":148,"content":"    }"}]},{"timestamp":1760694632000,"changes":[{"type":"INSERT","lineNumber":7,"content":"import com.project.NetworkApp.entity.Customer;"},{"type":"MODIFY","lineNumber":9,"content":"import com.project.NetworkApp.enums.CustomerStatus;","oldContent":"import com.project.NetworkApp.entity.Splitter;"},{"type":"DELETE","lineNumber":106,"oldContent":"}"},{"type":"DELETE","lineNumber":108,"oldContent":"    }"},{"type":"DELETE","lineNumber":110,"oldContent":"        customerRepository.save(customer);"},{"type":"DELETE","lineNumber":112,"oldContent":"        // 3. Save the change"},{"type":"DELETE","lineNumber":114,"oldContent":""},{"type":"DELETE","lineNumber":116,"oldContent":"        customer.setStatus(CustomerStatus.INACTIVE);"},{"type":"DELETE","lineNumber":118,"oldContent":"        // 2. Change the status to INACTIVE"},{"type":"DELETE","lineNumber":120,"oldContent":""},{"type":"DELETE","lineNumber":122,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"DELETE","lineNumber":124,"oldContent":"        Customer customer = customerRepository.findById(id)"},{"type":"DELETE","lineNumber":126,"oldContent":"        // 1. Find the existing customer"},{"type":"DELETE","lineNumber":128,"oldContent":"    public void deactivateCustomer(Integer id) {"},{"type":"DELETE","lineNumber":130,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":132,"oldContent":""},{"type":"DELETE","lineNumber":134,"oldContent":"    }"},{"type":"DELETE","lineNumber":136,"oldContent":"        return toDTO(updatedCustomer);"},{"type":"DELETE","lineNumber":138,"oldContent":"        // 5. Return the updated DTO"},{"type":"DELETE","lineNumber":140,"oldContent":""},{"type":"DELETE","lineNumber":142,"oldContent":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"DELETE","lineNumber":144,"oldContent":"        // 4. Save the updated entity"},{"type":"DELETE","lineNumber":146,"oldContent":""},{"type":"DELETE","lineNumber":148,"oldContent":"        }"},{"type":"INSERT","lineNumber":129,"content":"        }"},{"type":"INSERT","lineNumber":130,"content":""},{"type":"INSERT","lineNumber":131,"content":"        // 4. Save the updated entity"},{"type":"INSERT","lineNumber":132,"content":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"INSERT","lineNumber":133,"content":""},{"type":"INSERT","lineNumber":134,"content":"        // 5. Return the updated DTO"},{"type":"INSERT","lineNumber":135,"content":"        return toDTO(updatedCustomer);"},{"type":"INSERT","lineNumber":136,"content":"    }"},{"type":"INSERT","lineNumber":137,"content":""},{"type":"INSERT","lineNumber":138,"content":"    @Override"},{"type":"INSERT","lineNumber":139,"content":"    public void deactivateCustomer(Integer id) {"},{"type":"INSERT","lineNumber":140,"content":"        // 1. Find the existing customer"},{"type":"INSERT","lineNumber":141,"content":"        Customer customer = customerRepository.findById(id)"},{"type":"INSERT","lineNumber":142,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"INSERT","lineNumber":143,"content":""},{"type":"INSERT","lineNumber":144,"content":"        // 2. Change the status to INACTIVE"},{"type":"INSERT","lineNumber":145,"content":"        customer.setStatus(CustomerStatus.INACTIVE);"},{"type":"INSERT","lineNumber":146,"content":""},{"type":"INSERT","lineNumber":147,"content":"        // 3. Save the change"},{"type":"INSERT","lineNumber":148,"content":"        customerRepository.save(customer);"},{"type":"INSERT","lineNumber":149,"content":"    }"},{"type":"INSERT","lineNumber":150,"content":"}"}]},{"timestamp":1760695022364,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.service;"},{"type":"DELETE","lineNumber":3,"oldContent":" // We'll need this soon"},{"type":"DELETE","lineNumber":4,"oldContent":"import com.project.NetworkApp.DTO.CustomerDTO;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.project.NetworkApp.Repository.CustomerRepository;"},{"type":"DELETE","lineNumber":6,"oldContent":"import com.project.NetworkApp.Repository.SplitterRepository;"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.project.NetworkApp.entity.Customer;"},{"type":"DELETE","lineNumber":8,"oldContent":"import com.project.NetworkApp.entity.Splitter;"},{"type":"DELETE","lineNumber":9,"oldContent":"import com.project.NetworkApp.entity.Splitter;"},{"type":"DELETE","lineNumber":10,"oldContent":"import com.project.NetworkApp.enums.CustomerStatus;"},{"type":"INSERT","lineNumber":2,"content":"/// package com.example.inventory.service;"},{"type":"INSERT","lineNumber":3,"content":""},{"type":"INSERT","lineNumber":4,"content":"import com.example.inventory.dto.CustomerDTO;"},{"type":"INSERT","lineNumber":5,"content":"import com.example.inventory.entity.Customer;"},{"type":"INSERT","lineNumber":6,"content":"import com.example.inventory.enums.CustomerStatus;"},{"type":"INSERT","lineNumber":7,"content":"import com.example.inventory.repository.CustomerRepository;"},{"type":"INSERT","lineNumber":8,"content":"import com.example.inventory.repository.SplitterRepository;"},{"type":"INSERT","lineNumber":9,"content":"import com.example.inventory.util.CustomerUtility; // <-- IMPORT THE UTILITY"},{"type":"INSERT","lineNumber":10,"content":"import jakarta.persistence.EntityNotFoundException;"},{"type":"DELETE","lineNumber":17,"oldContent":"/**"},{"type":"DELETE","lineNumber":18,"oldContent":" * Implementation of the CustomerService interface."},{"type":"DELETE","lineNumber":19,"oldContent":" * This class contains the core business logic for customer operations."},{"type":"DELETE","lineNumber":20,"oldContent":" */"},{"type":"DELETE","lineNumber":21,"oldContent":"@Service // Marks this class as a Spring service bean"},{"type":"DELETE","lineNumber":22,"oldContent":"@RequiredArgsConstructor // Lombok annotation to create a constructor for all final fields"},{"type":"INSERT","lineNumber":17,"content":"@Service"},{"type":"INSERT","lineNumber":18,"content":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":25,"oldContent":"    // Dependency Injection: Spring will automatically provide an instance of our repository."},{"type":"INSERT","lineNumber":22,"content":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"DELETE","lineNumber":28,"oldContent":"    // We inject the SplitterRepository to link a customer to a splitter."},{"type":"DELETE","lineNumber":29,"oldContent":"    // You will need to create this repository interface similar to CustomerRepository."},{"type":"DELETE","lineNumber":30,"oldContent":"    private final SplitterRepository splitterRepository;"},{"type":"DELETE","lineNumber":31,"oldContent":""},{"type":"DELETE","lineNumber":34,"oldContent":"        // 1. Convert the incoming DTO to a Customer entity"},{"type":"DELETE","lineNumber":35,"oldContent":"        Customer customer = toEntity(customerDTO);"},{"type":"DELETE","lineNumber":36,"oldContent":""},{"type":"DELETE","lineNumber":37,"oldContent":"        // 2. Save the new Customer entity using the repository"},{"type":"INSERT","lineNumber":26,"content":"        // Pass the repository to the utility method"},{"type":"INSERT","lineNumber":27,"content":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":39,"oldContent":""},{"type":"DELETE","lineNumber":40,"oldContent":"        // 3. Convert the saved entity back to a DTO to return to the caller"},{"type":"DELETE","lineNumber":41,"oldContent":"        return toDTO(savedCustomer);"},{"type":"INSERT","lineNumber":29,"content":"        return CustomerUtility.toDTO(savedCustomer);"},{"type":"DELETE","lineNumber":46,"oldContent":"        // Find the customer by ID or throw an exception if it doesn't exist"},{"type":"DELETE","lineNumber":49,"oldContent":"        return toDTO(customer);"},{"type":"INSERT","lineNumber":36,"content":"        return CustomerUtility.toDTO(customer);"},{"type":"DELETE","lineNumber":54,"oldContent":"        // Fetch all customers from the database"},{"type":"DELETE","lineNumber":55,"oldContent":"        List<Customer> customers = customerRepository.findAll();"},{"type":"DELETE","lineNumber":56,"oldContent":""},{"type":"DELETE","lineNumber":57,"oldContent":"        // Convert the list of entities to a list of DTOs and return it"},{"type":"DELETE","lineNumber":58,"oldContent":"        return customers.stream()"},{"type":"DELETE","lineNumber":59,"oldContent":"                .map(this::toDTO)"},{"type":"INSERT","lineNumber":41,"content":"        return customerRepository.findAll().stream()"},{"type":"INSERT","lineNumber":42,"content":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"DELETE","lineNumber":63,"oldContent":"    // --- Private Helper Methods (Mappers) ---"},{"type":"DELETE","lineNumber":64,"oldContent":""},{"type":"DELETE","lineNumber":65,"oldContent":"    /**"},{"type":"DELETE","lineNumber":66,"oldContent":"     * Converts a Customer entity to a CustomerDTO."},{"type":"DELETE","lineNumber":67,"oldContent":"     */"},{"type":"DELETE","lineNumber":68,"oldContent":"    private CustomerDTO toDTO(Customer customer) {"},{"type":"DELETE","lineNumber":69,"oldContent":"        return new CustomerDTO("},{"type":"DELETE","lineNumber":70,"oldContent":"                customer.getId(),"},{"type":"DELETE","lineNumber":71,"oldContent":"                customer.getName(),"},{"type":"DELETE","lineNumber":72,"oldContent":"                customer.getAddress(),"},{"type":"DELETE","lineNumber":73,"oldContent":"                customer.getNeighborhood(),"},{"type":"DELETE","lineNumber":74,"oldContent":"                customer.getPlan(),"},{"type":"DELETE","lineNumber":75,"oldContent":"                customer.getConnectionType(),"},{"type":"DELETE","lineNumber":76,"oldContent":"                customer.getStatus(),"},{"type":"DELETE","lineNumber":77,"oldContent":"                customer.getAssignedPort(),"},{"type":"DELETE","lineNumber":78,"oldContent":"                customer.getCreatedAt(),"},{"type":"DELETE","lineNumber":79,"oldContent":"                // Safely get the splitter ID, handling the case where it might be null"},{"type":"DELETE","lineNumber":80,"oldContent":"                customer.getSplitter() != null ? customer.getSplitter().getId() : null"},{"type":"DELETE","lineNumber":81,"oldContent":"        );"},{"type":"DELETE","lineNumber":82,"oldContent":"    }"},{"type":"DELETE","lineNumber":83,"oldContent":""},{"type":"DELETE","lineNumber":84,"oldContent":"    /**"},{"type":"DELETE","lineNumber":85,"oldContent":"     * Converts a CustomerDTO to a Customer entity."},{"type":"DELETE","lineNumber":86,"oldContent":"     */"},{"type":"DELETE","lineNumber":87,"oldContent":"    private Customer toEntity(CustomerDTO dto) {"},{"type":"DELETE","lineNumber":88,"oldContent":"        Customer customer = new Customer();"},{"type":"DELETE","lineNumber":89,"oldContent":"        customer.setName(dto.name());"},{"type":"DELETE","lineNumber":90,"oldContent":"        customer.setAddress(dto.address());"},{"type":"DELETE","lineNumber":91,"oldContent":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"DELETE","lineNumber":92,"oldContent":"        customer.setPlan(dto.plan());"},{"type":"DELETE","lineNumber":93,"oldContent":"        customer.setConnectionType(dto.connectionType());"},{"type":"DELETE","lineNumber":94,"oldContent":"        customer.setStatus(dto.status());"},{"type":"DELETE","lineNumber":95,"oldContent":"        customer.setAssignedPort(dto.assignedPort());"},{"type":"DELETE","lineNumber":96,"oldContent":""},{"type":"DELETE","lineNumber":97,"oldContent":"        // Find the associated Splitter and link it"},{"type":"DELETE","lineNumber":98,"oldContent":"        if (dto.splitterId() != null) {"},{"type":"DELETE","lineNumber":99,"oldContent":"            Splitter splitter = splitterRepository.findById(dto.splitterId())"},{"type":"DELETE","lineNumber":100,"oldContent":"                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + dto.splitterId()));"},{"type":"DELETE","lineNumber":101,"oldContent":"            customer.setSplitter(splitter);"},{"type":"DELETE","lineNumber":102,"oldContent":"        }"},{"type":"DELETE","lineNumber":103,"oldContent":""},{"type":"DELETE","lineNumber":104,"oldContent":"        return customer;"},{"type":"DELETE","lineNumber":105,"oldContent":"    }"},{"type":"DELETE","lineNumber":106,"oldContent":""},{"type":"DELETE","lineNumber":109,"oldContent":"        // 1. Find the existing customer"},{"type":"DELETE","lineNumber":110,"oldContent":"        Customer existingCustomer = customerRepository.findById(id)"},{"type":"DELETE","lineNumber":111,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"DELETE","lineNumber":112,"oldContent":""},{"type":"DELETE","lineNumber":113,"oldContent":"        // 2. Update the entity's fields from the DTO"},{"type":"DELETE","lineNumber":114,"oldContent":"        existingCustomer.setName(customerDTO.name());"},{"type":"DELETE","lineNumber":115,"oldContent":"        existingCustomer.setAddress(customerDTO.address());"},{"type":"DELETE","lineNumber":116,"oldContent":"        existingCustomer.setNeighborhood(customerDTO.neighborhood());"},{"type":"DELETE","lineNumber":117,"oldContent":"        existingCustomer.setPlan(customerDTO.plan());"},{"type":"INSERT","lineNumber":48,"content":"        // Ensure the customer exists before proceeding"},{"type":"INSERT","lineNumber":49,"content":"        if (!customerRepository.existsById(id)) {"},{"type":"INSERT","lineNumber":50,"content":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"DELETE","lineNumber":119,"oldContent":"        existingCustomer.setConnectionType(customerDTO.connectionType());"},{"type":"DELETE","lineNumber":121,"oldContent":"        // 4. Save the updated entity"},{"type":"DELETE","lineNumber":122,"oldContent":"        existingCustomer.setStatus(customerDTO.status());"},{"type":"DELETE","lineNumber":123,"oldContent":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"INSERT","lineNumber":53,"content":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":54,"content":"        customerToUpdate.setId(id); // Set the ID to ensure an update, not an insert"},{"type":"DELETE","lineNumber":125,"oldContent":"        existingCustomer.setAssignedPort(customerDTO.assignedPort());"},{"type":"DELETE","lineNumber":126,"oldContent":"        // 5. Return the updated DTO"},{"type":"DELETE","lineNumber":127,"oldContent":"        return toDTO(updatedCustomer);"},{"type":"DELETE","lineNumber":128,"oldContent":""},{"type":"INSERT","lineNumber":56,"content":"        Customer updatedCustomer = customerRepository.save(customerToUpdate);"},{"type":"INSERT","lineNumber":57,"content":"        return CustomerUtility.toDTO(updatedCustomer);"},{"type":"DELETE","lineNumber":131,"oldContent":"        // 3. Handle the relationship with Splitter"},{"type":"DELETE","lineNumber":134,"oldContent":"        if (customerDTO.splitterId() != null) {"},{"type":"DELETE","lineNumber":135,"oldContent":"        // 1. Find the existing customer"},{"type":"DELETE","lineNumber":137,"oldContent":"            Splitter splitter = splitterRepository.findById(customerDTO.splitterId())"},{"type":"DELETE","lineNumber":139,"oldContent":""},{"type":"DELETE","lineNumber":140,"oldContent":"                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + customerDTO.splitterId()));"},{"type":"DELETE","lineNumber":141,"oldContent":"        // 2. Change the status to INACTIVE"},{"type":"DELETE","lineNumber":143,"oldContent":"            existingCustomer.setSplitter(splitter);"},{"type":"DELETE","lineNumber":144,"oldContent":""},{"type":"DELETE","lineNumber":145,"oldContent":"        // 3. Save the change"},{"type":"DELETE","lineNumber":146,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":149,"oldContent":"            existingCustomer.setSplitter(null);"}]},{"timestamp":1760695029631,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.dto.CustomerDTO;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.inventory.entity.Customer;"},{"type":"DELETE","lineNumber":6,"oldContent":"import com.example.inventory.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.example.inventory.repository.CustomerRepository;"},{"type":"DELETE","lineNumber":8,"oldContent":"import com.example.inventory.repository.SplitterRepository;"},{"type":"DELETE","lineNumber":9,"oldContent":"import com.example.inventory.util.CustomerUtility; // <-- IMPORT THE UTILITY"},{"type":"INSERT","lineNumber":4,"content":" <-- IMPORT THE UTILITY"},{"type":"DELETE","lineNumber":19,"oldContent":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"DELETE","lineNumber":22,"oldContent":"        // Pass the repository to the utility method"},{"type":"DELETE","lineNumber":24,"oldContent":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":17,"content":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"DELETE","lineNumber":26,"oldContent":"        return CustomerUtility.toDTO(savedCustomer);"},{"type":"DELETE","lineNumber":29,"oldContent":"        return CustomerUtility.toDTO(customer);"},{"type":"INSERT","lineNumber":21,"content":"        // Pass the repository to the utility method"},{"type":"INSERT","lineNumber":22,"content":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":31,"oldContent":"        return customerRepository.findAll().stream()"},{"type":"DELETE","lineNumber":32,"oldContent":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"INSERT","lineNumber":24,"content":"        return CustomerUtility.toDTO(savedCustomer);"},{"type":"DELETE","lineNumber":38,"oldContent":"        // Ensure the customer exists before proceeding"},{"type":"DELETE","lineNumber":40,"oldContent":"        if (!customerRepository.existsById(id)) {"},{"type":"DELETE","lineNumber":41,"oldContent":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"INSERT","lineNumber":31,"content":"        return CustomerUtility.toDTO(customer);"},{"type":"DELETE","lineNumber":45,"oldContent":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":47,"oldContent":"        customerToUpdate.setId(id); // Set the ID to ensure an update, not an insert"},{"type":"DELETE","lineNumber":48,"oldContent":"        Customer updatedCustomer = customerRepository.save(customerToUpdate);"},{"type":"DELETE","lineNumber":49,"oldContent":"        return CustomerUtility.toDTO(updatedCustomer);"},{"type":"INSERT","lineNumber":36,"content":"        return customerRepository.findAll().stream()"},{"type":"INSERT","lineNumber":37,"content":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"INSERT","lineNumber":43,"content":"        // Ensure the customer exists before proceeding"},{"type":"INSERT","lineNumber":44,"content":"        if (!customerRepository.existsById(id)) {"},{"type":"INSERT","lineNumber":45,"content":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"INSERT","lineNumber":48,"content":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":49,"content":"        customerToUpdate.setId(id); // Set the ID to ensure an update, not an insert"},{"type":"INSERT","lineNumber":51,"content":"        Customer updatedCustomer = customerRepository.save(customerToUpdate);"},{"type":"INSERT","lineNumber":52,"content":"        return CustomerUtility.toDTO(updatedCustomer);"}]},{"timestamp":1760695032226,"changes":[{"type":"MODIFY","lineNumber":5,"content":" import com.project.NetworkApp.Repository.CustomerRepository;","oldContent":"import jakarta.persistence.EntityNotFoundException;"},{"type":"INSERT","lineNumber":6,"content":" import jakarta.persistence.EntityNotFoundException;"},{"type":"DELETE","lineNumber":12,"oldContent":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"DELETE","lineNumber":16,"oldContent":"        // Pass the repository to the utility method"},{"type":"DELETE","lineNumber":18,"oldContent":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":20,"oldContent":"        return CustomerUtility.toDTO(savedCustomer);"},{"type":"INSERT","lineNumber":18,"content":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"INSERT","lineNumber":22,"content":"        // Pass the repository to the utility method"},{"type":"INSERT","lineNumber":23,"content":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"MODIFY","lineNumber":25,"content":"        return CustomerUtility.toDTO(savedCustomer);","oldContent":"        return CustomerUtility.toDTO(customer);"},{"type":"DELETE","lineNumber":29,"oldContent":"        return customerRepository.findAll().stream()"},{"type":"MODIFY","lineNumber":32,"content":"        return CustomerUtility.toDTO(customer);","oldContent":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"DELETE","lineNumber":35,"oldContent":"        // Ensure the customer exists before proceeding"},{"type":"DELETE","lineNumber":37,"oldContent":"        if (!customerRepository.existsById(id)) {"},{"type":"DELETE","lineNumber":39,"oldContent":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"DELETE","lineNumber":41,"oldContent":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":42,"oldContent":"        customerToUpdate.setId(id); // Set the ID to ensure an update, not an insert"},{"type":"INSERT","lineNumber":37,"content":"        return customerRepository.findAll().stream()"},{"type":"INSERT","lineNumber":38,"content":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"DELETE","lineNumber":44,"oldContent":"        Customer updatedCustomer = customerRepository.save(customerToUpdate);"},{"type":"DELETE","lineNumber":46,"oldContent":"        return CustomerUtility.toDTO(updatedCustomer);"},{"type":"INSERT","lineNumber":44,"content":"        // Ensure the customer exists before proceeding"},{"type":"INSERT","lineNumber":45,"content":"        if (!customerRepository.existsById(id)) {"},{"type":"INSERT","lineNumber":46,"content":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"INSERT","lineNumber":49,"content":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":50,"content":"        customerToUpdate.setId(id); // Set the ID to ensure an update, not an insert"},{"type":"INSERT","lineNumber":52,"content":"        Customer updatedCustomer = customerRepository.save(customerToUpdate);"},{"type":"INSERT","lineNumber":53,"content":"        return CustomerUtility.toDTO(updatedCustomer);"}]},{"timestamp":1760695034598,"changes":[{"type":"INSERT","lineNumber":6,"content":" import com.project.NetworkApp.Repository.SplitterRepository;"},{"type":"DELETE","lineNumber":17,"oldContent":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"INSERT","lineNumber":19,"content":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"DELETE","lineNumber":20,"oldContent":"        // Pass the repository to the utility method"},{"type":"DELETE","lineNumber":22,"oldContent":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":23,"content":"        // Pass the repository to the utility method"},{"type":"INSERT","lineNumber":24,"content":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":30,"oldContent":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"MODIFY","lineNumber":31,"content":"        Customer customer = customerRepository.findById(id)","oldContent":"        return CustomerUtility.toDTO(customer);"},{"type":"INSERT","lineNumber":33,"content":"        return CustomerUtility.toDTO(customer);"},{"type":"DELETE","lineNumber":35,"oldContent":"        return customerRepository.findAll().stream()"},{"type":"DELETE","lineNumber":36,"oldContent":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"INSERT","lineNumber":38,"content":"        return customerRepository.findAll().stream()"},{"type":"INSERT","lineNumber":39,"content":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"INSERT","lineNumber":41,"content":"    }"},{"type":"INSERT","lineNumber":42,"content":""},{"type":"INSERT","lineNumber":43,"content":"    @Override"},{"type":"INSERT","lineNumber":44,"content":"    public CustomerDTO updateCustomer(Integer id, CustomerDTO customerDTO) {"},{"type":"DELETE","lineNumber":42,"oldContent":"    }"},{"type":"INSERT","lineNumber":48,"content":"        }"},{"type":"DELETE","lineNumber":45,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":47,"oldContent":"    public CustomerDTO updateCustomer(Integer id, CustomerDTO customerDTO) {"},{"type":"DELETE","lineNumber":49,"oldContent":"        }"},{"type":"DELETE","lineNumber":52,"oldContent":""}]},{"timestamp":1760695038900,"changes":[{"type":"INSERT","lineNumber":5,"content":" import com.project.NetworkApp.DTO.CustomerDTO;"},{"type":"INSERT","lineNumber":8,"content":" import com.project.NetworkApp.entity.Customer;"},{"type":"DELETE","lineNumber":22,"oldContent":"        // Pass the repository to the utility method"},{"type":"INSERT","lineNumber":25,"content":"        // Pass the repository to the utility method"},{"type":"DELETE","lineNumber":37,"oldContent":"        return customerRepository.findAll().stream()"},{"type":"INSERT","lineNumber":40,"content":"        return customerRepository.findAll().stream()"},{"type":"DELETE","lineNumber":41,"oldContent":"        // Ensure the customer exists before proceeding"},{"type":"DELETE","lineNumber":43,"oldContent":"        if (!customerRepository.existsById(id)) {"},{"type":"DELETE","lineNumber":46,"oldContent":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"INSERT","lineNumber":47,"content":"        // Ensure the customer exists before proceeding"},{"type":"INSERT","lineNumber":48,"content":"        if (!customerRepository.existsById(id)) {"},{"type":"INSERT","lineNumber":49,"content":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"INSERT","lineNumber":50,"content":"        }"},{"type":"DELETE","lineNumber":50,"oldContent":"        }"}]},{"timestamp":1760695041393,"changes":[{"type":"MODIFY","lineNumber":8,"content":" import com.project.NetworkApp.Utility.CustomerUtility;","oldContent":" import jakarta.persistence.EntityNotFoundException;"},{"type":"INSERT","lineNumber":10,"content":" import jakarta.persistence.EntityNotFoundException;"},{"type":"DELETE","lineNumber":25,"oldContent":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":27,"content":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":40,"oldContent":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"INSERT","lineNumber":42,"content":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"DELETE","lineNumber":46,"oldContent":"        // Ensure the customer exists before proceeding"},{"type":"INSERT","lineNumber":48,"content":"        // Ensure the customer exists before proceeding"},{"type":"DELETE","lineNumber":49,"oldContent":""},{"type":"DELETE","lineNumber":51,"oldContent":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":52,"content":""},{"type":"INSERT","lineNumber":53,"content":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"}]},{"timestamp":1760695045882,"changes":[{"type":"INSERT","lineNumber":10,"content":" import com.project.NetworkApp.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":51,"oldContent":""},{"type":"INSERT","lineNumber":53,"content":""}]},{"timestamp":1760695050233,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":" <-- IMPORT THE UTILITY"}]},{"timestamp":1760778827323,"changes":[{"type":"DELETE","lineNumber":21,"oldContent":"    private final CustomerRepository customerRepository;"},{"type":"MODIFY","lineNumber":21,"content":"    private  CustomerRepository customerRepository;","oldContent":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"INSERT","lineNumber":22,"content":"    private  SplitterRepository splitterRepository; // Still needed to pass to the utility"}]},{"timestamp":1760778830395,"changes":[{"type":"DELETE","lineNumber":21,"oldContent":"    private  CustomerRepository customerRepository;"},{"type":"MODIFY","lineNumber":21,"content":"    private CustomerRepository customerRepository;","oldContent":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"INSERT","lineNumber":22,"content":"    private  SplitterRepository splitterRepository; // Still needed to pass to the utility"}]},{"timestamp":1760778833872,"changes":[{"type":"MODIFY","lineNumber":22,"content":"    private SplitterRepository splitterRepository; // Still needed to pass to the utility","oldContent":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"}]},{"timestamp":1760778837972,"changes":[{"type":"MODIFY","lineNumber":12,"content":" import org.springframework.beans.factory.annotation.Autowired;","oldContent":"import org.springframework.stereotype.Service;"},{"type":"INSERT","lineNumber":13,"content":" import org.springframework.stereotype.Service;"},{"type":"DELETE","lineNumber":20,"oldContent":""},{"type":"INSERT","lineNumber":21,"content":"    @Autowired"}]},{"timestamp":1760778841859,"changes":[{"type":"INSERT","lineNumber":23,"content":"    @Autowired"}]},{"timestamp":1760785510650,"changes":[{"type":"DELETE","lineNumber":50,"oldContent":"        // Ensure the customer exists before proceeding"},{"type":"DELETE","lineNumber":51,"oldContent":"        if (!customerRepository.existsById(id)) {"},{"type":"DELETE","lineNumber":52,"oldContent":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"INSERT","lineNumber":50,"content":""},{"type":"INSERT","lineNumber":51,"content":"        // 1. Find the EXISTING customer from the database"},{"type":"INSERT","lineNumber":52,"content":"        Customer existingCustomer = customerRepository.findById(id)"},{"type":"INSERT","lineNumber":53,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"INSERT","lineNumber":54,"content":""},{"type":"INSERT","lineNumber":55,"content":"        // 2. Update the fields on the EXISTING entity"},{"type":"INSERT","lineNumber":56,"content":"        existingCustomer.setName(customerDTO.name());"},{"type":"INSERT","lineNumber":57,"content":"        existingCustomer.setAddress(customerDTO.address());"},{"type":"INSERT","lineNumber":58,"content":"        existingCustomer.setNeighborhood(customerDTO.neighborhood());"},{"type":"INSERT","lineNumber":59,"content":"        existingCustomer.setPlan(customerDTO.plan());"},{"type":"INSERT","lineNumber":60,"content":"        existingCustomer.setConnectionType(customerDTO.connectionType());"},{"type":"INSERT","lineNumber":61,"content":"        existingCustomer.setStatus(customerDTO.status());"},{"type":"INSERT","lineNumber":62,"content":"        existingCustomer.setAssignedPort(customerDTO.assignedPort());"},{"type":"INSERT","lineNumber":63,"content":""},{"type":"INSERT","lineNumber":64,"content":"        // 3. Update the relationships on the EXISTING entity"},{"type":"INSERT","lineNumber":65,"content":"        if (customerDTO.splitterId() != null) {"},{"type":"INSERT","lineNumber":66,"content":"            Splitter splitter = splitterRepository.findById(customerDTO.splitterId())"},{"type":"INSERT","lineNumber":67,"content":"                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + customerDTO.splitterId()));"},{"type":"INSERT","lineNumber":68,"content":"            existingCustomer.setSplitter(splitter);"},{"type":"INSERT","lineNumber":69,"content":"        } else {"},{"type":"INSERT","lineNumber":70,"content":"            existingCustomer.setSplitter(null);"},{"type":"DELETE","lineNumber":55,"oldContent":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":56,"oldContent":"        customerToUpdate.setId(id); // Set the ID to ensure an update, not an insert"},{"type":"INSERT","lineNumber":73,"content":"        // 4. Save the MODIFIED entity."},{"type":"INSERT","lineNumber":74,"content":"        // This preserves the .assignedAssets collection and avoids the error."},{"type":"INSERT","lineNumber":75,"content":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"DELETE","lineNumber":58,"oldContent":"        Customer updatedCustomer = customerRepository.save(customerToUpdate);"}]},{"timestamp":1760785526131,"changes":[{"type":"INSERT","lineNumber":9,"content":" import com.project.NetworkApp.entity.Splitter;"},{"type":"MODIFY","lineNumber":12,"content":"import lombok.RequiredArgsConstructor;","oldContent":"import com.example.inventory.entity.Customer;"},{"type":"DELETE","lineNumber":14,"oldContent":"import com.example.inventory.repository.CustomerRepository;"},{"type":"DELETE","lineNumber":15,"oldContent":"import com.example.inventory.repository.SplitterRepository; // We'll need this soon"},{"type":"DELETE","lineNumber":16,"oldContent":"import jakarta.persistence.EntityNotFoundException;"},{"type":"DELETE","lineNumber":17,"oldContent":"import lombok.RequiredArgsConstructor;"},{"type":"INSERT","lineNumber":15,"content":""},{"type":"INSERT","lineNumber":16,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":17,"content":"import java.util.stream.Collectors;"},{"type":"INSERT","lineNumber":18,"content":""},{"type":"DELETE","lineNumber":20,"oldContent":" * Implementation of the CustomerService interface."},{"type":"INSERT","lineNumber":21,"content":"public class CustomerServiceImpl implements CustomerService {"},{"type":"DELETE","lineNumber":25,"oldContent":"@RequiredArgsConstructor // Lombok annotation to create a constructor for all final fields"},{"type":"MODIFY","lineNumber":27,"content":"    @Override","oldContent":"    // We inject the SplitterRepository to link a customer to a splitter."},{"type":"INSERT","lineNumber":28,"content":"    public CustomerDTO createCustomer(CustomerDTO customerDTO) {"},{"type":"DELETE","lineNumber":30,"oldContent":"    public CustomerDTO createCustomer(CustomerDTO customerDTO) {"},{"type":"DELETE","lineNumber":31,"oldContent":"        return CustomerUtility.toDTO(savedCustomer);"},{"type":"MODIFY","lineNumber":32,"content":"        return CustomerUtility.toDTO(savedCustomer);","oldContent":"        // 2. Save the new Customer entity using the repository"},{"type":"INSERT","lineNumber":33,"content":"    }"},{"type":"DELETE","lineNumber":35,"oldContent":"        // 3. Convert the saved entity back to a DTO to return to the caller"},{"type":"DELETE","lineNumber":36,"oldContent":"        Customer customer = customerRepository.findById(id)"},{"type":"DELETE","lineNumber":37,"oldContent":""},{"type":"DELETE","lineNumber":38,"oldContent":"        return CustomerUtility.toDTO(customer);"},{"type":"INSERT","lineNumber":35,"content":"    @Override"},{"type":"DELETE","lineNumber":40,"oldContent":"        // Find the customer by ID or throw an exception if it doesn't exist"},{"type":"INSERT","lineNumber":39,"content":"        return CustomerUtility.toDTO(customer);"},{"type":"INSERT","lineNumber":40,"content":"    }"},{"type":"INSERT","lineNumber":41,"content":""},{"type":"INSERT","lineNumber":42,"content":"    @Override"},{"type":"INSERT","lineNumber":43,"content":"    public List<CustomerDTO> getAllCustomers() {"},{"type":"DELETE","lineNumber":45,"oldContent":"        List<Customer> customers = customerRepository.findAll();"},{"type":"INSERT","lineNumber":46,"content":"                .collect(Collectors.toList());"},{"type":"DELETE","lineNumber":54,"oldContent":"        }"},{"type":"DELETE","lineNumber":56,"oldContent":""},{"type":"DELETE","lineNumber":60,"oldContent":""},{"type":"DELETE","lineNumber":63,"oldContent":"        return CustomerUtility.toDTO(updatedCustomer);"},{"type":"DELETE","lineNumber":65,"oldContent":"    }"},{"type":"DELETE","lineNumber":67,"oldContent":""},{"type":"DELETE","lineNumber":69,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":71,"oldContent":"    public void deactivateCustomer(Integer id) {"},{"type":"DELETE","lineNumber":73,"oldContent":"        Customer customer = customerRepository.findById(id)"},{"type":"DELETE","lineNumber":75,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"DELETE","lineNumber":77,"oldContent":"        customer.setStatus(CustomerStatus.INACTIVE);"},{"type":"DELETE","lineNumber":79,"oldContent":"        customerRepository.save(customer);"},{"type":"DELETE","lineNumber":81,"oldContent":"    }"},{"type":"DELETE","lineNumber":83,"oldContent":"}"},{"type":"DELETE","lineNumber":85,"oldContent":""},{"type":"DELETE","lineNumber":87,"oldContent":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"DELETE","lineNumber":88,"oldContent":"        // 4. Save the MODIFIED entity."},{"type":"INSERT","lineNumber":74,"content":"        // 4. Save the MODIFIED entity."},{"type":"DELETE","lineNumber":91,"oldContent":"        // 4. Save the updated entity"},{"type":"INSERT","lineNumber":77,"content":""},{"type":"INSERT","lineNumber":78,"content":"        return CustomerUtility.toDTO(updatedCustomer);"},{"type":"INSERT","lineNumber":79,"content":"    }"},{"type":"INSERT","lineNumber":80,"content":""},{"type":"INSERT","lineNumber":81,"content":"    @Override"},{"type":"INSERT","lineNumber":82,"content":"    public void deactivateCustomer(Integer id) {"},{"type":"INSERT","lineNumber":83,"content":"        Customer customer = customerRepository.findById(id)"},{"type":"INSERT","lineNumber":84,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"INSERT","lineNumber":85,"content":"        customer.setStatus(CustomerStatus.INACTIVE);"},{"type":"INSERT","lineNumber":86,"content":"        customerRepository.save(customer);"},{"type":"INSERT","lineNumber":87,"content":"    }"},{"type":"INSERT","lineNumber":88,"content":"}"}]},{"timestamp":1760786852282,"changes":[{"type":"MODIFY","lineNumber":13,"content":" import org.springframework.beans.factory.annotation.Autowired;","oldContent":"import com.example.inventory.entity.Splitter;"},{"type":"MODIFY","lineNumber":26,"content":"","oldContent":"    // We inject the SplitterRepository to link a customer to a splitter."},{"type":"INSERT","lineNumber":31,"content":"        Customer savedCustomer = customerRepository.save(customer);"},{"type":"DELETE","lineNumber":34,"oldContent":"        // 3. Convert the saved entity back to a DTO to return to the caller"},{"type":"INSERT","lineNumber":36,"content":"    public CustomerDTO getCustomerById(Integer id) {"},{"type":"INSERT","lineNumber":37,"content":"        Customer customer = customerRepository.findById(id)"},{"type":"INSERT","lineNumber":38,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"DELETE","lineNumber":37,"oldContent":"        // Find the customer by ID or throw an exception if it doesn't exist"},{"type":"DELETE","lineNumber":40,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"DELETE","lineNumber":42,"oldContent":"        return toDTO(customer);"},{"type":"DELETE","lineNumber":66,"oldContent":"        // 4. Save the MODIFIED entity."},{"type":"INSERT","lineNumber":68,"content":"                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + customerDTO.splitterId()));"},{"type":"INSERT","lineNumber":69,"content":"            existingCustomer.setSplitter(splitter);"},{"type":"INSERT","lineNumber":70,"content":"        } else {"},{"type":"INSERT","lineNumber":71,"content":"            existingCustomer.setSplitter(null);"},{"type":"INSERT","lineNumber":72,"content":"        }"},{"type":"INSERT","lineNumber":74,"content":"        // 4. Save the MODIFIED entity."},{"type":"INSERT","lineNumber":75,"content":"        // This preserves the .assignedAssets collection and avoids the error."},{"type":"INSERT","lineNumber":76,"content":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"INSERT","lineNumber":77,"content":""},{"type":"DELETE","lineNumber":71,"oldContent":"                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + customerDTO.splitterId()));"},{"type":"DELETE","lineNumber":74,"oldContent":"            existingCustomer.setSplitter(splitter);"},{"type":"DELETE","lineNumber":77,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":80,"oldContent":"            existingCustomer.setSplitter(null);"},{"type":"DELETE","lineNumber":83,"oldContent":"        }"},{"type":"DELETE","lineNumber":85,"oldContent":"}"},{"type":"DELETE","lineNumber":87,"oldContent":"        // This preserves the .assignedAssets collection and avoids the error."},{"type":"INSERT","lineNumber":89,"content":"    @Override"},{"type":"INSERT","lineNumber":90,"content":"    public List<CustomerDTO> getCustomersByStatus(CustomerStatus status) {"},{"type":"INSERT","lineNumber":91,"content":"        return List.of();"},{"type":"INSERT","lineNumber":92,"content":"    }"},{"type":"INSERT","lineNumber":93,"content":"}"}]},{"timestamp":1760786860938,"changes":[{"type":"MODIFY","lineNumber":12,"content":"import lombok.RequiredArgsConstructor;","oldContent":"import com.example.inventory.repository.CustomerRepository;"},{"type":"MODIFY","lineNumber":34,"content":"","oldContent":"        // 3. Convert the saved entity back to a DTO to return to the caller"},{"type":"DELETE","lineNumber":37,"oldContent":"        return CustomerUtility.toDTO(customer);"},{"type":"INSERT","lineNumber":39,"content":"        return CustomerUtility.toDTO(customer);"},{"type":"MODIFY","lineNumber":68,"content":"                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + customerDTO.splitterId()));","oldContent":"                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + customerDTO.splitterId()));"},{"type":"DELETE","lineNumber":70,"oldContent":""},{"type":"DELETE","lineNumber":72,"oldContent":"        return CustomerUtility.toDTO(updatedCustomer);"},{"type":"DELETE","lineNumber":75,"oldContent":"    }"},{"type":"DELETE","lineNumber":79,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":81,"oldContent":"    public void deactivateCustomer(Integer id) {"},{"type":"INSERT","lineNumber":78,"content":"        return CustomerUtility.toDTO(updatedCustomer);"},{"type":"INSERT","lineNumber":79,"content":"    }"},{"type":"INSERT","lineNumber":80,"content":""},{"type":"INSERT","lineNumber":81,"content":"    @Override"},{"type":"INSERT","lineNumber":82,"content":"    public void deactivateCustomer(Integer id) {"},{"type":"DELETE","lineNumber":88,"oldContent":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"DELETE","lineNumber":89,"oldContent":"}"},{"type":"INSERT","lineNumber":88,"content":""},{"type":"DELETE","lineNumber":91,"oldContent":"    }"},{"type":"DELETE","lineNumber":93,"oldContent":"        return List.of();"},{"type":"INSERT","lineNumber":91,"content":"        List<Customer> customers = customerRepository.findByStatus(status);"},{"type":"INSERT","lineNumber":92,"content":"        return customers.stream()"},{"type":"INSERT","lineNumber":93,"content":"                .map(CustomerUtility::toDTO)"},{"type":"INSERT","lineNumber":94,"content":"                .collect(Collectors.toList());"},{"type":"INSERT","lineNumber":95,"content":"    }"},{"type":"INSERT","lineNumber":96,"content":"}"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/CustomerUtility.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/CustomerUtility.java","baseContent":"package com.project.NetworkApp.Utility;\n\n// package com.example.inventory.util;\n\nimport com.example.inventory.dto.CustomerDTO;\nimport com.example.inventory.entity.Customer;\nimport com.example.inventory.entity.Splitter;\nimport com.example.inventory.repository.SplitterRepository;\nimport jakarta.persistence.EntityNotFoundException;\n\n/**\n * A plain utility class with static methods for mapping between\n * Customer entities and DTOs.\n */\npublic final class CustomerUtility {\n\n    /**\n     * A private constructor to prevent this utility class from being instantiated.\n     */\n    private CustomerUtility() {}\n\n    /**\n     * Converts a Customer entity to a CustomerDTO.\n     * This method is self-contained and has no dependencies.\n     *\n     * @param customer The Customer entity to convert.\n     * @return The resulting CustomerDTO.\n     */\n    public static CustomerDTO toDTO(Customer customer) {\n        if (customer == null) {\n            return null;\n        }\n\n        return new CustomerDTO(\n                customer.getId(),\n                customer.getName(),\n                customer.getAddress(),\n                customer.getNeighborhood(),\n                customer.getPlan(),\n                customer.getConnectionType(),\n                customer.getStatus(),\n                customer.getAssignedPort(),\n                customer.getCreatedAt(),\n                customer.getSplitter() != null ? customer.getSplitter().getId() : null\n        );\n    }\n\n    /**\n     * Converts a CustomerDTO to a Customer entity.\n     *\n     * @param dto The CustomerDTO to convert.\n     * @param splitterRepository A repository instance needed to find the associated Splitter.\n     * @return The resulting Customer entity.\n     */\n    public static Customer toEntity(CustomerDTO dto, SplitterRepository splitterRepository) {\n        Customer customer = new Customer();\n        customer.setName(dto.name());\n        customer.setAddress(dto.address());\n        customer.setNeighborhood(dto.neighborhood());\n        customer.setPlan(dto.plan());\n        customer.setConnectionType(dto.connectionType());\n        customer.setStatus(dto.status());\n        customer.setAssignedPort(dto.assignedPort());\n\n        // Use the passed-in repository to find and link the Splitter\n        if (dto.splitterId() != null) {\n            Splitter splitter = splitterRepository.findById(dto.splitterId())\n                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + dto.splitterId()));\n            customer.setSplitter(splitter);\n        }\n\n        return customer;\n    }\n}","baseTimestamp":1760694979367,"deltas":[{"timestamp":1760694984409,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.dto.CustomerDTO;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.inventory.entity.Customer;"},{"type":"DELETE","lineNumber":6,"oldContent":"import com.example.inventory.entity.Splitter;"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.example.inventory.repository.SplitterRepository;"}]},{"timestamp":1760694987748,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.CustomerDTO;"}]},{"timestamp":1760694989820,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.entity.Customer;"}]},{"timestamp":1760694995308,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.Repository.SplitterRepository;"}]},{"timestamp":1760695000306,"changes":[{"type":"INSERT","lineNumber":7,"content":"import com.project.NetworkApp.entity.Splitter;"}]},{"timestamp":1760772616484,"changes":[{"type":"MODIFY","lineNumber":14,"content":"public class CustomerUtility {","oldContent":"public final class CustomerUtility {"}]},{"timestamp":1760879676841,"changes":[{"type":"INSERT","lineNumber":37,"content":"                customer.setCity(dto.city());"}]},{"timestamp":1760879679276,"changes":[{"type":"MODIFY","lineNumber":37,"content":"                ","oldContent":"                customer.setCity(dto.city());"}]},{"timestamp":1760879687370,"changes":[{"type":"MODIFY","lineNumber":37,"content":"                customer.getCity(),","oldContent":"                "}]},{"timestamp":1760879692913,"changes":[{"type":"INSERT","lineNumber":59,"content":"        customer.setCity(dto.city());"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/CustomerContoller.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/CustomerContoller.java","baseContent":"package com.project.NetworkApp.controller;\n\n// package com.project.NetworkApp.controller;\n\nimport com.project.NetworkApp.dto.CustomerDTO;\nimport com.project.NetworkApp.service.CustomerService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n/**\n * REST Controller for managing Customers.\n * This class exposes endpoints for CRUD operations on customers.\n */\n@RestController\n@RequestMapping(\"/customer\") // Base URL for all customer-related APIs\n@RequiredArgsConstructor\npublic class CustomerController {\n\n    private final CustomerService customerService;\n\n    /**\n     * POST /customer\n     * Creates a new customer profile.\n     * Corresponds to US 1.1.\n     */\n    @PostMapping\n    public ResponseEntity<CustomerDTO> createCustomer(@RequestBody CustomerDTO customerDTO) {\n        CustomerDTO createdCustomer = customerService.createCustomer(customerDTO);\n        return new ResponseEntity<>(createdCustomer, HttpStatus.CREATED);\n    }\n\n    /**\n     * GET /customer\n     * Retrieves a list of all customers.\n     */\n    @GetMapping\n    public ResponseEntity<List<CustomerDTO>> getAllCustomers() {\n        List<CustomerDTO> customers = customerService.getAllCustomers();\n        return ResponseEntity.ok(customers);\n    }\n\n    /**\n     * GET /customer/{id}\n     * Views a specific customer's profile.\n     * Corresponds to SRS 2.1.\n     */\n    @GetMapping(\"/{id}\")\n    public ResponseEntity<CustomerDTO> getCustomerById(@PathVariable Integer id) {\n        CustomerDTO customer = customerService.getCustomerById(id);\n        return ResponseEntity.ok(customer);\n    }\n\n    /**\n     * PUT /customer/{id}\n     * Updates an existing customer's profile.\n     * Corresponds to SRS 2.1.\n     */\n    @PutMapping(\"/{id}\")\n    public ResponseEntity<CustomerDTO> updateCustomer(@PathVariable Integer id, @RequestBody CustomerDTO customerDTO) {\n        CustomerDTO updatedCustomer = customerService.updateCustomer(id, customerDTO);\n        return ResponseEntity.ok(updatedCustomer);\n    }\n\n    /**\n     * DELETE /customer/{id}\n     * Deactivates a customer (soft delete).\n     * Corresponds to SRS 2.1 and US 5.1.\n     */\n    @DeleteMapping(\"/{id}\")\n    public ResponseEntity<Void> deactivateCustomer(@PathVariable Integer id) {\n        customerService.deactivateCustomer(id);\n        return ResponseEntity.noContent().build();\n    }\n}","baseTimestamp":1760763066694,"deltas":[{"timestamp":1760763073606,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.CustomerDTO;","oldContent":"import com.project.NetworkApp.dto.CustomerDTO;"}]},{"timestamp":1760763082506,"changes":[{"type":"MODIFY","lineNumber":5,"content":"import com.project.NetworkApp.Service.CustomerService;","oldContent":"import com.project.NetworkApp.service.CustomerService;"}]},{"timestamp":1760778950423,"changes":[{"type":"INSERT","lineNumber":19,"content":"@CrossOrigin(\"http://localhost:5173\")"}]},{"timestamp":1760786894685,"changes":[{"type":"INSERT","lineNumber":78,"content":""},{"type":"INSERT","lineNumber":79,"content":"    @GetMapping(\"/by-status\")"},{"type":"INSERT","lineNumber":80,"content":"    public ResponseEntity<List<CustomerDTO>> getCustomersByStatus(@RequestParam CustomerStatus status) {"},{"type":"INSERT","lineNumber":81,"content":"        List<CustomerDTO> customers = customerService.getCustomersByStatus(status);"},{"type":"INSERT","lineNumber":82,"content":"        return ResponseEntity.ok(customers);"},{"type":"INSERT","lineNumber":83,"content":"    }"}]},{"timestamp":1760786899019,"changes":[{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":79,"oldContent":"}"},{"type":"DELETE","lineNumber":81,"oldContent":"    }"},{"type":"MODIFY","lineNumber":83,"content":"        return ResponseEntity.ok(customers);","oldContent":"        return ResponseEntity.ok(customers);"},{"type":"INSERT","lineNumber":84,"content":"    }"},{"type":"INSERT","lineNumber":85,"content":"}"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/UserUtility.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/UserUtility.java","baseContent":"package com.project.NetworkApp.Utility;\n\n// package com.project.NetworkApp.util;\n\nimport com.project.NetworkApp.dto.UserCreateDTO;\nimport com.project.NetworkApp.dto.UserResponseDTO;\nimport com.project.NetworkApp.entity.User;\n\n/**\n * Utility class to map between User entities and DTOs.\n */\npublic final class UserUtility {\n\n    /**\n     * Private constructor to prevent instantiation.\n     */\n    private UserUtility() {}\n\n    /**\n     * Converts a User entity to a UserResponseDTO.\n     * @param user The User entity.\n     * @return A safe UserResponseDTO (no password).\n     */\n    public static UserResponseDTO toDTO(User user) {\n        if (user == null) {\n            return null;\n        }\n\n        return new UserResponseDTO(\n                user.getId(),\n                user.getUsername(),\n                user.getRole(),\n                user.getLastLogin()\n        );\n    }\n\n    /**\n     * Converts a UserCreateDTO to a User entity.\n     * The password is set in the service layer.\n     * @param dto The UserCreateDTO.\n     * @return A new User entity (not yet saved).\n     */\n    public static User toEntity(UserCreateDTO dto) {\n        if (dto == null) {\n            return null;\n        }\n\n        User user = new User();\n        user.setUsername(dto.username());\n        user.setRole(dto.role());\n\n        // !!! WARNING: Plain-text password is set in the service !!!\n        // We set the password in the service, not the utility,\n        // to make it clear where this happens.\n\n        return user;\n    }\n}","baseTimestamp":1760772586000,"deltas":[{"timestamp":1760772594973,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.UserCreateDTO;","oldContent":"import com.project.NetworkApp.dto.UserCreateDTO;"}]},{"timestamp":1760772604231,"changes":[{"type":"MODIFY","lineNumber":5,"content":"import com.project.NetworkApp.DTO.UserResponseDTO;","oldContent":"import com.project.NetworkApp.dto.UserResponseDTO;"}]},{"timestamp":1760772622011,"changes":[{"type":"MODIFY","lineNumber":11,"content":"public class UserUtility {","oldContent":"public final class UserUtility {"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/UserResponseDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/UserResponseDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\n// package com.project.NetworkApp.dto;\n\nimport com.project.NetworkApp.enums.UserRole;\n\n/**\n * DTO for safely responding with user data (no password).\n */\npublic record UserResponseDTO(\n        Integer id,\n        String username,\n        UserRole role,\n        java.time.LocalDateTime lastLogin\n) {\n}","baseTimestamp":1760772684579},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/UserCreateDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/UserCreateDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\npublic class UserCreateDTO      {\n}\n","baseTimestamp":1760772712272,"deltas":[{"timestamp":1760772718872,"changes":[{"type":"MODIFY","lineNumber":2,"content":"public class UserCreateDTO  {","oldContent":"public class UserCreateDTO      {"}]},{"timestamp":1760772723743,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"public class UserCreateDTO  {"},{"type":"DELETE","lineNumber":3,"oldContent":"}"},{"type":"INSERT","lineNumber":2,"content":"// package com.project.NetworkApp.dto;"},{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.enums.UserRole;"},{"type":"INSERT","lineNumber":5,"content":""},{"type":"INSERT","lineNumber":6,"content":"/**"},{"type":"INSERT","lineNumber":7,"content":" * DTO for creating a new user."},{"type":"INSERT","lineNumber":8,"content":" */"},{"type":"INSERT","lineNumber":9,"content":"public record UserCreateDTO("},{"type":"INSERT","lineNumber":10,"content":"        String username,"},{"type":"INSERT","lineNumber":11,"content":"        String password, // Plain-text password from the client"},{"type":"INSERT","lineNumber":12,"content":"        UserRole role"},{"type":"INSERT","lineNumber":13,"content":") {"},{"type":"INSERT","lineNumber":14,"content":"}"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/UserService.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/UserService.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.project.NetworkApp.service;\n\nimport com.project.NetworkApp.dto.UserCreateDTO;\nimport com.project.NetworkApp.dto.UserResponseDTO;\n\npublic interface UserService {\n    /**\n     * Creates a new user, hashes their password, and saves them.\n     * @param userCreateDTO DTO containing new user details.\n     * @return DTO of the created user.\n     */\n    UserResponseDTO createUser(UserCreateDTO userCreateDTO);\n}","baseTimestamp":1760772756134,"deltas":[{"timestamp":1760772760728,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.UserCreateDTO;","oldContent":"import com.project.NetworkApp.dto.UserCreateDTO;"}]},{"timestamp":1760772764039,"changes":[{"type":"MODIFY","lineNumber":5,"content":"import com.project.NetworkApp.DTO.UserResponseDTO;","oldContent":"import com.project.NetworkApp.dto.UserResponseDTO;"}]},{"timestamp":1760775785376,"changes":[{"type":"INSERT","lineNumber":14,"content":"    UserResponseDTO login(LoginRequestDTO loginRequestDTO);"}]},{"timestamp":1760775789149,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.LoginRequestDTO;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/UserRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/UserRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\n// package com.project.NetworkApp.repository;\n\nimport com.project.NetworkApp.entity.User;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.Optional;\n\n@Repository\npublic interface UserRepository extends JpaRepository<User, Integer> {\n\n    // This will be needed for the login page\n    Optional<User> findByUsername(String username);\n}\n","baseTimestamp":1760772813570},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/UserServiceImpl.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/UserServiceImpl.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.project.NetworkApp.service;\n\nimport com.project.NetworkApp.dto.UserCreateDTO;\nimport com.project.NetworkApp.dto.UserResponseDTO;\nimport com.project.NetworkApp.entity.User;\nimport com.project.NetworkApp.repository.UserRepository;\nimport com.project.NetworkApp.util.UserUtility; // <-- Import utility\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Service;\n\n@Service\n@RequiredArgsConstructor\npublic class UserServiceImpl implements UserService {\n\n    private final UserRepository userRepository;\n\n    @Override\n    public UserResponseDTO createUser(UserCreateDTO userCreateDTO) {\n        // Convert DTO to entity using the utility\n        User newUser = UserUtility.toEntity(userCreateDTO);\n\n        // !!! WARNING: Storing plain-text password !!!\n        newUser.setPassword(userCreateDTO.password());\n\n        User savedUser = userRepository.save(newUser);\n\n        // Convert saved entity to DTO using the utility\n        return UserUtility.toDTO(savedUser);\n    }\n\n    // The private toResponseDTO method is no longer needed here.\n}\n","baseTimestamp":1760772859845,"deltas":[{"timestamp":1760772866074,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.UserCreateDTO;","oldContent":"import com.project.NetworkApp.dto.UserCreateDTO;"}]},{"timestamp":1760772870076,"changes":[{"type":"MODIFY","lineNumber":5,"content":"import com.project.NetworkApp.DTO.UserResponseDTO;","oldContent":"import com.project.NetworkApp.dto.UserResponseDTO;"}]},{"timestamp":1760772876765,"changes":[{"type":"MODIFY","lineNumber":7,"content":"import com.project.NetworkApp.Repository.UserRepository;","oldContent":"import com.project.NetworkApp.repository.UserRepository;"}]},{"timestamp":1760772886491,"changes":[{"type":"MODIFY","lineNumber":8,"content":"import com.project.NetworkApp.Utility.UserUtility; // <-- Import utility","oldContent":"import com.project.NetworkApp.util.UserUtility; // <-- Import utility"}]},{"timestamp":1760772992379,"changes":[{"type":"MODIFY","lineNumber":16,"content":"    private UserRepository userRepository;","oldContent":"    private final UserRepository userRepository;"}]},{"timestamp":1760773637800,"changes":[{"type":"INSERT","lineNumber":10,"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"type":"INSERT","lineNumber":17,"content":"    @Autowired"}]},{"timestamp":1760775806518,"changes":[{"type":"MODIFY","lineNumber":18,"content":"    private UserRepository userRepository;","oldContent":"    private UserRepository userRepository;"},{"type":"INSERT","lineNumber":33,"content":"    @Override"},{"type":"INSERT","lineNumber":34,"content":"    public UserResponseDTO login(LoginRequestDTO loginRequestDTO) {"},{"type":"INSERT","lineNumber":35,"content":"        // 1. Find the user by username"},{"type":"INSERT","lineNumber":36,"content":"        User user = userRepository.findByUsername(loginRequestDTO.username())"},{"type":"INSERT","lineNumber":37,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"No user with this name\"));"},{"type":"INSERT","lineNumber":39,"content":"        // 2. Check the password (plain text check, as requested)"},{"type":"INSERT","lineNumber":40,"content":"        if (!user.getPassword().equals(loginRequestDTO.password())) {"},{"type":"INSERT","lineNumber":41,"content":"            throw new SecurityException(\"Incorrect password\");"},{"type":"INSERT","lineNumber":42,"content":"        }"},{"type":"INSERT","lineNumber":43,"content":""},{"type":"INSERT","lineNumber":44,"content":"        // 3. Check the role"},{"type":"INSERT","lineNumber":45,"content":"        if (user.getRole() != loginRequestDTO.role()) {"},{"type":"INSERT","lineNumber":46,"content":"            throw new SecurityException(\"User role does not match\");"},{"type":"INSERT","lineNumber":47,"content":"        }"},{"type":"INSERT","lineNumber":48,"content":""},{"type":"INSERT","lineNumber":49,"content":"        // 4. Login successful, update lastLogin time"},{"type":"INSERT","lineNumber":50,"content":"        user.setLastLogin(LocalDateTime.now());"},{"type":"INSERT","lineNumber":51,"content":"        userRepository.save(user);"},{"type":"INSERT","lineNumber":52,"content":""},{"type":"INSERT","lineNumber":53,"content":"        return UserUtility.toDTO(user);"},{"type":"INSERT","lineNumber":54,"content":"    }"},{"type":"INSERT","lineNumber":55,"content":""}]},{"timestamp":1760775811018,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.LoginRequestDTO;"},{"type":"INSERT","lineNumber":18,"content":"    @Autowired"},{"type":"DELETE","lineNumber":18,"oldContent":"    private UserRepository userRepository;"},{"type":"DELETE","lineNumber":34,"oldContent":""},{"type":"DELETE","lineNumber":36,"oldContent":"    // The private toResponseDTO method is no longer needed here."},{"type":"DELETE","lineNumber":38,"oldContent":"}"},{"type":"DELETE","lineNumber":40,"oldContent":""},{"type":"DELETE","lineNumber":43,"oldContent":"    }"},{"type":"DELETE","lineNumber":45,"oldContent":"        return UserUtility.toDTO(user);"},{"type":"DELETE","lineNumber":47,"oldContent":""},{"type":"DELETE","lineNumber":49,"oldContent":"        userRepository.save(user);"},{"type":"DELETE","lineNumber":51,"oldContent":"        user.setLastLogin(LocalDateTime.now());"},{"type":"DELETE","lineNumber":53,"oldContent":"        // 4. Login successful, update lastLogin time"},{"type":"DELETE","lineNumber":55,"oldContent":""},{"type":"DELETE","lineNumber":57,"oldContent":"        }"},{"type":"INSERT","lineNumber":48,"content":"        }"},{"type":"INSERT","lineNumber":49,"content":""},{"type":"INSERT","lineNumber":50,"content":"        // 4. Login successful, update lastLogin time"},{"type":"INSERT","lineNumber":51,"content":"        user.setLastLogin(LocalDateTime.now());"},{"type":"INSERT","lineNumber":52,"content":"        userRepository.save(user);"},{"type":"INSERT","lineNumber":53,"content":""},{"type":"INSERT","lineNumber":54,"content":"        return UserUtility.toDTO(user);"},{"type":"INSERT","lineNumber":55,"content":"    }"},{"type":"INSERT","lineNumber":56,"content":""},{"type":"INSERT","lineNumber":57,"content":"    // The private toResponseDTO method is no longer needed here."},{"type":"INSERT","lineNumber":58,"content":"}"},{"type":"INSERT","lineNumber":59,"content":""}]},{"timestamp":1760775818907,"changes":[{"type":"INSERT","lineNumber":10,"content":"import jakarta.persistence.EntityNotFoundException;"},{"type":"DELETE","lineNumber":18,"oldContent":"    private UserRepository userRepository;"},{"type":"INSERT","lineNumber":20,"content":"    private UserRepository userRepository;"},{"type":"DELETE","lineNumber":42,"oldContent":"        }"},{"type":"INSERT","lineNumber":44,"content":"        }"},{"type":"DELETE","lineNumber":45,"oldContent":"        // 4. Login successful, update lastLogin time"},{"type":"INSERT","lineNumber":46,"content":"        // 3. Check the role"},{"type":"INSERT","lineNumber":47,"content":"        if (user.getRole() != loginRequestDTO.role()) {"},{"type":"INSERT","lineNumber":48,"content":"            throw new SecurityException(\"User role does not match\");"},{"type":"INSERT","lineNumber":50,"content":""},{"type":"INSERT","lineNumber":51,"content":"        // 4. Login successful, update lastLogin time"},{"type":"DELETE","lineNumber":50,"oldContent":""},{"type":"DELETE","lineNumber":52,"oldContent":"        // 3. Check the role"},{"type":"DELETE","lineNumber":55,"oldContent":"        if (user.getRole() != loginRequestDTO.role()) {"},{"type":"DELETE","lineNumber":58,"oldContent":"            throw new SecurityException(\"User role does not match\");"}]},{"timestamp":1760775831628,"changes":[{"type":"INSERT","lineNumber":15,"content":"import java.time.LocalDateTime;"},{"type":"INSERT","lineNumber":16,"content":""},{"type":"DELETE","lineNumber":47,"oldContent":"        }"},{"type":"DELETE","lineNumber":49,"oldContent":"        user.setLastLogin(LocalDateTime.now());"},{"type":"MODIFY","lineNumber":51,"content":"        }","oldContent":"        userRepository.save(user);"},{"type":"DELETE","lineNumber":53,"oldContent":""},{"type":"INSERT","lineNumber":54,"content":"        user.setLastLogin(LocalDateTime.now());"},{"type":"INSERT","lineNumber":55,"content":"        userRepository.save(user);"},{"type":"INSERT","lineNumber":56,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/UserController.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/UserController.java","baseContent":"package com.project.NetworkApp.controller;\n\n// package com.project.NetworkApp.controller;\n\nimport com.project.NetworkApp.dto.UserCreateDTO;\nimport com.project.NetworkApp.dto.UserResponseDTO;\nimport com.project.NetworkApp.service.UserService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/users\") // <-- UPDATED: No \"/api/v1\"\n@RequiredArgsConstructor\npublic class UserController {\n\n    private final UserService userService;\n\n    /**\n     * POST /users\n     * Creates a new user (e.g., Sales_Agent).\n     */\n    @PostMapping\n    public ResponseEntity<UserResponseDTO> createUser(@RequestBody UserCreateDTO userCreateDTO) {\n        UserResponseDTO createdUser = userService.createUser(userCreateDTO);\n        return new ResponseEntity<>(createdUser, HttpStatus.CREATED);\n    }\n}","baseTimestamp":1760773167163,"deltas":[{"timestamp":1760773174825,"changes":[{"type":"MODIFY","lineNumber":6,"content":"import com.project.NetworkApp.Service.UserService;","oldContent":"import com.project.NetworkApp.service.UserService;"}]},{"timestamp":1760773180762,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.project.NetworkApp.dto.UserCreateDTO;"},{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.UserCreateDTO;","oldContent":"import com.project.NetworkApp.dto.UserResponseDTO;"},{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.DTO.UserResponseDTO;"}]},{"timestamp":1760775984181,"changes":[{"type":"MODIFY","lineNumber":5,"content":"import com.project.NetworkApp.DTO.UserResponseDTO;","oldContent":"import com.project.NetworkApp.dto.UserResponseDTO;"},{"type":"INSERT","lineNumber":31,"content":""},{"type":"INSERT","lineNumber":32,"content":"    @PostMapping(\"/login\")"},{"type":"INSERT","lineNumber":33,"content":"    public ResponseEntity<UserResponseDTO> loginUser(@RequestBody LoginRequestDTO loginRequestDTO) {"},{"type":"INSERT","lineNumber":34,"content":"        UserResponseDTO user = userService.login(loginRequestDTO);"},{"type":"INSERT","lineNumber":35,"content":"        return ResponseEntity.ok(user);"}]},{"timestamp":1760775989031,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.LoginRequestDTO;"},{"type":"DELETE","lineNumber":32,"oldContent":"}"},{"type":"DELETE","lineNumber":34,"oldContent":"        return ResponseEntity.ok(user);"},{"type":"INSERT","lineNumber":36,"content":"        return ResponseEntity.ok(user);"},{"type":"INSERT","lineNumber":37,"content":"}"}]},{"timestamp":1760776034608,"changes":[{"type":"MODIFY","lineNumber":36,"content":"        return ResponseEntity.ok(user);}","oldContent":"        return ResponseEntity.ok(user);"}]},{"timestamp":1760777536505,"changes":[{"type":"DELETE","lineNumber":11,"oldContent":"import org.springframework.web.bind.annotation.PostMapping;"},{"type":"DELETE","lineNumber":12,"oldContent":"import org.springframework.web.bind.annotation.RequestBody;"},{"type":"DELETE","lineNumber":13,"oldContent":"import org.springframework.web.bind.annotation.RequestMapping;"},{"type":"DELETE","lineNumber":14,"oldContent":"import org.springframework.web.bind.annotation.RestController;"},{"type":"INSERT","lineNumber":11,"content":"import org.springframework.web.bind.annotation.*;"},{"type":"INSERT","lineNumber":15,"content":"@CrossOrigin(\"\")"},{"type":"DELETE","lineNumber":35,"oldContent":"        return ResponseEntity.ok(user);"},{"type":"INSERT","lineNumber":33,"content":"        UserResponseDTO user = userService.login(loginRequestDTO);"}]},{"timestamp":1760777552839,"changes":[{"type":"DELETE","lineNumber":12,"oldContent":"@CrossOrigin(\"\")"},{"type":"INSERT","lineNumber":15,"content":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"DELETE","lineNumber":31,"oldContent":"        UserResponseDTO user = userService.login(loginRequestDTO);"},{"type":"INSERT","lineNumber":33,"content":"        UserResponseDTO user = userService.login(loginRequestDTO);"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/exception/GlobalExceptionHandler.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/exception/GlobalExceptionHandler.java","baseContent":"package com.project.NetworkApp.exception;\n\npublic class GlobalExceptionHandler extends RuntimeException {\n    public GlobalExceptionHandler(String message) {\n        super(message);\n    }\n}\n","baseTimestamp":1760775674233,"deltas":[{"timestamp":1760775694986,"changes":[{"type":"MODIFY","lineNumber":2,"content":"public class GlobalExceptionHandler  {","oldContent":"public class GlobalExceptionHandler extends RuntimeException {"}]},{"timestamp":1760775700640,"changes":[{"type":"DELETE","lineNumber":3,"oldContent":"    public GlobalExceptionHandler(String message) {"},{"type":"DELETE","lineNumber":4,"oldContent":"        super(message);"},{"type":"DELETE","lineNumber":5,"oldContent":"    }"},{"type":"INSERT","lineNumber":3,"content":"  "}]},{"timestamp":1760775706138,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"public class GlobalExceptionHandler  {"},{"type":"DELETE","lineNumber":3,"oldContent":"  "},{"type":"DELETE","lineNumber":4,"oldContent":"}"},{"type":"INSERT","lineNumber":2,"content":"// package com.project.NetworkApp.exception;"},{"type":"INSERT","lineNumber":4,"content":"import jakarta.persistence.EntityNotFoundException;"},{"type":"INSERT","lineNumber":5,"content":"import org.springframework.http.HttpStatus;"},{"type":"INSERT","lineNumber":6,"content":"import org.springframework.http.ResponseEntity;"},{"type":"INSERT","lineNumber":7,"content":"import org.springframework.web.bind.annotation.ControllerAdvice;"},{"type":"INSERT","lineNumber":8,"content":"import org.springframework.web.bind.annotation.ExceptionHandler;"},{"type":"INSERT","lineNumber":9,"content":""},{"type":"INSERT","lineNumber":10,"content":"import java.util.Map;"},{"type":"INSERT","lineNumber":11,"content":""},{"type":"INSERT","lineNumber":12,"content":"@ControllerAdvice"},{"type":"INSERT","lineNumber":13,"content":"public class GlobalExceptionHandler {"},{"type":"INSERT","lineNumber":14,"content":""},{"type":"INSERT","lineNumber":15,"content":"    /**"},{"type":"INSERT","lineNumber":16,"content":"     * Handles the \"No user with this name\" error."},{"type":"INSERT","lineNumber":17,"content":"     * Returns a 404 Not Found."},{"type":"INSERT","lineNumber":18,"content":"     */"},{"type":"INSERT","lineNumber":19,"content":"    @ExceptionHandler(EntityNotFoundException.class)"},{"type":"INSERT","lineNumber":20,"content":"    public ResponseEntity<Map<String, String>> handleEntityNotFound(EntityNotFoundException ex) {"},{"type":"INSERT","lineNumber":21,"content":"        return new ResponseEntity<>("},{"type":"INSERT","lineNumber":22,"content":"                Map.of(\"message\", ex.getMessage()),"},{"type":"INSERT","lineNumber":23,"content":"                HttpStatus.NOT_FOUND"},{"type":"INSERT","lineNumber":24,"content":"        );"},{"type":"INSERT","lineNumber":25,"content":"    }"},{"type":"INSERT","lineNumber":26,"content":""},{"type":"INSERT","lineNumber":27,"content":"    /**"},{"type":"INSERT","lineNumber":28,"content":"     * Handles \"Incorrect password\" or \"Role mismatch\" errors."},{"type":"INSERT","lineNumber":29,"content":"     * Returns a 401 Unauthorized."},{"type":"INSERT","lineNumber":30,"content":"     */"},{"type":"INSERT","lineNumber":31,"content":"    @ExceptionHandler(SecurityException.class)"},{"type":"INSERT","lineNumber":32,"content":"    public ResponseEntity<Map<String, String>> handleSecurityException(SecurityException ex) {"},{"type":"INSERT","lineNumber":33,"content":"        return new ResponseEntity<>("},{"type":"INSERT","lineNumber":34,"content":"                Map.of(\"message\", ex.getMessage()),"},{"type":"INSERT","lineNumber":35,"content":"                HttpStatus.UNAUTHORIZED"},{"type":"INSERT","lineNumber":36,"content":"        );"},{"type":"INSERT","lineNumber":37,"content":"    }"},{"type":"INSERT","lineNumber":38,"content":"}"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/LoginRequestDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/LoginRequestDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\n// package com.project.NetworkApp.dto;\n\nimport com.project.NetworkApp.enums.UserRole;\n\npublic record LoginRequestDTO(\n        String username,\n        String password,\n        UserRole role\n) {\n}","baseTimestamp":1760775746798},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/FdhRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/FdhRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\n// package com.project.NetworkApp.repository;\n\nimport com.project.NetworkApp.entity.Fdh;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query; // <-- Import Query\nimport org.springframework.stereotype.Repository;\n\nimport java.util.List;\n\n@Repository\npublic interface FdhRepository extends JpaRepository<Fdh, Integer> {\n\n    // This query selects all unique, non-null region values from the Fdh table\n    @Query(\"SELECT DISTINCT f.region FROM Fdh f WHERE f.region IS NOT NULL\")\n    List<String> findDistinctRegions();\n}","baseTimestamp":1760778738818,"deltas":[{"timestamp":1760780949454,"changes":[{"type":"INSERT","lineNumber":17,"content":""},{"type":"INSERT","lineNumber":18,"content":"    @Query(\"SELECT DISTINCT f.region FROM Fdh f WHERE f.headend.city = :city AND f.region IS NOT NULL\")"},{"type":"INSERT","lineNumber":19,"content":"    List<String> findDistinctRegionsByCity(@Param(\"city\") String city);"}]},{"timestamp":1760780953851,"changes":[{"type":"INSERT","lineNumber":7,"content":"import org.springframework.data.repository.query.Param;"},{"type":"DELETE","lineNumber":18,"oldContent":"}"},{"type":"INSERT","lineNumber":21,"content":"}"}]},{"timestamp":1760791603625,"changes":[{"type":"INSERT","lineNumber":21,"content":""},{"type":"INSERT","lineNumber":22,"content":"    List<Fdh> findByHeadendCity(String city);"}]},{"timestamp":1760880879906,"changes":[{"type":"DELETE","lineNumber":22,"oldContent":"}"},{"type":"INSERT","lineNumber":23,"content":""},{"type":"INSERT","lineNumber":24,"content":"    List<Fdh> findByRegion(String region);"},{"type":"INSERT","lineNumber":25,"content":"}"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/FdhService.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/FdhService.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.project.NetworkApp.service;\n\nimport java.util.List;\n\npublic interface FdhService {\n    List<String> getDistinctRegions();\n}","baseTimestamp":1760778765251,"deltas":[{"timestamp":1760780965432,"changes":[{"type":"INSERT","lineNumber":8,"content":""},{"type":"INSERT","lineNumber":9,"content":"    List<String> getRegionsByCity(String city);"}]},{"timestamp":1760791614608,"changes":[{"type":"DELETE","lineNumber":9,"oldContent":"}"},{"type":"INSERT","lineNumber":10,"content":""},{"type":"INSERT","lineNumber":11,"content":"    List<Fdh> getFdhsByCity(String city);"},{"type":"INSERT","lineNumber":12,"content":"}"}]},{"timestamp":1760791619041,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.entity.Fdh;"},{"type":"INSERT","lineNumber":5,"content":""},{"type":"DELETE","lineNumber":9,"oldContent":""},{"type":"INSERT","lineNumber":12,"content":""}]},{"timestamp":1760880900623,"changes":[{"type":"INSERT","lineNumber":5,"content":""},{"type":"DELETE","lineNumber":7,"oldContent":""},{"type":"INSERT","lineNumber":12,"content":""},{"type":"INSERT","lineNumber":15,"content":"    List<Fdh> getFdhsByRegion(String region);"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/FdhServiceImpl.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/FdhServiceImpl.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.project.NetworkApp.service;\n\nimport com.project.NetworkApp.repository.FdhRepository;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n@Service\n@RequiredArgsConstructor\npublic class FdhServiceImpl implements FdhService {\n\n    private final FdhRepository fdhRepository;\n\n    @Override\n    public List<String> getDistinctRegions() {\n        return fdhRepository.findDistinctRegions();\n    }\n}\n","baseTimestamp":1760778780980,"deltas":[{"timestamp":1760778784402,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.Repository.FdhRepository;","oldContent":"import com.project.NetworkApp.repository.FdhRepository;"}]},{"timestamp":1760778791125,"changes":[{"type":"MODIFY","lineNumber":14,"content":"    private  FdhRepository fdhRepository;","oldContent":"    private final FdhRepository fdhRepository;"}]},{"timestamp":1760778796377,"changes":[{"type":"INSERT","lineNumber":6,"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"type":"DELETE","lineNumber":13,"oldContent":""},{"type":"INSERT","lineNumber":14,"content":"    @Autowired"}]},{"timestamp":1760780980357,"changes":[{"type":"INSERT","lineNumber":21,"content":""},{"type":"INSERT","lineNumber":22,"content":"    @Override"},{"type":"INSERT","lineNumber":23,"content":"    public List<String> getRegionsByCity(String city) {"},{"type":"INSERT","lineNumber":24,"content":"        return fdhRepository.findDistinctRegionsByCity(city);"},{"type":"INSERT","lineNumber":25,"content":"    }"}]},{"timestamp":1760791626798,"changes":[{"type":"DELETE","lineNumber":22,"oldContent":"}"},{"type":"DELETE","lineNumber":24,"oldContent":""},{"type":"MODIFY","lineNumber":25,"content":"    }","oldContent":"    }"},{"type":"INSERT","lineNumber":26,"content":""},{"type":"INSERT","lineNumber":27,"content":"    @Override"},{"type":"INSERT","lineNumber":28,"content":"    public List<Fdh> getFdhsByCity(String city) {"},{"type":"INSERT","lineNumber":29,"content":"        return fdhRepository.findByHeadendCity(city);"},{"type":"INSERT","lineNumber":30,"content":"    }"},{"type":"INSERT","lineNumber":31,"content":"}"},{"type":"INSERT","lineNumber":32,"content":""}]},{"timestamp":1760791630313,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.entity.Fdh;"},{"type":"INSERT","lineNumber":24,"content":"    public List<String> getRegionsByCity(String city) {"},{"type":"INSERT","lineNumber":25,"content":"        return fdhRepository.findDistinctRegionsByCity(city);"},{"type":"DELETE","lineNumber":25,"oldContent":"    }"},{"type":"DELETE","lineNumber":27,"oldContent":"        return fdhRepository.findDistinctRegionsByCity(city);"},{"type":"DELETE","lineNumber":29,"oldContent":""},{"type":"MODIFY","lineNumber":32,"content":"}","oldContent":"}"},{"type":"INSERT","lineNumber":33,"content":""}]},{"timestamp":1760880913462,"changes":[{"type":"DELETE","lineNumber":24,"oldContent":"    }"},{"type":"MODIFY","lineNumber":26,"content":"    }","oldContent":""},{"type":"INSERT","lineNumber":27,"content":""},{"type":"INSERT","lineNumber":31,"content":"    }"},{"type":"INSERT","lineNumber":32,"content":""},{"type":"INSERT","lineNumber":33,"content":"    @Override"},{"type":"INSERT","lineNumber":34,"content":"    public List<Fdh> getFdhsByRegion(String region) {"},{"type":"INSERT","lineNumber":35,"content":"        return fdhRepository.findByRegion(region);"},{"type":"INSERT","lineNumber":36,"content":"    }"},{"type":"DELETE","lineNumber":32,"oldContent":"}"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/FdhController.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/FdhController.java","baseContent":"package com.project.NetworkApp.controller;\n\n// package com.project.NetworkApp.controller;\n\nimport com.project.NetworkApp.service.FdhService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/fdh\") // Base path for FDH-related endpoints\n@RequiredArgsConstructor\npublic class FdhController {\n\n    private final FdhService fdhService;\n\n    /**\n     * GET /fdh/regions\n     * Gets a unique list of all neighborhood regions where FDHs are present.\n     */\n    @GetMapping(\"/regions\")\n    public ResponseEntity<List<String>> getFdhRegions() {\n        List<String> regions = fdhService.getDistinctRegions();\n        return ResponseEntity.ok(regions);\n    }\n}\n","baseTimestamp":1760778879308,"deltas":[{"timestamp":1760778885800,"changes":[{"type":"MODIFY","lineNumber":18,"content":"    private  FdhService fdhService;","oldContent":"    private final FdhService fdhService;"}]},{"timestamp":1760778890257,"changes":[{"type":"INSERT","lineNumber":6,"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"type":"DELETE","lineNumber":17,"oldContent":""},{"type":"INSERT","lineNumber":18,"content":"    @Autowired"}]},{"timestamp":1760778892479,"changes":[{"type":"MODIFY","lineNumber":19,"content":"    private FdhService fdhService;","oldContent":"    private  FdhService fdhService;"}]},{"timestamp":1760778895490,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.Service.FdhService;","oldContent":"import com.project.NetworkApp.service.FdhService;"}]},{"timestamp":1760778941216,"changes":[{"type":"INSERT","lineNumber":8,"content":"import org.springframework.web.bind.annotation.CrossOrigin;"},{"type":"MODIFY","lineNumber":16,"content":"@RequestMapping(\"/fdh\")","oldContent":"@RequestMapping(\"/fdh\") // Base path for FDH-related endpoints"},{"type":"INSERT","lineNumber":17,"content":"@CrossOrigin(\"http://localhost:5173\")// Base path for FDH-related endpoints"}]},{"timestamp":1760781098405,"changes":[{"type":"DELETE","lineNumber":16,"oldContent":"@RequestMapping(\"/fdh\") // Base path for FDH-related endpoints"},{"type":"INSERT","lineNumber":18,"content":"@RequiredArgsConstructor"},{"type":"INSERT","lineNumber":32,"content":""},{"type":"INSERT","lineNumber":33,"content":"    @GetMapping(\"/regions-by-city\")"},{"type":"INSERT","lineNumber":34,"content":"    public ResponseEntity<List<String>> getRegionsByCity(@RequestParam String city) {"},{"type":"INSERT","lineNumber":35,"content":"        return ResponseEntity.ok(fdhService.getRegionsByCity(city));"},{"type":"INSERT","lineNumber":36,"content":"    }"}]},{"timestamp":1760781101592,"changes":[{"type":"DELETE","lineNumber":8,"oldContent":"import org.springframework.web.bind.annotation.CrossOrigin;"},{"type":"DELETE","lineNumber":9,"oldContent":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"DELETE","lineNumber":10,"oldContent":"import org.springframework.web.bind.annotation.RequestMapping;"},{"type":"DELETE","lineNumber":11,"oldContent":"import org.springframework.web.bind.annotation.RestController;"},{"type":"INSERT","lineNumber":8,"content":"import org.springframework.web.bind.annotation.*;"},{"type":"DELETE","lineNumber":17,"oldContent":"@RequiredArgsConstructor"},{"type":"INSERT","lineNumber":15,"content":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":33,"oldContent":"}"},{"type":"DELETE","lineNumber":35,"oldContent":""},{"type":"DELETE","lineNumber":37,"oldContent":"    }"},{"type":"INSERT","lineNumber":33,"content":"    }"},{"type":"INSERT","lineNumber":34,"content":"}"},{"type":"INSERT","lineNumber":35,"content":""}]},{"timestamp":1760791644602,"changes":[{"type":"DELETE","lineNumber":12,"oldContent":"@RequiredArgsConstructor"},{"type":"INSERT","lineNumber":15,"content":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":30,"oldContent":"    }"},{"type":"DELETE","lineNumber":31,"oldContent":"}"},{"type":"MODIFY","lineNumber":33,"content":"    }","oldContent":""},{"type":"INSERT","lineNumber":34,"content":""},{"type":"INSERT","lineNumber":35,"content":"    @GetMapping(\"/by-city\")"},{"type":"INSERT","lineNumber":36,"content":"    public ResponseEntity<List<Fdh>> getFdhsByCity(@RequestParam String city) {"},{"type":"INSERT","lineNumber":37,"content":"        return ResponseEntity.ok(fdhService.getFdhsByCity(city));"},{"type":"INSERT","lineNumber":38,"content":"    }"},{"type":"INSERT","lineNumber":39,"content":"}"},{"type":"INSERT","lineNumber":40,"content":""}]},{"timestamp":1760791647845,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.entity.Fdh;"},{"type":"DELETE","lineNumber":14,"oldContent":"@RequiredArgsConstructor"},{"type":"INSERT","lineNumber":16,"content":"@RequiredArgsConstructor"},{"type":"INSERT","lineNumber":32,"content":"    public ResponseEntity<List<String>> getRegionsByCity(@RequestParam String city) {"},{"type":"INSERT","lineNumber":33,"content":"        return ResponseEntity.ok(fdhService.getRegionsByCity(city));"},{"type":"DELETE","lineNumber":33,"oldContent":"    public ResponseEntity<List<String>> getRegionsByCity(@RequestParam String city) {"},{"type":"DELETE","lineNumber":35,"oldContent":"        return ResponseEntity.ok(fdhService.getRegionsByCity(city));"},{"type":"DELETE","lineNumber":37,"oldContent":""},{"type":"MODIFY","lineNumber":40,"content":"}","oldContent":"}"},{"type":"INSERT","lineNumber":41,"content":""}]},{"timestamp":1760880927128,"changes":[{"type":"DELETE","lineNumber":32,"oldContent":"    }"},{"type":"MODIFY","lineNumber":34,"content":"    }","oldContent":""},{"type":"INSERT","lineNumber":35,"content":""},{"type":"INSERT","lineNumber":39,"content":"    }"},{"type":"INSERT","lineNumber":40,"content":""},{"type":"INSERT","lineNumber":41,"content":"    @GetMapping(\"/by-region\")"},{"type":"INSERT","lineNumber":42,"content":"    public ResponseEntity<List<Fdh>> getFdhsByRegion(@RequestParam String region) {"},{"type":"INSERT","lineNumber":43,"content":"        return ResponseEntity.ok(fdhService.getFdhsByRegion(region));"},{"type":"INSERT","lineNumber":44,"content":"    }"},{"type":"DELETE","lineNumber":40,"oldContent":"}"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/HeadendRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/HeadendRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\n// package com.project.NetworkApp.repository;\n\nimport com.project.NetworkApp.entity.Headend;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.List;\n\n@Repository\npublic interface HeadendRepository extends JpaRepository<Headend, Integer> {\n\n    @Query(\"SELECT DISTINCT h.city FROM Headend h WHERE h.city IS NOT NULL\")\n    List<String> findDistinctCities();\n}","baseTimestamp":1760780742387},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/HeadendService.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/HeadendService.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.project.NetworkApp.service;\n\nimport java.util.List;\n\npublic interface HeadendService {\n    List<String> getDistinctCities();\n}","baseTimestamp":1760780761861},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/HeadendServiceImpl.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/HeadendServiceImpl.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.project.NetworkApp.service;\n\nimport com.project.NetworkApp.repository.HeadendRepository;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n@Service\n@RequiredArgsConstructor\npublic class HeadendServiceImpl implements HeadendService {\n\n    private final HeadendRepository headendRepository;\n\n    @Override\n    public List<String> getDistinctCities() {\n        return headendRepository.findDistinctCities();\n    }\n}","baseTimestamp":1760780781973,"deltas":[{"timestamp":1760780785908,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.Repository.HeadendRepository;","oldContent":"import com.project.NetworkApp.repository.HeadendRepository;"}]},{"timestamp":1760780796303,"changes":[{"type":"INSERT","lineNumber":6,"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"type":"INSERT","lineNumber":14,"content":"    @Autowired"},{"type":"INSERT","lineNumber":15,"content":"    private HeadendRepository headendRepository;"},{"type":"DELETE","lineNumber":14,"oldContent":"    private final HeadendRepository headendRepository;"},{"type":"DELETE","lineNumber":15,"oldContent":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/HeadendController.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/HeadendController.java","baseContent":"package com.project.NetworkApp.controller;\n// package com.project.NetworkApp.controller;\n\nimport com.project.NetworkApp.service.HeadendService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/headends\")\n@RequiredArgsConstructor\npublic class HeadendController {\n\n    private final HeadendService headendService;\n\n    @GetMapping(\"/cities\")\n    public ResponseEntity<List<String>> getCities() {\n        return ResponseEntity.ok(headendService.getDistinctCities());\n    }\n}","baseTimestamp":1760780855492,"deltas":[{"timestamp":1760780858580,"changes":[{"type":"MODIFY","lineNumber":3,"content":"import com.project.NetworkApp.Service.HeadendService;","oldContent":"import com.project.NetworkApp.service.HeadendService;"}]},{"timestamp":1760780866511,"changes":[{"type":"INSERT","lineNumber":5,"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"type":"INSERT","lineNumber":17,"content":"    "},{"type":"INSERT","lineNumber":18,"content":"    @Autowired"},{"type":"INSERT","lineNumber":19,"content":"    private  HeadendService headendService;"},{"type":"DELETE","lineNumber":17,"oldContent":"    private final HeadendService headendService;"},{"type":"DELETE","lineNumber":18,"oldContent":""}]},{"timestamp":1760780873502,"changes":[{"type":"DELETE","lineNumber":18,"oldContent":"    "},{"type":"INSERT","lineNumber":20,"content":""}]},{"timestamp":1760781471518,"changes":[{"type":"INSERT","lineNumber":7,"content":"import org.springframework.web.bind.annotation.CrossOrigin;"},{"type":"INSERT","lineNumber":16,"content":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"DELETE","lineNumber":19,"oldContent":""},{"type":"INSERT","lineNumber":22,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/SplitterService.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/SplitterService.java","baseContent":"package com.project.NetworkApp.Service;\n\npublic class SplitterService {\n}\n","baseTimestamp":1760791690640,"deltas":[{"timestamp":1760791693464,"changes":[{"type":"INSERT","lineNumber":3,"content":"    List<Splitter> getSplittersByFdh(Integer fdhId);"}]},{"timestamp":1760791696453,"changes":[{"type":"INSERT","lineNumber":2,"content":"import com.project.NetworkApp.entity.Splitter;"},{"type":"INSERT","lineNumber":3,"content":""}]},{"timestamp":1760791704155,"changes":[{"type":"DELETE","lineNumber":3,"oldContent":"public class SplitterService {"},{"type":"INSERT","lineNumber":4,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":5,"content":""},{"type":"INSERT","lineNumber":6,"content":"public class SplitterService {"}]},{"timestamp":1760791722020,"changes":[{"type":"INSERT","lineNumber":3,"content":""},{"type":"INSERT","lineNumber":4,"content":"i// package com.project.NetworkApp.service;"},{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.entity.Splitter;"},{"type":"DELETE","lineNumber":5,"oldContent":""},{"type":"INSERT","lineNumber":8,"content":"public interface SplitterService {"},{"type":"DELETE","lineNumber":7,"oldContent":"public class SplitterService {"},{"type":"DELETE","lineNumber":9,"oldContent":""}]},{"timestamp":1760791724443,"changes":[{"type":"INSERT","lineNumber":4,"content":"/ package com.project.NetworkApp.service;"},{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.entity.Splitter;"},{"type":"DELETE","lineNumber":5,"oldContent":"i// package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.project.NetworkApp.entity.Splitter;"},{"type":"MODIFY","lineNumber":9,"content":"    List<Splitter> getSplittersByFdh(Integer fdhId);","oldContent":"    List<Splitter> getSplittersByFdh(Integer fdhId);"}]},{"timestamp":1760791728088,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"/ package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":5,"oldContent":"import java.util.List;"},{"type":"INSERT","lineNumber":4,"content":"package com.project.NetworkApp.service;"},{"type":"INSERT","lineNumber":6,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":8,"content":"public interface SplitterService {"},{"type":"DELETE","lineNumber":9,"oldContent":"    List<Splitter> getSplittersByFdh(Integer fdhId);"}]},{"timestamp":1760791731107,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":5,"oldContent":"import java.util.List;"},{"type":"INSERT","lineNumber":4,"content":""},{"type":"INSERT","lineNumber":6,"content":"import java.util.List;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/SplitterServiceImpl.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/SplitterServiceImpl.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.project.NetworkApp.service;\nimport com.project.NetworkApp.entity.Splitter;\nimport com.project.NetworkApp.repository.SplitterRepository;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Service;\nimport java.util.List;\n\n@Service\n@RequiredArgsConstructor\npublic class SplitterServiceImpl implements SplitterService {\n    private final SplitterRepository splitterRepository;\n\n    @Override\n    public List<Splitter> getSplittersByFdh(Integer fdhId) {\n        return splitterRepository.findByFdhId(fdhId);\n    }\n}","baseTimestamp":1760794429974,"deltas":[{"timestamp":1760794455261,"changes":[{"type":"MODIFY","lineNumber":12,"content":"    private  SplitterRepository splitterRepository;","oldContent":"    private final SplitterRepository splitterRepository;"}]},{"timestamp":1760794462193,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.Repository.SplitterRepository;","oldContent":"import com.project.NetworkApp.repository.SplitterRepository;"}]},{"timestamp":1760794471915,"changes":[{"type":"INSERT","lineNumber":6,"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"type":"INSERT","lineNumber":13,"content":"    "},{"type":"INSERT","lineNumber":14,"content":"    @Autowired"}]},{"timestamp":1760794477244,"changes":[{"type":"DELETE","lineNumber":13,"oldContent":"    private  SplitterRepository splitterRepository;"},{"type":"DELETE","lineNumber":14,"oldContent":"    "},{"type":"INSERT","lineNumber":15,"content":"    private  SplitterRepository splitterRepository;"},{"type":"INSERT","lineNumber":16,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/SplitterController.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/SplitterController.java","baseContent":"package com.project.NetworkApp.controller;\n\n// package com.project.NetworkApp.controller;\nimport com.project.NetworkApp.entity.Splitter;\nimport com.project.NetworkApp.service.SplitterService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/splitters\")\n@RequiredArgsConstructor\npublic class SplitterController {\n    private final SplitterService splitterService;\n\n    @GetMapping(\"/by-fdh\")\n    public ResponseEntity<List<Splitter>> getSplittersByFdh(@RequestParam Integer fdhId) {\n        return ResponseEntity.ok(splitterService.getSplittersByFdh(fdhId));\n    }\n}\n","baseTimestamp":1760794508477,"deltas":[{"timestamp":1760794518781,"changes":[{"type":"INSERT","lineNumber":6,"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"type":"DELETE","lineNumber":14,"oldContent":"    private final SplitterService splitterService;"},{"type":"INSERT","lineNumber":15,"content":"    !Autowired"},{"type":"INSERT","lineNumber":16,"content":"    private  SplitterService splitterService;"}]},{"timestamp":1760794523180,"changes":[{"type":"DELETE","lineNumber":15,"oldContent":"    !Autowired"},{"type":"DELETE","lineNumber":16,"oldContent":""},{"type":"INSERT","lineNumber":15,"content":"    @Autowired"},{"type":"INSERT","lineNumber":17,"content":""}]},{"timestamp":1760794528884,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.Service.SplitterService;","oldContent":"import com.project.NetworkApp.service.SplitterService;"},{"type":"MODIFY","lineNumber":17,"content":"","oldContent":""}]},{"timestamp":1760881622163,"changes":[{"type":"INSERT","lineNumber":13,"content":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"INSERT","lineNumber":17,"content":"    private  SplitterService splitterService;"},{"type":"DELETE","lineNumber":17,"oldContent":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/AssetRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/AssetRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\n// package com.project.NetworkApp.repository;\n// ... imports\nimport com.project.NetworkApp.enums.AssetStatus;\nimport com.project.NetworkApp.enums.AssetType;\n\n@Repository\npublic interface AssetRepository extends JpaRepository<Asset, Integer> {\n    // ... (existing methods)\n\n    // This query finds assets of a specific type and status\n    List<Asset> findByAssetTypeAndStatus(AssetType assetType, AssetStatus status);\n}","baseTimestamp":1760794622384,"deltas":[{"timestamp":1760794628674,"changes":[{"type":"INSERT","lineNumber":6,"content":"import org.springframework.stereotype.Repository;"}]},{"timestamp":1760794634033,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.entity.Asset;"},{"type":"INSERT","lineNumber":7,"content":"import org.springframework.data.jpa.repository.JpaRepository;"}]},{"timestamp":1760794638219,"changes":[{"type":"MODIFY","lineNumber":8,"content":"import org.springframework.stereotype.Repository;","oldContent":"import org.springframework.stereotype.Repository;"},{"type":"INSERT","lineNumber":10,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":11,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssetService.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssetService.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.project.NetworkApp.service;\n// ... imports\nimport com.project.NetworkApp.enums.AssetType;\nimport java.util.List;\n\npublic interface AssetService {\n    // ... (existing methods)\n    List<AssetResponseDTO> getAvailableAssetsByType(AssetType assetType);\n}\n","baseTimestamp":1760794663000,"deltas":[{"timestamp":1760794769578,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.AssetResponseDTO;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/AssetResponseDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/AssetResponseDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\n// package com.project.NetworkApp.dto;\n\nimport com.project.NetworkApp.enums.AssetStatus;\nimport com.project.NetworkApp.enums.AssetType;\nimport java.time.LocalDateTime;\n\n/**\n * DTO for safely responding with Asset data.\n */\npublic record AssetResponseDTO(\n        Integer id,\n        AssetType assetType,\n        String model,\n        String serialNumber,\n        AssetStatus status,\n        String location,\n        Integer assignedToCustomerId,\n        LocalDateTime assignedDate\n) {\n}","baseTimestamp":1760794746629},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssetServiceImpl.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssetServiceImpl.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.project.NetworkApp.service;\n// ... imports\nimport com.project.NetworkApp.enums.AssetStatus;\nimport com.project.NetworkApp.enums.AssetType;\nimport java.util.stream.Collectors;\n\n@Service\n@RequiredArgsConstructor\npublic class AssetServiceImpl implements AssetService {\n    // ... (existing repository & methods)\n\n    @Override\n    public List<AssetResponseDTO> getAvailableAssetsByType(AssetType assetType) {\n        List<Asset> assets = assetRepository.findByAssetTypeAndStatus(assetType, AssetStatus.AVAILABLE);\n        return assets.stream()\n                .map(AssetUtility::toDTO)\n                .collect(Collectors.toList());\n    }\n}","baseTimestamp":1760794792133,"deltas":[{"timestamp":1760794841023,"changes":[{"type":"MODIFY","lineNumber":19,"content":"    private AssetRepository assetRepository;","oldContent":"    import AssetRepository assetRepository;"}]},{"timestamp":1760794845353,"changes":[{"type":"INSERT","lineNumber":19,"content":"    "}]},{"timestamp":1760794848442,"changes":[{"type":"INSERT","lineNumber":10,"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"type":"DELETE","lineNumber":19,"oldContent":"    "},{"type":"INSERT","lineNumber":20,"content":"    @Autowired"}]},{"timestamp":1760799113945,"changes":[{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.Utility.AssetUtility;"}]},{"timestamp":1760799201777,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"// package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":3,"oldContent":"// ... imports"},{"type":"INSERT","lineNumber":2,"content":"package com.project.NetworkApp.Service; // Corrected package name based on your first line"},{"type":"INSERT","lineNumber":3,"content":""},{"type":"MODIFY","lineNumber":11,"content":"// import org.springframework.beans.factory.annotation.Autowired; // Remove this import","oldContent":"import org.springframework.beans.factory.annotation.Autowired;"},{"type":"INSERT","lineNumber":13,"content":"import jakarta.persistence.EntityNotFoundException; // Assuming you might need this later"},{"type":"MODIFY","lineNumber":19,"content":"@RequiredArgsConstructor // This handles the constructor injection","oldContent":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":20,"oldContent":"    // ... (existing repository & methods)"},{"type":"DELETE","lineNumber":21,"oldContent":"    @Autowired"},{"type":"DELETE","lineNumber":22,"oldContent":"    private AssetRepository assetRepository;"},{"type":"INSERT","lineNumber":21,"content":""},{"type":"INSERT","lineNumber":22,"content":"    // Make the field final and remove @Autowired"},{"type":"INSERT","lineNumber":23,"content":"    private final AssetRepository assetRepository;"},{"type":"INSERT","lineNumber":24,"content":""},{"type":"INSERT","lineNumber":25,"content":"    // --- Assuming you also have these methods from before ---"},{"type":"INSERT","lineNumber":27,"content":"    public AssetResponseDTO createAsset(com.project.NetworkApp.DTO.AssetCreateDTO assetCreateDTO) {"},{"type":"INSERT","lineNumber":28,"content":"        // TODO: Add check for duplicate serialNumber"},{"type":"INSERT","lineNumber":29,"content":"        Asset newAsset = AssetUtility.toEntity(assetCreateDTO);"},{"type":"INSERT","lineNumber":30,"content":"        Asset savedAsset = assetRepository.save(newAsset);"},{"type":"INSERT","lineNumber":31,"content":"        return AssetUtility.toDTO(savedAsset);"},{"type":"INSERT","lineNumber":32,"content":"    }"},{"type":"INSERT","lineNumber":33,"content":""},{"type":"INSERT","lineNumber":34,"content":"    @Override"},{"type":"INSERT","lineNumber":35,"content":"    public AssetResponseDTO getAssetById(Integer id) {"},{"type":"INSERT","lineNumber":36,"content":"        Asset asset = assetRepository.findById(id)"},{"type":"INSERT","lineNumber":37,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Asset not found with id: \" + id));"},{"type":"INSERT","lineNumber":38,"content":"        return AssetUtility.toDTO(asset);"},{"type":"INSERT","lineNumber":39,"content":"    }"},{"type":"INSERT","lineNumber":40,"content":""},{"type":"INSERT","lineNumber":41,"content":"    @Override"},{"type":"INSERT","lineNumber":42,"content":"    public List<AssetResponseDTO> getAllAssets() {"},{"type":"INSERT","lineNumber":43,"content":"        return assetRepository.findAll().stream()"},{"type":"INSERT","lineNumber":44,"content":"                .map(AssetUtility::toDTO)"},{"type":"INSERT","lineNumber":45,"content":"                .collect(Collectors.toList());"},{"type":"INSERT","lineNumber":46,"content":"    }"},{"type":"INSERT","lineNumber":47,"content":"    // --- End of assumed methods ---"},{"type":"INSERT","lineNumber":48,"content":""},{"type":"INSERT","lineNumber":49,"content":""},{"type":"INSERT","lineNumber":50,"content":"    @Override"}]},{"timestamp":1760799225071,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"package com.project.NetworkApp.Service; // Corrected package name based on your first line"},{"type":"DELETE","lineNumber":3,"oldContent":""},{"type":"INSERT","lineNumber":2,"content":"// package com.project.NetworkApp.service;"},{"type":"INSERT","lineNumber":3,"content":"// ... imports"},{"type":"MODIFY","lineNumber":11,"content":"import org.springframework.beans.factory.annotation.Autowired;","oldContent":"// import org.springframework.beans.factory.annotation.Autowired; // Remove this import"},{"type":"DELETE","lineNumber":13,"oldContent":"import jakarta.persistence.EntityNotFoundException; // Assuming you might need this later"},{"type":"DELETE","lineNumber":20,"oldContent":"@RequiredArgsConstructor // This handles the constructor injection"},{"type":"DELETE","lineNumber":21,"oldContent":""},{"type":"DELETE","lineNumber":22,"oldContent":"    // Make the field final and remove @Autowired"},{"type":"DELETE","lineNumber":23,"oldContent":"    private final AssetRepository assetRepository;"},{"type":"INSERT","lineNumber":19,"content":"public class AssetServiceImpl implements AssetService {"},{"type":"INSERT","lineNumber":20,"content":"    // ... (existing repository & methods)"},{"type":"INSERT","lineNumber":21,"content":"    @Autowired"},{"type":"INSERT","lineNumber":22,"content":"    private AssetRepository assetRepository;"},{"type":"DELETE","lineNumber":25,"oldContent":""},{"type":"DELETE","lineNumber":27,"oldContent":"    // --- Assuming you also have these methods from before ---"},{"type":"DELETE","lineNumber":30,"oldContent":"    public AssetResponseDTO createAsset(com.project.NetworkApp.DTO.AssetCreateDTO assetCreateDTO) {"},{"type":"DELETE","lineNumber":32,"oldContent":"        // TODO: Add check for duplicate serialNumber"},{"type":"DELETE","lineNumber":34,"oldContent":"        Asset newAsset = AssetUtility.toEntity(assetCreateDTO);"},{"type":"DELETE","lineNumber":36,"oldContent":"        Asset savedAsset = assetRepository.save(newAsset);"},{"type":"DELETE","lineNumber":38,"oldContent":"        return AssetUtility.toDTO(savedAsset);"},{"type":"DELETE","lineNumber":39,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":40,"oldContent":"    }"},{"type":"DELETE","lineNumber":41,"oldContent":""},{"type":"DELETE","lineNumber":42,"oldContent":""},{"type":"DELETE","lineNumber":43,"oldContent":""},{"type":"DELETE","lineNumber":44,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":45,"oldContent":"    // --- End of assumed methods ---"},{"type":"DELETE","lineNumber":46,"oldContent":"    public AssetResponseDTO getAssetById(Integer id) {"},{"type":"DELETE","lineNumber":47,"oldContent":"    }"},{"type":"DELETE","lineNumber":48,"oldContent":"        Asset asset = assetRepository.findById(id)"},{"type":"DELETE","lineNumber":49,"oldContent":"                .collect(Collectors.toList());"},{"type":"DELETE","lineNumber":50,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Asset not found with id: \" + id));"},{"type":"DELETE","lineNumber":51,"oldContent":"                .map(AssetUtility::toDTO)"},{"type":"DELETE","lineNumber":52,"oldContent":"        return AssetUtility.toDTO(asset);"},{"type":"DELETE","lineNumber":53,"oldContent":"        return assetRepository.findAll().stream()"},{"type":"DELETE","lineNumber":54,"oldContent":"    }"},{"type":"DELETE","lineNumber":55,"oldContent":"    public List<AssetResponseDTO> getAllAssets() {"},{"type":"DELETE","lineNumber":56,"oldContent":""},{"type":"DELETE","lineNumber":57,"oldContent":"    @Override"}]},{"timestamp":1760799235791,"changes":[{"type":"MODIFY","lineNumber":19,"content":"public class AssetServiceImpl implements AssetService {","oldContent":"public class AssetServiceImpl implements AssetService {"},{"type":"MODIFY","lineNumber":28,"content":"                .collect(Collectors.toList()).reversed();","oldContent":"                .collect(Collectors.toList());"}]},{"timestamp":1760799238973,"changes":[{"type":"INSERT","lineNumber":18,"content":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":19,"oldContent":"public class AssetServiceImpl implements AssetService {"},{"type":"MODIFY","lineNumber":28,"content":"                .collect(Collectors.toList());","oldContent":"                .collect(Collectors.toList()).reversed();"}]},{"timestamp":1760799285413,"changes":[{"type":"MODIFY","lineNumber":21,"content":"","oldContent":"    @Autowired"}]},{"timestamp":1760799319804,"changes":[{"type":"MODIFY","lineNumber":20,"content":"    ","oldContent":"    // ... (existing repository & methods)"}]},{"timestamp":1760799383109,"changes":[{"type":"MODIFY","lineNumber":21,"content":"","oldContent":"    "}]},{"timestamp":1760801209351,"changes":[{"type":"DELETE","lineNumber":20,"oldContent":"    "},{"type":"DELETE","lineNumber":22,"oldContent":"    private AssetRepository assetRepository;"},{"type":"INSERT","lineNumber":21,"content":""},{"type":"INSERT","lineNumber":22,"content":"    private final AssetRepository assetRepository;"}]},{"timestamp":1760801299279,"changes":[{"type":"DELETE","lineNumber":11,"oldContent":"import org.springframework.beans.factory.annotation.Autowired;"}]},{"timestamp":1760886306520,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.project.NetworkApp.DTO.AssetResponseDTO;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.project.NetworkApp.Repository.AssetRepository;"},{"type":"DELETE","lineNumber":6,"oldContent":"import com.project.NetworkApp.Utility.AssetUtility;"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.project.NetworkApp.entity.Asset;"},{"type":"DELETE","lineNumber":8,"oldContent":"import com.project.NetworkApp.enums.AssetStatus;"},{"type":"DELETE","lineNumber":9,"oldContent":"import com.project.NetworkApp.enums.AssetType;"},{"type":"DELETE","lineNumber":10,"oldContent":"import lombok.RequiredArgsConstructor;"},{"type":"DELETE","lineNumber":11,"oldContent":"import org.springframework.stereotype.Service;"},{"type":"INSERT","lineNumber":4,"content":"// package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":13,"oldContent":"import java.util.List;"},{"type":"DELETE","lineNumber":14,"oldContent":"import java.util.stream.Collectors;"},{"type":"INSERT","lineNumber":6,"content":"// ... other imports"},{"type":"INSERT","lineNumber":7,"content":"import com.project.NetworkApp.entity.FiberDropLine; // Import FiberDropLine"},{"type":"INSERT","lineNumber":8,"content":"import com.project.NetworkApp.enums.FiberLineStatus; // Import FiberLineStatus"},{"type":"INSERT","lineNumber":9,"content":"import com.project.NetworkApp.repository.FiberDropLineRepository; // Import the new repository"},{"type":"DELETE","lineNumber":18,"oldContent":"public class AssetServiceImpl implements AssetService {"},{"type":"INSERT","lineNumber":13,"content":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"INSERT","lineNumber":15,"content":"    private final CustomerRepository customerRepository;"},{"type":"INSERT","lineNumber":16,"content":"    private final SplitterRepository splitterRepository;"},{"type":"INSERT","lineNumber":17,"content":"    private final DeploymentTaskRepository deploymentTaskRepository;"},{"type":"INSERT","lineNumber":18,"content":"    private final FiberDropLineRepository fiberDropLineRepository; // <-- Inject FiberDropLineRepository"},{"type":"DELETE","lineNumber":21,"oldContent":"    private final AssetRepository assetRepository;"},{"type":"DELETE","lineNumber":23,"oldContent":"    public List<AssetResponseDTO> getAvailableAssetsByType(AssetType assetType) {"},{"type":"DELETE","lineNumber":24,"oldContent":"        List<Asset> assets = assetRepository.findByAssetTypeAndStatus(assetType, AssetStatus.AVAILABLE);"},{"type":"DELETE","lineNumber":25,"oldContent":"        return assets.stream()"},{"type":"DELETE","lineNumber":26,"oldContent":"                .map(AssetUtility::toDTO)"},{"type":"DELETE","lineNumber":27,"oldContent":"                .collect(Collectors.toList());"},{"type":"INSERT","lineNumber":21,"content":"    @Transactional"},{"type":"INSERT","lineNumber":22,"content":"    public void assignNetworkPath(AssignmentRequestDTO dto) {"},{"type":"INSERT","lineNumber":23,"content":"        // 1. Find Customer"},{"type":"INSERT","lineNumber":24,"content":"        Customer customer = customerRepository.findById(dto.customerId())"},{"type":"INSERT","lineNumber":25,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found: \" + dto.customerId()));"},{"type":"INSERT","lineNumber":26,"content":"        if (customer.getStatus() != CustomerStatus.PENDING) {"},{"type":"INSERT","lineNumber":27,"content":"            throw new IllegalStateException(\"Customer is not in PENDING status.\");"},{"type":"INSERT","lineNumber":28,"content":"        }"},{"type":"INSERT","lineNumber":29,"content":""},{"type":"INSERT","lineNumber":30,"content":"        // 2. Find Splitter"},{"type":"INSERT","lineNumber":31,"content":"        Splitter splitter = splitterRepository.findById(dto.splitterId())"},{"type":"INSERT","lineNumber":32,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found: \" + dto.splitterId()));"},{"type":"INSERT","lineNumber":33,"content":""},{"type":"INSERT","lineNumber":34,"content":"        // --- Core Logic ---"},{"type":"INSERT","lineNumber":35,"content":"        // 3. Update Customer"},{"type":"INSERT","lineNumber":36,"content":"        customer.setSplitter(splitter);"},{"type":"INSERT","lineNumber":37,"content":"        customer.setAssignedPort(dto.port());"},{"type":"INSERT","lineNumber":38,"content":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"INSERT","lineNumber":39,"content":"        customer.setStatus(CustomerStatus.SCHEDULED);"},{"type":"INSERT","lineNumber":40,"content":"        customerRepository.save(customer);"},{"type":"INSERT","lineNumber":41,"content":""},{"type":"INSERT","lineNumber":42,"content":"        // 4. Create FiberDropLine"},{"type":"INSERT","lineNumber":43,"content":"        FiberDropLine fiberLine = new FiberDropLine();"},{"type":"INSERT","lineNumber":44,"content":"        fiberLine.setSplitter(splitter);"},{"type":"INSERT","lineNumber":45,"content":"        fiberLine.setCustomer(customer);"},{"type":"INSERT","lineNumber":46,"content":"        fiberLine.setLengthMeters(dto.fiberLengthMeters());"},{"type":"INSERT","lineNumber":47,"content":"        fiberLine.setStatus(FiberLineStatus.ACTIVE); // Assuming it's active upon assignment"},{"type":"INSERT","lineNumber":48,"content":"        fiberDropLineRepository.save(fiberLine);"},{"type":"INSERT","lineNumber":49,"content":""},{"type":"INSERT","lineNumber":50,"content":"        // 5. Create Deployment Task"},{"type":"INSERT","lineNumber":51,"content":"        DeploymentTask newTask = new DeploymentTask();"},{"type":"INSERT","lineNumber":52,"content":"        newTask.setCustomer(customer);"},{"type":"INSERT","lineNumber":53,"content":"        newTask.setStatus(TaskStatus.SCHEDULED);"},{"type":"INSERT","lineNumber":54,"content":"        newTask.setScheduledDate(LocalDate.now().plusDays(1));"},{"type":"INSERT","lineNumber":55,"content":"        newTask.setNotes(\"Assign network path: Splitter \" + splitter.getId() + \", Port \" + dto.port() + \". Fiber Length: \" + dto.fiberLengthMeters() + \"m\");"},{"type":"INSERT","lineNumber":56,"content":"        deploymentTaskRepository.save(newTask);"}]},{"timestamp":1760886313214,"changes":[{"type":"INSERT","lineNumber":5,"content":""},{"type":"MODIFY","lineNumber":9,"content":"import com.project.NetworkApp.Repository.FiberDropLineRepository; // Import the new repository","oldContent":"import com.project.NetworkApp.repository.FiberDropLineRepository; // Import the new repository"},{"type":"INSERT","lineNumber":11,"content":"@Service"},{"type":"INSERT","lineNumber":12,"content":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":11,"oldContent":"    private final CustomerRepository customerRepository;"},{"type":"INSERT","lineNumber":15,"content":"    private final CustomerRepository customerRepository;"},{"type":"DELETE","lineNumber":14,"oldContent":"public class AssetServiceImpl implements AssetService {"},{"type":"DELETE","lineNumber":16,"oldContent":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":19,"oldContent":""},{"type":"INSERT","lineNumber":20,"content":"    @Override"},{"type":"DELETE","lineNumber":22,"oldContent":"        List<Asset> assets = assetRepository.findByAssetTypeAndStatus(assetType, AssetStatus.AVAILABLE);"},{"type":"DELETE","lineNumber":29,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":31,"oldContent":""},{"type":"DELETE","lineNumber":33,"oldContent":"        deploymentTaskRepository.save(newTask);"},{"type":"DELETE","lineNumber":35,"oldContent":"        newTask.setNotes(\"Assign network path: Splitter \" + splitter.getId() + \", Port \" + dto.port() + \". Fiber Length: \" + dto.fiberLengthMeters() + \"m\");"},{"type":"DELETE","lineNumber":37,"oldContent":"        newTask.setScheduledDate(LocalDate.now().plusDays(1));"},{"type":"DELETE","lineNumber":39,"oldContent":"        newTask.setStatus(TaskStatus.SCHEDULED);"},{"type":"DELETE","lineNumber":41,"oldContent":"        newTask.setCustomer(customer);"},{"type":"DELETE","lineNumber":43,"oldContent":"        DeploymentTask newTask = new DeploymentTask();"},{"type":"DELETE","lineNumber":45,"oldContent":"        // 5. Create Deployment Task"},{"type":"DELETE","lineNumber":47,"oldContent":""},{"type":"DELETE","lineNumber":49,"oldContent":"        fiberDropLineRepository.save(fiberLine);"},{"type":"DELETE","lineNumber":51,"oldContent":"        fiberLine.setStatus(FiberLineStatus.ACTIVE); // Assuming it's active upon assignment"},{"type":"DELETE","lineNumber":53,"oldContent":"        fiberLine.setLengthMeters(dto.fiberLengthMeters());"},{"type":"DELETE","lineNumber":55,"oldContent":"        fiberLine.setCustomer(customer);"},{"type":"DELETE","lineNumber":57,"oldContent":"        fiberLine.setSplitter(splitter);"},{"type":"INSERT","lineNumber":44,"content":"        fiberLine.setSplitter(splitter);"},{"type":"INSERT","lineNumber":45,"content":"        fiberLine.setCustomer(customer);"},{"type":"INSERT","lineNumber":46,"content":"        fiberLine.setLengthMeters(dto.fiberLengthMeters());"},{"type":"INSERT","lineNumber":47,"content":"        fiberLine.setStatus(FiberLineStatus.ACTIVE); // Assuming it's active upon assignment"},{"type":"INSERT","lineNumber":48,"content":"        fiberDropLineRepository.save(fiberLine);"},{"type":"INSERT","lineNumber":49,"content":""},{"type":"INSERT","lineNumber":50,"content":"        // 5. Create Deployment Task"},{"type":"INSERT","lineNumber":51,"content":"        DeploymentTask newTask = new DeploymentTask();"},{"type":"INSERT","lineNumber":52,"content":"        newTask.setCustomer(customer);"},{"type":"INSERT","lineNumber":53,"content":"        newTask.setStatus(TaskStatus.SCHEDULED);"},{"type":"INSERT","lineNumber":54,"content":"        newTask.setScheduledDate(LocalDate.now().plusDays(1));"},{"type":"INSERT","lineNumber":55,"content":"        newTask.setNotes(\"Assign network path: Splitter \" + splitter.getId() + \", Port \" + dto.port() + \". Fiber Length: \" + dto.fiberLengthMeters() + \"m\");"},{"type":"INSERT","lineNumber":56,"content":"        deploymentTaskRepository.save(newTask);"},{"type":"INSERT","lineNumber":57,"content":"    }"},{"type":"INSERT","lineNumber":58,"content":"}"}]},{"timestamp":1760886316132,"changes":[{"type":"DELETE","lineNumber":9,"oldContent":"import com.project.NetworkApp.repository.FiberDropLineRepository; // Import the new repository"},{"type":"DELETE","lineNumber":11,"oldContent":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"INSERT","lineNumber":10,"content":"import org.springframework.stereotype.Service;"},{"type":"INSERT","lineNumber":11,"content":""},{"type":"INSERT","lineNumber":14,"content":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"DELETE","lineNumber":15,"oldContent":"    private final SplitterRepository splitterRepository;"},{"type":"INSERT","lineNumber":17,"content":"    private final SplitterRepository splitterRepository;"},{"type":"DELETE","lineNumber":36,"oldContent":"        fiberLine.setSplitter(splitter);"},{"type":"INSERT","lineNumber":38,"content":"        customer.setAssignedPort(dto.port());"},{"type":"INSERT","lineNumber":39,"content":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"INSERT","lineNumber":40,"content":"        customer.setStatus(CustomerStatus.SCHEDULED);"},{"type":"INSERT","lineNumber":41,"content":"        customerRepository.save(customer);"},{"type":"INSERT","lineNumber":42,"content":""},{"type":"INSERT","lineNumber":43,"content":"        // 4. Create FiberDropLine"},{"type":"INSERT","lineNumber":44,"content":"        FiberDropLine fiberLine = new FiberDropLine();"},{"type":"INSERT","lineNumber":45,"content":"        fiberLine.setSplitter(splitter);"},{"type":"DELETE","lineNumber":40,"oldContent":"        customer.setAssignedPort(dto.port());"},{"type":"DELETE","lineNumber":43,"oldContent":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"DELETE","lineNumber":46,"oldContent":"        customer.setStatus(CustomerStatus.SCHEDULED);"},{"type":"DELETE","lineNumber":49,"oldContent":"        customerRepository.save(customer);"},{"type":"DELETE","lineNumber":52,"oldContent":""},{"type":"DELETE","lineNumber":55,"oldContent":"        // 4. Create FiberDropLine"},{"type":"DELETE","lineNumber":58,"oldContent":"        FiberDropLine fiberLine = new FiberDropLine();"}]},{"timestamp":1760886318870,"changes":[{"type":"MODIFY","lineNumber":10,"content":"import lombok.RequiredArgsConstructor;","oldContent":"import org.springframework.stereotype.Service;"},{"type":"INSERT","lineNumber":11,"content":"import org.springframework.stereotype.Service;"},{"type":"DELETE","lineNumber":15,"oldContent":"public class AssetServiceImpl implements AssetService {"},{"type":"INSERT","lineNumber":16,"content":""},{"type":"DELETE","lineNumber":39,"oldContent":"        fiberLine.setCustomer(customer);"},{"type":"DELETE","lineNumber":41,"oldContent":"        fiberLine.setLengthMeters(dto.fiberLengthMeters());"},{"type":"DELETE","lineNumber":44,"oldContent":"        fiberLine.setStatus(FiberLineStatus.ACTIVE); // Assuming it's active upon assignment"},{"type":"DELETE","lineNumber":46,"oldContent":"        fiberDropLineRepository.save(fiberLine);"},{"type":"DELETE","lineNumber":49,"oldContent":""},{"type":"INSERT","lineNumber":47,"content":"        fiberLine.setCustomer(customer);"},{"type":"INSERT","lineNumber":48,"content":"        fiberLine.setLengthMeters(dto.fiberLengthMeters());"},{"type":"INSERT","lineNumber":49,"content":"        fiberLine.setStatus(FiberLineStatus.ACTIVE); // Assuming it's active upon assignment"},{"type":"INSERT","lineNumber":50,"content":"        fiberDropLineRepository.save(fiberLine);"},{"type":"INSERT","lineNumber":51,"content":""}]},{"timestamp":1760886333564,"changes":[{"type":"INSERT","lineNumber":7,"content":"import com.project.NetworkApp.Repository.CustomerRepository;"},{"type":"INSERT","lineNumber":8,"content":"import com.project.NetworkApp.Repository.SplitterRepository;"},{"type":"DELETE","lineNumber":9,"oldContent":"import org.springframework.stereotype.Service;"},{"type":"INSERT","lineNumber":11,"content":"import com.project.NetworkApp.Repository.FiberDropLineRepository; // Import the new repository"},{"type":"DELETE","lineNumber":44,"oldContent":"        fiberLine.setCustomer(customer);"},{"type":"DELETE","lineNumber":46,"oldContent":"        fiberLine.setLengthMeters(dto.fiberLengthMeters());"},{"type":"INSERT","lineNumber":48,"content":"        fiberLine.setSplitter(splitter);"},{"type":"INSERT","lineNumber":49,"content":"        fiberLine.setCustomer(customer);"},{"type":"INSERT","lineNumber":50,"content":"        fiberLine.setLengthMeters(dto.fiberLengthMeters());"},{"type":"DELETE","lineNumber":50,"oldContent":"        fiberLine.setSplitter(splitter);"}]},{"timestamp":1760886336910,"changes":[{"type":"MODIFY","lineNumber":8,"content":"import com.project.NetworkApp.Repository.DeploymentTaskRepository;","oldContent":"import com.project.NetworkApp.entity.FiberDropLine; // Import FiberDropLine"},{"type":"INSERT","lineNumber":10,"content":"import com.project.NetworkApp.entity.FiberDropLine; // Import FiberDropLine"},{"type":"DELETE","lineNumber":11,"oldContent":"import lombok.RequiredArgsConstructor;"},{"type":"INSERT","lineNumber":13,"content":"import lombok.RequiredArgsConstructor;"},{"type":"DELETE","lineNumber":49,"oldContent":"        fiberLine.setStatus(FiberLineStatus.ACTIVE); // Assuming it's active upon assignment"},{"type":"DELETE","lineNumber":51,"oldContent":"        fiberDropLineRepository.save(fiberLine);"},{"type":"INSERT","lineNumber":52,"content":"        fiberLine.setStatus(FiberLineStatus.ACTIVE); // Assuming it's active upon assignment"},{"type":"INSERT","lineNumber":53,"content":"        fiberDropLineRepository.save(fiberLine);"}]},{"timestamp":1760886351145,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"// package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":5,"oldContent":""},{"type":"DELETE","lineNumber":6,"oldContent":"// ... other imports"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.project.NetworkApp.Repository.CustomerRepository;"},{"type":"DELETE","lineNumber":8,"oldContent":"import com.project.NetworkApp.Repository.DeploymentTaskRepository;"},{"type":"DELETE","lineNumber":9,"oldContent":"import com.project.NetworkApp.Repository.SplitterRepository;"},{"type":"DELETE","lineNumber":10,"oldContent":"import com.project.NetworkApp.entity.FiberDropLine; // Import FiberDropLine"},{"type":"DELETE","lineNumber":11,"oldContent":"import com.project.NetworkApp.enums.FiberLineStatus; // Import FiberLineStatus"},{"type":"DELETE","lineNumber":12,"oldContent":"import com.project.NetworkApp.Repository.FiberDropLineRepository; // Import the new repository"},{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.AssetResponseDTO;"},{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.Repository.AssetRepository;"},{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.Utility.AssetUtility;"},{"type":"INSERT","lineNumber":7,"content":"import com.project.NetworkApp.entity.Asset;"},{"type":"INSERT","lineNumber":8,"content":"import com.project.NetworkApp.enums.AssetStatus;"},{"type":"INSERT","lineNumber":9,"content":"import com.project.NetworkApp.enums.AssetType;"},{"type":"INSERT","lineNumber":13,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":14,"content":"import java.util.stream.Collectors;"},{"type":"INSERT","lineNumber":15,"content":""},{"type":"MODIFY","lineNumber":18,"content":"public class AssetServiceImpl implements AssetService {","oldContent":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"DELETE","lineNumber":20,"oldContent":"    private final CustomerRepository customerRepository;"},{"type":"DELETE","lineNumber":21,"oldContent":"    private final SplitterRepository splitterRepository;"},{"type":"DELETE","lineNumber":22,"oldContent":"    private final DeploymentTaskRepository deploymentTaskRepository;"},{"type":"DELETE","lineNumber":23,"oldContent":"    private final FiberDropLineRepository fiberDropLineRepository; // <-- Inject FiberDropLineRepository"},{"type":"INSERT","lineNumber":21,"content":"    private final AssetRepository assetRepository;"},{"type":"DELETE","lineNumber":26,"oldContent":"    @Transactional"},{"type":"DELETE","lineNumber":27,"oldContent":"    public void assignNetworkPath(AssignmentRequestDTO dto) {"},{"type":"DELETE","lineNumber":28,"oldContent":"        // 1. Find Customer"},{"type":"DELETE","lineNumber":29,"oldContent":"        Customer customer = customerRepository.findById(dto.customerId())"},{"type":"DELETE","lineNumber":30,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found: \" + dto.customerId()));"},{"type":"DELETE","lineNumber":31,"oldContent":"        if (customer.getStatus() != CustomerStatus.PENDING) {"},{"type":"DELETE","lineNumber":32,"oldContent":"            throw new IllegalStateException(\"Customer is not in PENDING status.\");"},{"type":"DELETE","lineNumber":33,"oldContent":"        }"},{"type":"DELETE","lineNumber":34,"oldContent":""},{"type":"DELETE","lineNumber":35,"oldContent":"        // 2. Find Splitter"},{"type":"DELETE","lineNumber":36,"oldContent":"        Splitter splitter = splitterRepository.findById(dto.splitterId())"},{"type":"DELETE","lineNumber":37,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found: \" + dto.splitterId()));"},{"type":"DELETE","lineNumber":38,"oldContent":""},{"type":"DELETE","lineNumber":39,"oldContent":"        // --- Core Logic ---"},{"type":"DELETE","lineNumber":40,"oldContent":"        // 3. Update Customer"},{"type":"DELETE","lineNumber":41,"oldContent":"        customer.setSplitter(splitter);"},{"type":"DELETE","lineNumber":42,"oldContent":"        customer.setAssignedPort(dto.port());"},{"type":"DELETE","lineNumber":43,"oldContent":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"DELETE","lineNumber":44,"oldContent":"        customer.setStatus(CustomerStatus.SCHEDULED);"},{"type":"DELETE","lineNumber":45,"oldContent":"        customerRepository.save(customer);"},{"type":"DELETE","lineNumber":46,"oldContent":""},{"type":"DELETE","lineNumber":47,"oldContent":"        // 4. Create FiberDropLine"},{"type":"DELETE","lineNumber":48,"oldContent":"        FiberDropLine fiberLine = new FiberDropLine();"},{"type":"DELETE","lineNumber":49,"oldContent":"        fiberLine.setSplitter(splitter);"},{"type":"DELETE","lineNumber":50,"oldContent":"        fiberLine.setCustomer(customer);"},{"type":"DELETE","lineNumber":51,"oldContent":"        fiberLine.setStatus(FiberLineStatus.ACTIVE); // Assuming it's active upon assignment"},{"type":"DELETE","lineNumber":52,"oldContent":"        fiberLine.setLengthMeters(dto.fiberLengthMeters());"},{"type":"DELETE","lineNumber":53,"oldContent":"        fiberDropLineRepository.save(fiberLine);"},{"type":"DELETE","lineNumber":54,"oldContent":""},{"type":"DELETE","lineNumber":55,"oldContent":"        // 5. Create Deployment Task"},{"type":"DELETE","lineNumber":56,"oldContent":"        DeploymentTask newTask = new DeploymentTask();"},{"type":"DELETE","lineNumber":57,"oldContent":"        newTask.setCustomer(customer);"},{"type":"DELETE","lineNumber":58,"oldContent":"        newTask.setStatus(TaskStatus.SCHEDULED);"},{"type":"DELETE","lineNumber":59,"oldContent":"        newTask.setScheduledDate(LocalDate.now().plusDays(1));"},{"type":"DELETE","lineNumber":60,"oldContent":"        newTask.setNotes(\"Assign network path: Splitter \" + splitter.getId() + \", Port \" + dto.port() + \". Fiber Length: \" + dto.fiberLengthMeters() + \"m\");"},{"type":"DELETE","lineNumber":61,"oldContent":"        deploymentTaskRepository.save(newTask);"},{"type":"INSERT","lineNumber":23,"content":"    public List<AssetResponseDTO> getAvailableAssetsByType(AssetType assetType) {"},{"type":"INSERT","lineNumber":24,"content":"        List<Asset> assets = assetRepository.findByAssetTypeAndStatus(assetType, AssetStatus.AVAILABLE);"},{"type":"INSERT","lineNumber":25,"content":"        return assets.stream()"},{"type":"INSERT","lineNumber":26,"content":"                .map(AssetUtility::toDTO)"},{"type":"INSERT","lineNumber":27,"content":"                .collect(Collectors.toList());"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/AssetUtility.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/AssetUtility.java","baseContent":"package com.project.NetworkApp.Utility;\n\n// package com.project.NetworkApp.util;\n\nimport com.project.NetworkApp.dto.AssetCreateDTO;\nimport com.project.NetworkApp.dto.AssetResponseDTO;\nimport com.project.NetworkApp.entity.Asset;\n\n/**\n * Utility class to map between Asset entities and DTOs.\n */\npublic final class AssetUtility {\n\n    /**\n     * Private constructor to prevent instantiation.\n     */\n    private AssetUtility() {}\n\n    /**\n     * Converts an Asset entity to an AssetResponseDTO.\n     * @param asset The Asset entity to convert.\n     * @return The resulting AssetResponseDTO.\n     */\n    public static AssetResponseDTO toDTO(Asset asset) {\n        if (asset == null) {\n            return null;\n        }\n        return new AssetResponseDTO(\n                asset.getId(),\n                asset.getAssetType(),\n                asset.getModel(),\n                asset.getSerialNumber(),\n                asset.getStatus(),\n                asset.getLocation(),\n                asset.getAssignedToCustomerId(),\n                asset.getAssignedDate()\n        );\n    }\n\n    /**\n     * Converts an AssetCreateDTO to an Asset entity.\n     * This method does not require any repository dependencies.\n     * @param dto The AssetCreateDTO to convert.\n     * @return A new Asset entity (not yet saved).\n     */\n    public static Asset toEntity(AssetCreateDTO dto) {\n        if (dto == null) {\n            return null;\n        }\n        Asset asset = new Asset();\n        asset.setAssetType(dto.assetType());\n        asset.setModel(dto.model());\n        asset.setSerialNumber(dto.serialNumber());\n        asset.setStatus(dto.status());\n        asset.setLocation(dto.location());\n        // Fields like assignedToCustomerId and assignedDate are set later\n        // when the asset is actually assigned.\n        return asset;\n    }\n}","baseTimestamp":1760794933754,"deltas":[{"timestamp":1760799008738,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.AssetCreateDTO;","oldContent":"import com.project.NetworkApp.dto.AssetCreateDTO;"}]},{"timestamp":1760801601639,"changes":[{"type":"MODIFY","lineNumber":5,"content":"import com.project.NetworkApp.DTO.AssetResponseDTO;","oldContent":"import com.project.NetworkApp.dto.AssetResponseDTO;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/AssetCreateDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/AssetCreateDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\npublic record AssetCreateDTO(\n        AssetType assetType,\n        String model,\n        String serialNumber,\n        AssetStatus status, // Typically 'AVAILABLE' when creating\n        String location // E.g., 'Warehouse A'\n) {\n}","baseTimestamp":1760799073491,"deltas":[{"timestamp":1760799077828,"changes":[{"type":"INSERT","lineNumber":2,"content":"import com.project.NetworkApp.enums.AssetStatus;"},{"type":"INSERT","lineNumber":3,"content":""}]},{"timestamp":1760799080168,"changes":[{"type":"MODIFY","lineNumber":3,"content":"import com.project.NetworkApp.enums.AssetType;","oldContent":"public record AssetCreateDTO("},{"type":"INSERT","lineNumber":5,"content":"public record AssetCreateDTO("}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/AssetController.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/AssetController.java","baseContent":"package com.project.NetworkApp.controller;\n\nimport com.project.NetworkApp.enums.AssetType;\nimport org.springframework.web.bind.annotation.RequestParam; // Import\n\n@RestController\n@RequestMapping(\"/assets\")\n@RequiredArgsConstructor\npublic class AssetController {\n    // ... (existing service & endpoints)\n\n    @GetMapping(\"/available\")\n    public ResponseEntity<List<AssetResponseDTO>> getAvailableAssets(@RequestParam AssetType type) {\n        return ResponseEntity.ok(assetService.getAvailableAssetsByType(type));\n    }\n}","baseTimestamp":1760801667337,"deltas":[{"timestamp":1760801671530,"changes":[{"type":"INSERT","lineNumber":3,"content":"import org.springframework.web.bind.annotation.RequestMapping;"},{"type":"INSERT","lineNumber":5,"content":"import org.springframework.web.bind.annotation.RestController;"}]},{"timestamp":1760801673758,"changes":[{"type":"INSERT","lineNumber":3,"content":"import lombok.RequiredArgsConstructor;"},{"type":"DELETE","lineNumber":5,"oldContent":""},{"type":"INSERT","lineNumber":7,"content":""}]},{"timestamp":1760801684221,"changes":[{"type":"INSERT","lineNumber":2,"content":"import com.project.NetworkApp.DTO.AssetResponseDTO;"},{"type":"INSERT","lineNumber":3,"content":"import com.project.NetworkApp.Service.AssetService;"},{"type":"INSERT","lineNumber":6,"content":"import org.springframework.http.ResponseEntity;"},{"type":"INSERT","lineNumber":7,"content":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"INSERT","lineNumber":20,"content":"        AssetService assetService = null;"}]},{"timestamp":1760801687898,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.enums.AssetType;","oldContent":"import com.project.NetworkApp.enums.AssetType;"},{"type":"INSERT","lineNumber":6,"content":"import org.springframework.http.ResponseEntity;"},{"type":"INSERT","lineNumber":7,"content":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"DELETE","lineNumber":8,"oldContent":"import org.springframework.http.ResponseEntity;"},{"type":"DELETE","lineNumber":10,"oldContent":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"INSERT","lineNumber":20,"content":"        AssetService assetService;"},{"type":"DELETE","lineNumber":23,"oldContent":"        AssetService assetService = null;"}]},{"timestamp":1760801692380,"changes":[{"type":"INSERT","lineNumber":3,"content":"import com.project.NetworkApp.Service.AssetService;"},{"type":"DELETE","lineNumber":4,"oldContent":"import com.project.NetworkApp.enums.AssetType;"},{"type":"MODIFY","lineNumber":8,"content":"import org.springframework.web.bind.annotation.RequestMapping;","oldContent":"import org.springframework.web.bind.annotation.RequestMapping;"},{"type":"INSERT","lineNumber":12,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":13,"content":""}]},{"timestamp":1760801703276,"changes":[{"type":"DELETE","lineNumber":3,"oldContent":"import com.project.NetworkApp.Service.AssetService;"},{"type":"INSERT","lineNumber":6,"content":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"DELETE","lineNumber":8,"oldContent":"import org.springframework.web.bind.annotation.RequestMapping;"},{"type":"DELETE","lineNumber":12,"oldContent":"import java.util.List;"},{"type":"DELETE","lineNumber":14,"oldContent":""},{"type":"DELETE","lineNumber":22,"oldContent":"        AssetService assetService;"}]},{"timestamp":1760801707291,"changes":[{"type":"MODIFY","lineNumber":6,"content":"import org.springframework.web.bind.annotation.GetMapping;","oldContent":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"INSERT","lineNumber":11,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":12,"content":""}]},{"timestamp":1760801723363,"changes":[{"type":"INSERT","lineNumber":3,"content":"import com.project.NetworkApp.Service.AssetService;"},{"type":"INSERT","lineNumber":6,"content":"import org.springframework.http.ResponseEntity;"},{"type":"DELETE","lineNumber":6,"oldContent":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"DELETE","lineNumber":12,"oldContent":"@RestController"},{"type":"INSERT","lineNumber":14,"content":"@RestController"},{"type":"INSERT","lineNumber":19,"content":"    "},{"type":"INSERT","lineNumber":20,"content":"    private AssetService assetService;"}]},{"timestamp":1760801733195,"changes":[{"type":"MODIFY","lineNumber":7,"content":"import org.springframework.web.bind.annotation.GetMapping;","oldContent":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"DELETE","lineNumber":20,"oldContent":"    "},{"type":"MODIFY","lineNumber":21,"content":"","oldContent":"    @GetMapping(\"/available\")"},{"type":"INSERT","lineNumber":22,"content":"    @GetMapping(\"/available\")"}]},{"timestamp":1760802360124,"changes":[{"type":"DELETE","lineNumber":6,"oldContent":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"DELETE","lineNumber":7,"oldContent":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"DELETE","lineNumber":8,"oldContent":"import org.springframework.web.bind.annotation.RequestMapping;"},{"type":"DELETE","lineNumber":9,"oldContent":"import org.springframework.web.bind.annotation.RequestParam; // Import"},{"type":"DELETE","lineNumber":10,"oldContent":"import org.springframework.web.bind.annotation.RestController;"},{"type":"INSERT","lineNumber":6,"content":"import org.springframework.http.ResponseEntity;"},{"type":"INSERT","lineNumber":7,"content":"import org.springframework.web.bind.annotation.*;"},{"type":"INSERT","lineNumber":13,"content":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"INSERT","lineNumber":18,"content":"    private AssetService assetService;"},{"type":"DELETE","lineNumber":22,"oldContent":"    private AssetService assetService;"}]},{"timestamp":1761038619220,"changes":[{"type":"DELETE","lineNumber":10,"oldContent":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"INSERT","lineNumber":13,"content":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"DELETE","lineNumber":16,"oldContent":"    private AssetService assetService;"},{"type":"INSERT","lineNumber":18,"content":"    private final AssetService assetService;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/AssignmentRequestDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/AssignmentRequestDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\npublic record AssignmentRequestDTO(\n        Integer customerId,\n        Integer splitterId,\n        int port,\n        String neighborhood // We'll update the customer with this\n) {\n}","baseTimestamp":1760882134081,"deltas":[{"timestamp":1760886277614,"changes":[{"type":"MODIFY","lineNumber":6,"content":"        String neighborhood,","oldContent":"        String neighborhood // We'll update the customer with this"},{"type":"INSERT","lineNumber":7,"content":"        BigDecimal fiberLengthMeters// We'll update the customer with this"}]},{"timestamp":1760886281633,"changes":[{"type":"INSERT","lineNumber":2,"content":"import java.math.BigDecimal;"},{"type":"INSERT","lineNumber":3,"content":""}]},{"timestamp":1761026345280,"changes":[{"type":"MODIFY","lineNumber":4,"content":"public record AssignmentRequestDTO(","oldContent":"public record AssignmentRequestDTO("}]},{"timestamp":1761026353127,"changes":[{"type":"INSERT","lineNumber":3,"content":""},{"type":"DELETE","lineNumber":4,"oldContent":"public record AssignmentRequestDTO("}]},{"timestamp":1761026356812,"changes":[{"type":"INSERT","lineNumber":10,"content":"        Integer technicianId;"}]},{"timestamp":1761026367813,"changes":[{"type":"MODIFY","lineNumber":10,"content":"        Integer technicianId,","oldContent":"        Integer technicianId;"}]},{"timestamp":1761026376503,"changes":[{"type":"MODIFY","lineNumber":10,"content":"        Integer technicianId","oldContent":"        Integer technicianId,"}]},{"timestamp":1761026399683,"changes":[{"type":"MODIFY","lineNumber":10,"content":"        ","oldContent":"        Integer technicianId"}]},{"timestamp":1761026419267,"changes":[{"type":"MODIFY","lineNumber":10,"content":"        Integer technicianId","oldContent":"        "}]},{"timestamp":1761026425004,"changes":[{"type":"MODIFY","lineNumber":9,"content":"        BigDecimal fiberLengthMeters,// We'll update the customer with this","oldContent":"        BigDecimal fiberLengthMeters// We'll update the customer with this"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssignmentService.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssignmentService.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.project.NetworkApp.service;\n\nimport com.project.NetworkApp.dto.AssignmentRequestDTO;\n\npublic interface AssignmentService {\n    void assignNetworkPath(AssignmentRequestDTO assignmentRequestDTO);\n}\n","baseTimestamp":1760882165286,"deltas":[{"timestamp":1760882170434,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.AssignmentRequestDTO;","oldContent":"import com.project.NetworkApp.dto.AssignmentRequestDTO;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssignmentServiceImpl.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssignmentServiceImpl.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.project.NetworkApp.service;\n\nimport com.project.NetworkApp.dto.AssignmentRequestDTO;\nimport com.project.NetworkApp.entity.Customer;\nimport com.project.NetworkApp.entity.DeploymentTask;\nimport com.project.NetworkApp.entity.Splitter;\nimport com.project.NetworkApp.enums.CustomerStatus;\nimport com.project.NetworkApp.enums.TaskStatus;\nimport com.project.NetworkApp.repository.CustomerRepository;\nimport com.project.NetworkApp.repository.DeploymentTaskRepository; // Create this next\nimport com.project.NetworkApp.repository.SplitterRepository;\nimport jakarta.persistence.EntityNotFoundException;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional; // Important for multiple updates\n\nimport java.time.LocalDate;\n\n@Service\n@RequiredArgsConstructor\npublic class AssignmentServiceImpl implements AssignmentService {\n\n    private final CustomerRepository customerRepository;\n    private final SplitterRepository splitterRepository;\n    private final DeploymentTaskRepository deploymentTaskRepository; // Inject the new repository\n\n    @Override\n    @Transactional // Ensures all database operations succeed or fail together\n    public void assignNetworkPath(AssignmentRequestDTO dto) {\n        // 1. Find the Customer\n        Customer customer = customerRepository.findById(dto.customerId())\n                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found: \" + dto.customerId()));\n\n        // Ensure customer is actually pending\n        if (customer.getStatus() != CustomerStatus.PENDING) {\n            throw new IllegalStateException(\"Customer is not in PENDING status.\");\n        }\n\n        // 2. Find the Splitter\n        Splitter splitter = splitterRepository.findById(dto.splitterId())\n                .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found: \" + dto.splitterId()));\n\n        // --- Core Logic ---\n        // 3. Update the Customer\n        customer.setSplitter(splitter);\n        customer.setAssignedPort(dto.port());\n        customer.setNeighborhood(dto.neighborhood()); // Update neighborhood\n        customer.setStatus(CustomerStatus.SCHEDULED); // Change status\n        customerRepository.save(customer);\n\n        // 4. Update Splitter's used port count (Optional but good practice)\n        // splitter.setUsedPorts(splitter.getUsedPorts() + 1); // Be careful with concurrency here\n        // splitterRepository.save(splitter);\n\n        // 5. Create the Deployment Task\n        DeploymentTask newTask = new DeploymentTask();\n        newTask.setCustomer(customer);\n        // newTask.setTechnician(findAvailableTechnician()); // We need logic here later to assign a technician\n        newTask.setStatus(TaskStatus.SCHEDULED);\n        newTask.setScheduledDate(LocalDate.now().plusDays(1)); // Example: Schedule for tomorrow\n        newTask.setNotes(\"Assign network path: \" + splitter.getId() + \", Port \" + dto.port());\n        deploymentTaskRepository.save(newTask);\n    }\n\n    // Placeholder for technician assignment logic\n    // private Technician findAvailableTechnician() {\n    //    // Find a technician based on region, availability, etc.\n    //    return null;\n    // }\n}\n","baseTimestamp":1760882190976,"deltas":[{"timestamp":1760882199754,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.AssignmentRequestDTO;","oldContent":"import com.project.NetworkApp.dto.AssignmentRequestDTO;"}]},{"timestamp":1760882202383,"changes":[{"type":"MODIFY","lineNumber":10,"content":"import com.project.NetworkApp.Repository.CustomerRepository;","oldContent":"import com.project.NetworkApp.repository.CustomerRepository;"}]},{"timestamp":1760882204794,"changes":[{"type":"MODIFY","lineNumber":11,"content":"import com.project.NetworkApp.Repository.DeploymentTaskRepository; // Create this next","oldContent":"import com.project.NetworkApp.repository.DeploymentTaskRepository; // Create this next"}]},{"timestamp":1760882207465,"changes":[{"type":"MODIFY","lineNumber":12,"content":"import com.project.NetworkApp.Repository.SplitterRepository;","oldContent":"import com.project.NetworkApp.repository.SplitterRepository;"}]},{"timestamp":1760886393515,"changes":[{"type":"INSERT","lineNumber":19,"content":"// package com.project.NetworkApp.service;"},{"type":"INSERT","lineNumber":21,"content":"// ... other imports"},{"type":"INSERT","lineNumber":22,"content":"import com.project.NetworkApp.entity.FiberDropLine; // Import FiberDropLine"},{"type":"INSERT","lineNumber":23,"content":"import com.project.NetworkApp.enums.FiberLineStatus; // Import FiberLineStatus"},{"type":"INSERT","lineNumber":24,"content":"import com.project.NetworkApp.repository.FiberDropLineRepository; // Import the new repository"},{"type":"INSERT","lineNumber":25,"content":""},{"type":"DELETE","lineNumber":26,"oldContent":"    private final DeploymentTaskRepository deploymentTaskRepository; // Inject the new repository"},{"type":"INSERT","lineNumber":32,"content":"    private final DeploymentTaskRepository deploymentTaskRepository;"},{"type":"INSERT","lineNumber":33,"content":"    private final FiberDropLineRepository fiberDropLineRepository; // <-- Inject FiberDropLineRepository"},{"type":"DELETE","lineNumber":29,"oldContent":"    @Transactional // Ensures all database operations succeed or fail together"},{"type":"INSERT","lineNumber":36,"content":"    @Transactional"},{"type":"DELETE","lineNumber":31,"oldContent":"        // 1. Find the Customer"},{"type":"INSERT","lineNumber":38,"content":"        // 1. Find Customer"},{"type":"DELETE","lineNumber":34,"oldContent":""},{"type":"DELETE","lineNumber":35,"oldContent":"        // Ensure customer is actually pending"},{"type":"DELETE","lineNumber":40,"oldContent":"        // 2. Find the Splitter"},{"type":"INSERT","lineNumber":45,"content":"        // 2. Find Splitter"},{"type":"DELETE","lineNumber":45,"oldContent":"        // 3. Update the Customer"},{"type":"INSERT","lineNumber":50,"content":"        // 3. Update Customer"},{"type":"DELETE","lineNumber":48,"oldContent":"        customer.setNeighborhood(dto.neighborhood()); // Update neighborhood"},{"type":"DELETE","lineNumber":49,"oldContent":"        customer.setStatus(CustomerStatus.SCHEDULED); // Change status"},{"type":"INSERT","lineNumber":53,"content":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"INSERT","lineNumber":54,"content":"        customer.setStatus(CustomerStatus.SCHEDULED);"},{"type":"DELETE","lineNumber":52,"oldContent":"        // 4. Update Splitter's used port count (Optional but good practice)"},{"type":"DELETE","lineNumber":53,"oldContent":"        // splitter.setUsedPorts(splitter.getUsedPorts() + 1); // Be careful with concurrency here"},{"type":"DELETE","lineNumber":54,"oldContent":"        // splitterRepository.save(splitter);"},{"type":"INSERT","lineNumber":57,"content":"        // 4. Create FiberDropLine"},{"type":"INSERT","lineNumber":58,"content":"        FiberDropLine fiberLine = new FiberDropLine();"},{"type":"INSERT","lineNumber":59,"content":"        fiberLine.setSplitter(splitter);"},{"type":"INSERT","lineNumber":60,"content":"        fiberLine.setCustomer(customer);"},{"type":"INSERT","lineNumber":61,"content":"        fiberLine.setLengthMeters(dto.fiberLengthMeters());"},{"type":"INSERT","lineNumber":62,"content":"        fiberLine.setStatus(FiberLineStatus.ACTIVE); // Assuming it's active upon assignment"},{"type":"INSERT","lineNumber":63,"content":"        fiberDropLineRepository.save(fiberLine);"},{"type":"DELETE","lineNumber":56,"oldContent":"        // 5. Create the Deployment Task"},{"type":"INSERT","lineNumber":65,"content":"        // 5. Create Deployment Task"},{"type":"DELETE","lineNumber":59,"oldContent":"        // newTask.setTechnician(findAvailableTechnician()); // We need logic here later to assign a technician"},{"type":"DELETE","lineNumber":61,"oldContent":"        newTask.setScheduledDate(LocalDate.now().plusDays(1)); // Example: Schedule for tomorrow"},{"type":"DELETE","lineNumber":62,"oldContent":"        newTask.setNotes(\"Assign network path: \" + splitter.getId() + \", Port \" + dto.port());"},{"type":"INSERT","lineNumber":69,"content":"        newTask.setScheduledDate(LocalDate.now().plusDays(1));"},{"type":"INSERT","lineNumber":70,"content":"        newTask.setNotes(\"Assign network path: Splitter \" + splitter.getId() + \", Port \" + dto.port() + \". Fiber Length: \" + dto.fiberLengthMeters() + \"m\");"},{"type":"DELETE","lineNumber":65,"oldContent":""},{"type":"DELETE","lineNumber":66,"oldContent":"    // Placeholder for technician assignment logic"},{"type":"DELETE","lineNumber":67,"oldContent":"    // private Technician findAvailableTechnician() {"},{"type":"DELETE","lineNumber":68,"oldContent":"    //    // Find a technician based on region, availability, etc."},{"type":"DELETE","lineNumber":69,"oldContent":"    //    return null;"},{"type":"DELETE","lineNumber":70,"oldContent":"    // }"},{"type":"DELETE","lineNumber":72,"oldContent":""}]},{"timestamp":1760886399752,"changes":[{"type":"DELETE","lineNumber":21,"oldContent":"@Service"},{"type":"DELETE","lineNumber":23,"oldContent":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":25,"oldContent":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"INSERT","lineNumber":24,"content":"import com.project.NetworkApp.Repository.FiberDropLineRepository; // Import the new repository"},{"type":"DELETE","lineNumber":28,"oldContent":"import com.project.NetworkApp.repository.FiberDropLineRepository; // Import the new repository"},{"type":"DELETE","lineNumber":29,"oldContent":"    private final CustomerRepository customerRepository;"},{"type":"INSERT","lineNumber":26,"content":"@Service"},{"type":"INSERT","lineNumber":27,"content":"@RequiredArgsConstructor"},{"type":"INSERT","lineNumber":28,"content":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"INSERT","lineNumber":30,"content":"    private final CustomerRepository customerRepository;"},{"type":"INSERT","lineNumber":32,"content":"    private final DeploymentTaskRepository deploymentTaskRepository;"},{"type":"INSERT","lineNumber":33,"content":"    private final FiberDropLineRepository fiberDropLineRepository; // <-- Inject FiberDropLineRepository"},{"type":"INSERT","lineNumber":36,"content":"    @Transactional"},{"type":"DELETE","lineNumber":35,"oldContent":"    private final DeploymentTaskRepository deploymentTaskRepository;"},{"type":"INSERT","lineNumber":38,"content":"        // 1. Find Customer"},{"type":"DELETE","lineNumber":37,"oldContent":"    private final FiberDropLineRepository fiberDropLineRepository; // <-- Inject FiberDropLineRepository"},{"type":"DELETE","lineNumber":39,"oldContent":"    @Transactional"},{"type":"DELETE","lineNumber":42,"oldContent":"        // 1. Find Customer"},{"type":"INSERT","lineNumber":45,"content":"        // 2. Find Splitter"},{"type":"MODIFY","lineNumber":50,"content":"        // 3. Update Customer","oldContent":"        // 2. Find Splitter"},{"type":"DELETE","lineNumber":52,"oldContent":"        // 3. Update Customer"},{"type":"DELETE","lineNumber":53,"oldContent":"        customerRepository.save(customer);"},{"type":"DELETE","lineNumber":54,"oldContent":""},{"type":"INSERT","lineNumber":55,"content":"        customerRepository.save(customer);"},{"type":"DELETE","lineNumber":59,"oldContent":"        DeploymentTask newTask = new DeploymentTask();"},{"type":"DELETE","lineNumber":61,"oldContent":"        newTask.setCustomer(customer);"},{"type":"DELETE","lineNumber":64,"oldContent":"        newTask.setStatus(TaskStatus.SCHEDULED);"},{"type":"DELETE","lineNumber":68,"oldContent":"        deploymentTaskRepository.save(newTask);"},{"type":"DELETE","lineNumber":69,"oldContent":"    }"},{"type":"INSERT","lineNumber":64,"content":""},{"type":"INSERT","lineNumber":66,"content":"        DeploymentTask newTask = new DeploymentTask();"},{"type":"INSERT","lineNumber":67,"content":"        newTask.setCustomer(customer);"},{"type":"INSERT","lineNumber":68,"content":"        newTask.setStatus(TaskStatus.SCHEDULED);"},{"type":"INSERT","lineNumber":71,"content":"        deploymentTaskRepository.save(newTask);"},{"type":"INSERT","lineNumber":72,"content":"    }"}]},{"timestamp":1760887036608,"changes":[{"type":"DELETE","lineNumber":22,"oldContent":"import com.project.NetworkApp.Repository.FiberDropLineRepository; // Import the new repository"},{"type":"DELETE","lineNumber":24,"oldContent":"@Service"},{"type":"DELETE","lineNumber":26,"oldContent":"@RequiredArgsConstructor"},{"type":"INSERT","lineNumber":24,"content":"import com.project.NetworkApp.Repository.FiberDropLineRepository; // Import the new repository"},{"type":"INSERT","lineNumber":26,"content":"// package com.project.NetworkApp.service;"},{"type":"INSERT","lineNumber":27,"content":""},{"type":"INSERT","lineNumber":28,"content":"// ... other imports"},{"type":"INSERT","lineNumber":29,"content":"import org.springframework.transaction.annotation.Transactional;"},{"type":"INSERT","lineNumber":30,"content":""},{"type":"INSERT","lineNumber":31,"content":"@Service"},{"type":"INSERT","lineNumber":32,"content":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":29,"oldContent":"    private final CustomerRepository customerRepository;"},{"type":"INSERT","lineNumber":35,"content":"    private final CustomerRepository customerRepository;"},{"type":"INSERT","lineNumber":38,"content":"    private final FiberDropLineRepository fiberDropLineRepository;"},{"type":"DELETE","lineNumber":34,"oldContent":"    private final FiberDropLineRepository fiberDropLineRepository; // <-- Inject FiberDropLineRepository"},{"type":"DELETE","lineNumber":36,"oldContent":"    public void assignNetworkPath(AssignmentRequestDTO dto) {"},{"type":"INSERT","lineNumber":42,"content":"    public void assignNetworkPath(AssignmentRequestDTO dto) {"},{"type":"INSERT","lineNumber":43,"content":"        // 1. Find Customer (Check status)"},{"type":"DELETE","lineNumber":39,"oldContent":"        // 1. Find Customer"},{"type":"DELETE","lineNumber":49,"oldContent":"        // --- Core Logic ---"},{"type":"DELETE","lineNumber":50,"oldContent":"        // 2. Find Splitter"},{"type":"INSERT","lineNumber":54,"content":"        // --- Add Validation (Optional but Recommended) ---"},{"type":"INSERT","lineNumber":55,"content":"        // Check if port number is valid"},{"type":"INSERT","lineNumber":56,"content":"        if (dto.port() <= 0 || dto.port() > splitter.getPortCapacity()) {"},{"type":"INSERT","lineNumber":57,"content":"            throw new IllegalArgumentException(\"Invalid port number for splitter capacity.\");"},{"type":"INSERT","lineNumber":58,"content":"        }"},{"type":"INSERT","lineNumber":59,"content":"        // Check if port is already taken (more complex query needed, add later)"},{"type":"INSERT","lineNumber":60,"content":"        // ---------------------------------------------"},{"type":"INSERT","lineNumber":61,"content":""},{"type":"INSERT","lineNumber":63,"content":"        customer.setSplitter(splitter);"},{"type":"DELETE","lineNumber":53,"oldContent":"        customerRepository.save(customer);"},{"type":"INSERT","lineNumber":67,"content":"        customerRepository.save(customer);"},{"type":"DELETE","lineNumber":61,"oldContent":""},{"type":"INSERT","lineNumber":74,"content":"        fiberLine.setStatus(FiberLineStatus.ACTIVE);"},{"type":"INSERT","lineNumber":75,"content":"        fiberDropLineRepository.save(fiberLine);"},{"type":"INSERT","lineNumber":76,"content":""},{"type":"INSERT","lineNumber":77,"content":"        // --- **FIX: Update Splitter's used port count** ---"},{"type":"INSERT","lineNumber":78,"content":"        splitter.setUsedPorts(splitter.getUsedPorts() + 1); // Increment count"},{"type":"INSERT","lineNumber":79,"content":"        splitterRepository.save(splitter); // Save the updated splitter"},{"type":"INSERT","lineNumber":80,"content":"        // ---------------------------------------------------"},{"type":"INSERT","lineNumber":81,"content":""},{"type":"INSERT","lineNumber":82,"content":"        // 6. Create Deployment Task"},{"type":"DELETE","lineNumber":64,"oldContent":"        fiberLine.setStatus(FiberLineStatus.ACTIVE); // Assuming it's active upon assignment"},{"type":"DELETE","lineNumber":66,"oldContent":"        fiberDropLineRepository.save(fiberLine);"},{"type":"DELETE","lineNumber":68,"oldContent":"        // 5. Create Deployment Task"},{"type":"DELETE","lineNumber":69,"oldContent":"        deploymentTaskRepository.save(newTask);"},{"type":"DELETE","lineNumber":71,"oldContent":"    }"},{"type":"INSERT","lineNumber":88,"content":"        deploymentTaskRepository.save(newTask);"},{"type":"INSERT","lineNumber":89,"content":"    }"}]},{"timestamp":1761025966373,"changes":[{"type":"MODIFY","lineNumber":24,"content":"import com.project.NetworkApp.Repository.FiberDropLineRepository; // Import the new repository","oldContent":"import com.project.NetworkApp.Repository.FiberDropLineRepository; // Import the new repository"},{"type":"INSERT","lineNumber":25,"content":""},{"type":"DELETE","lineNumber":27,"oldContent":""},{"type":"DELETE","lineNumber":29,"oldContent":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"DELETE","lineNumber":32,"oldContent":""},{"type":"DELETE","lineNumber":34,"oldContent":"    private final SplitterRepository splitterRepository;"},{"type":"DELETE","lineNumber":36,"oldContent":"    private final DeploymentTaskRepository deploymentTaskRepository;"},{"type":"INSERT","lineNumber":33,"content":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"INSERT","lineNumber":36,"content":"    private final SplitterRepository splitterRepository;"},{"type":"INSERT","lineNumber":37,"content":"    private final DeploymentTaskRepository deploymentTaskRepository;"},{"type":"INSERT","lineNumber":38,"content":"    private final FiberDropLineRepository fiberDropLineRepository;"},{"type":"INSERT","lineNumber":39,"content":""},{"type":"DELETE","lineNumber":41,"oldContent":"    private final FiberDropLineRepository fiberDropLineRepository;"},{"type":"INSERT","lineNumber":42,"content":"    public void assignNetworkPath(AssignmentRequestDTO dto) {"},{"type":"INSERT","lineNumber":43,"content":"        // 1. Find Customer (Check status)"},{"type":"DELETE","lineNumber":45,"oldContent":"    public void assignNetworkPath(AssignmentRequestDTO dto) {"},{"type":"DELETE","lineNumber":47,"oldContent":"        // 1. Find Customer (Check status)"},{"type":"DELETE","lineNumber":54,"oldContent":"        // 3. Update Customer"},{"type":"DELETE","lineNumber":55,"oldContent":"        customer.setAssignedPort(dto.port());"},{"type":"DELETE","lineNumber":57,"oldContent":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"DELETE","lineNumber":59,"oldContent":"        customer.setStatus(CustomerStatus.SCHEDULED);"},{"type":"DELETE","lineNumber":61,"oldContent":""},{"type":"DELETE","lineNumber":63,"oldContent":"        // 4. Create FiberDropLine"},{"type":"DELETE","lineNumber":65,"oldContent":"        FiberDropLine fiberLine = new FiberDropLine();"},{"type":"DELETE","lineNumber":67,"oldContent":"        fiberLine.setSplitter(splitter);"},{"type":"DELETE","lineNumber":69,"oldContent":"        fiberLine.setCustomer(customer);"},{"type":"DELETE","lineNumber":71,"oldContent":"        fiberLine.setLengthMeters(dto.fiberLengthMeters());"},{"type":"INSERT","lineNumber":62,"content":"        // 3. Update Customer"},{"type":"DELETE","lineNumber":73,"oldContent":"        DeploymentTask newTask = new DeploymentTask();"},{"type":"DELETE","lineNumber":74,"oldContent":"        newTask.setCustomer(customer);"},{"type":"INSERT","lineNumber":64,"content":"        customer.setAssignedPort(dto.port());"},{"type":"INSERT","lineNumber":65,"content":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"INSERT","lineNumber":66,"content":"        customer.setStatus(CustomerStatus.SCHEDULED);"},{"type":"DELETE","lineNumber":76,"oldContent":"        newTask.setStatus(TaskStatus.SCHEDULED);"},{"type":"DELETE","lineNumber":77,"oldContent":"        newTask.setScheduledDate(LocalDate.now().plusDays(1));"},{"type":"DELETE","lineNumber":78,"oldContent":"        newTask.setNotes(\"Assign network path: Splitter \" + splitter.getId() + \", Port \" + dto.port() + \". Fiber Length: \" + dto.fiberLengthMeters() + \"m\");"},{"type":"DELETE","lineNumber":79,"oldContent":"}"},{"type":"INSERT","lineNumber":68,"content":""},{"type":"INSERT","lineNumber":69,"content":"        // 4. Create FiberDropLine"},{"type":"INSERT","lineNumber":70,"content":"        FiberDropLine fiberLine = new FiberDropLine();"},{"type":"INSERT","lineNumber":71,"content":"        fiberLine.setSplitter(splitter);"},{"type":"INSERT","lineNumber":72,"content":"        fiberLine.setCustomer(customer);"},{"type":"INSERT","lineNumber":73,"content":"        fiberLine.setLengthMeters(dto.fiberLengthMeters());"},{"type":"DELETE","lineNumber":81,"oldContent":"    }"},{"type":"DELETE","lineNumber":83,"oldContent":"        deploymentTaskRepository.save(newTask);"},{"type":"DELETE","lineNumber":85,"oldContent":"        // 6. Create Deployment Task"},{"type":"DELETE","lineNumber":87,"oldContent":""},{"type":"DELETE","lineNumber":89,"oldContent":"        // ---------------------------------------------------"},{"type":"INSERT","lineNumber":80,"content":"        // ---------------------------------------------------"},{"type":"INSERT","lineNumber":81,"content":""},{"type":"INSERT","lineNumber":82,"content":"        // 6. Create Deployment Task"},{"type":"INSERT","lineNumber":83,"content":"        DeploymentTask newTask = new DeploymentTask();"},{"type":"INSERT","lineNumber":84,"content":"        newTask.setCustomer(customer);"},{"type":"INSERT","lineNumber":85,"content":"        newTask.setTechnician(technician); // <-- Is this line present and using the 'technician' variable?"},{"type":"INSERT","lineNumber":86,"content":"        newTask.setStatus(TaskStatus.SCHEDULED);"},{"type":"INSERT","lineNumber":87,"content":"        newTask.setScheduledDate(LocalDate.now().plusDays(1));"},{"type":"INSERT","lineNumber":88,"content":"        newTask.setNotes(\"Assign network path: Splitter \" + splitter.getId() + \", Port \" + dto.port() + \". Fiber Length: \" + dto.fiberLengthMeters() + \"m\");"},{"type":"INSERT","lineNumber":89,"content":"        deploymentTaskRepository.save(newTask);"},{"type":"INSERT","lineNumber":90,"content":"    }"},{"type":"INSERT","lineNumber":91,"content":"}"}]},{"timestamp":1761025998440,"changes":[{"type":"INSERT","lineNumber":23,"content":"import com.project.NetworkApp.enums.FiberLineStatus; // Import FiberLineStatus"},{"type":"DELETE","lineNumber":24,"oldContent":"import com.project.NetworkApp.Repository.FiberDropLineRepository; // Import the new repository"},{"type":"DELETE","lineNumber":31,"oldContent":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"INSERT","lineNumber":33,"content":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"INSERT","lineNumber":34,"content":""},{"type":"INSERT","lineNumber":35,"content":"    private final CustomerRepository customerRepository;"},{"type":"DELETE","lineNumber":36,"oldContent":""},{"type":"DELETE","lineNumber":38,"oldContent":"    private final CustomerRepository customerRepository;"},{"type":"INSERT","lineNumber":39,"content":"    private final "},{"type":"DELETE","lineNumber":43,"oldContent":"        Customer customer = customerRepository.findById(dto.customerId())"},{"type":"INSERT","lineNumber":45,"content":"        Customer customer = customerRepository.findById(dto.customerId())"},{"type":"DELETE","lineNumber":57,"oldContent":"        // 3. Update Customer"},{"type":"DELETE","lineNumber":59,"oldContent":"        customer.setAssignedPort(dto.port());"},{"type":"INSERT","lineNumber":60,"content":"        // Check if port is already taken (more complex query needed, add later)"},{"type":"INSERT","lineNumber":61,"content":"        // ---------------------------------------------"},{"type":"INSERT","lineNumber":62,"content":""},{"type":"INSERT","lineNumber":63,"content":"        // 3. Update Customer"},{"type":"INSERT","lineNumber":64,"content":"        customer.setSplitter(splitter);"},{"type":"INSERT","lineNumber":65,"content":"        customer.setAssignedPort(dto.port());"},{"type":"DELETE","lineNumber":63,"oldContent":"        // Check if port is already taken (more complex query needed, add later)"},{"type":"INSERT","lineNumber":68,"content":"        customerRepository.save(customer);"},{"type":"DELETE","lineNumber":65,"oldContent":"        // ---------------------------------------------"},{"type":"DELETE","lineNumber":68,"oldContent":""},{"type":"DELETE","lineNumber":71,"oldContent":"        customer.setSplitter(splitter);"},{"type":"DELETE","lineNumber":73,"oldContent":"        customerRepository.save(customer);"},{"type":"DELETE","lineNumber":74,"oldContent":"        // ---------------------------------------------------"},{"type":"INSERT","lineNumber":76,"content":"        fiberDropLineRepository.save(fiberLine);"},{"type":"INSERT","lineNumber":78,"content":"        // --- **FIX: Update Splitter's used port count** ---"},{"type":"INSERT","lineNumber":79,"content":"        splitter.setUsedPorts(splitter.getUsedPorts() + 1); // Increment count"},{"type":"INSERT","lineNumber":80,"content":"        splitterRepository.save(splitter); // Save the updated splitter"},{"type":"INSERT","lineNumber":81,"content":"        // ---------------------------------------------------"},{"type":"INSERT","lineNumber":82,"content":""},{"type":"DELETE","lineNumber":78,"oldContent":"        fiberDropLineRepository.save(fiberLine);"},{"type":"DELETE","lineNumber":81,"oldContent":""},{"type":"DELETE","lineNumber":84,"oldContent":"        // --- **FIX: Update Splitter's used port count** ---"},{"type":"DELETE","lineNumber":87,"oldContent":"        splitter.setUsedPorts(splitter.getUsedPorts() + 1); // Increment count"},{"type":"DELETE","lineNumber":90,"oldContent":"        splitterRepository.save(splitter); // Save the updated splitter"}]},{"timestamp":1761026001029,"changes":[{"type":"MODIFY","lineNumber":33,"content":"public class AssignmentServiceImpl implements AssignmentService {","oldContent":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"MODIFY","lineNumber":36,"content":"    private final SplitterRepository splitterRepository;","oldContent":"    private final SplitterRepository splitterRepository;"},{"type":"MODIFY","lineNumber":39,"content":"    private final Te","oldContent":"    private final "},{"type":"MODIFY","lineNumber":60,"content":"        // Check if port is already taken (more complex query needed, add later)","oldContent":"        // Check if port is already taken (more complex query needed, add later)"},{"type":"DELETE","lineNumber":62,"oldContent":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"DELETE","lineNumber":64,"oldContent":"        customer.setStatus(CustomerStatus.SCHEDULED);"},{"type":"DELETE","lineNumber":67,"oldContent":""},{"type":"INSERT","lineNumber":66,"content":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"INSERT","lineNumber":67,"content":"        customer.setStatus(CustomerStatus.SCHEDULED);"},{"type":"INSERT","lineNumber":68,"content":"        customerRepository.save(customer);"},{"type":"INSERT","lineNumber":69,"content":""},{"type":"DELETE","lineNumber":71,"oldContent":"        customerRepository.save(customer);"},{"type":"DELETE","lineNumber":78,"oldContent":"        // 6. Create Deployment Task"},{"type":"DELETE","lineNumber":81,"oldContent":"        DeploymentTask newTask = new DeploymentTask();"},{"type":"MODIFY","lineNumber":83,"content":"        // 6. Create Deployment Task","oldContent":"        newTask.setCustomer(customer);"},{"type":"INSERT","lineNumber":84,"content":"        DeploymentTask newTask = new DeploymentTask();"},{"type":"INSERT","lineNumber":85,"content":"        newTask.setCustomer(customer);"}]},{"timestamp":1761026007558,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.Repository.*;"},{"type":"DELETE","lineNumber":10,"oldContent":"import com.project.NetworkApp.Repository.CustomerRepository;"},{"type":"DELETE","lineNumber":11,"oldContent":"import com.project.NetworkApp.Repository.DeploymentTaskRepository; // Create this next"},{"type":"DELETE","lineNumber":12,"oldContent":"import com.project.NetworkApp.Repository.SplitterRepository;"},{"type":"DELETE","lineNumber":24,"oldContent":"import com.project.NetworkApp.Repository.FiberDropLineRepository; // Import the new repository"},{"type":"INSERT","lineNumber":29,"content":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":33,"oldContent":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"INSERT","lineNumber":32,"content":"    private final CustomerRepository customerRepository;"},{"type":"DELETE","lineNumber":36,"oldContent":"    private final SplitterRepository splitterRepository;"},{"type":"DELETE","lineNumber":39,"oldContent":"    private final Te"},{"type":"INSERT","lineNumber":36,"content":"    private final TechnicianRepository technicianRepository"},{"type":"INSERT","lineNumber":56,"content":"        }"},{"type":"DELETE","lineNumber":60,"oldContent":"        // Check if port is already taken (more complex query needed, add later)"},{"type":"DELETE","lineNumber":64,"oldContent":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"INSERT","lineNumber":62,"content":"        customer.setAssignedPort(dto.port());"},{"type":"INSERT","lineNumber":63,"content":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"DELETE","lineNumber":68,"oldContent":"        customer.setAssignedPort(dto.port());"},{"type":"INSERT","lineNumber":78,"content":"        // ---------------------------------------------------"},{"type":"INSERT","lineNumber":79,"content":""},{"type":"DELETE","lineNumber":83,"oldContent":"        // ---------------------------------------------------"},{"type":"DELETE","lineNumber":85,"oldContent":""}]},{"timestamp":1761026010382,"changes":[{"type":"DELETE","lineNumber":26,"oldContent":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":30,"oldContent":"    private final CustomerRepository customerRepository;"},{"type":"INSERT","lineNumber":29,"content":"@RequiredArgsConstructor"},{"type":"INSERT","lineNumber":32,"content":"    private final CustomerRepository customerRepository;"},{"type":"DELETE","lineNumber":34,"oldContent":"    private final TechnicianRepository technicianRepository"},{"type":"INSERT","lineNumber":36,"content":"    private final TechnicianRepository technicianRepository;"},{"type":"DELETE","lineNumber":53,"oldContent":"        }"},{"type":"INSERT","lineNumber":56,"content":"        }"},{"type":"DELETE","lineNumber":59,"oldContent":"        customer.setAssignedPort(dto.port());"},{"type":"MODIFY","lineNumber":62,"content":"        customer.setAssignedPort(dto.port());","oldContent":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"INSERT","lineNumber":63,"content":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"DELETE","lineNumber":75,"oldContent":"        // ---------------------------------------------------"},{"type":"DELETE","lineNumber":77,"oldContent":""},{"type":"INSERT","lineNumber":78,"content":"        // ---------------------------------------------------"},{"type":"INSERT","lineNumber":79,"content":""}]},{"timestamp":1761026043102,"changes":[{"type":"MODIFY","lineNumber":29,"content":"@RequiredArgsConstructor","oldContent":"@RequiredArgsConstructor"},{"type":"MODIFY","lineNumber":32,"content":"    private final CustomerRepository customerRepository;","oldContent":"    private final CustomerRepository customerRepository;"},{"type":"MODIFY","lineNumber":36,"content":"    private final TechnicianRepository technicianRepository;","oldContent":"    private final TechnicianRepository technicianRepository;"},{"type":"MODIFY","lineNumber":56,"content":"        }","oldContent":"        }"},{"type":"INSERT","lineNumber":57,"content":""},{"type":"INSERT","lineNumber":58,"content":"        Technician technician = technicianRepository.findById(dto.technicianId())"},{"type":"INSERT","lineNumber":59,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Technician not found: \" + dto.technicianId()));"},{"type":"INSERT","lineNumber":60,"content":"        System.out.println(\"Found Technician: \" + technician.getName());"},{"type":"DELETE","lineNumber":60,"oldContent":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"INSERT","lineNumber":64,"content":"        // 3. Update Customer"},{"type":"INSERT","lineNumber":65,"content":"        customer.setSplitter(splitter);"},{"type":"DELETE","lineNumber":63,"oldContent":"        customer.setSplitter(splitter);"},{"type":"DELETE","lineNumber":76,"oldContent":"        // ---------------------------------------------------"},{"type":"DELETE","lineNumber":78,"oldContent":""},{"type":"INSERT","lineNumber":82,"content":"        // ---------------------------------------------------"},{"type":"INSERT","lineNumber":83,"content":""}]},{"timestamp":1761026048032,"changes":[{"type":"DELETE","lineNumber":6,"oldContent":"import com.project.NetworkApp.entity.Customer;"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.project.NetworkApp.entity.DeploymentTask;"},{"type":"DELETE","lineNumber":8,"oldContent":"import com.project.NetworkApp.entity.Splitter;"},{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.entity.*;"},{"type":"DELETE","lineNumber":20,"oldContent":"import com.project.NetworkApp.entity.FiberDropLine; // Import FiberDropLine"},{"type":"INSERT","lineNumber":25,"content":"@Service"},{"type":"DELETE","lineNumber":29,"oldContent":"@RequiredArgsConstructor"},{"type":"INSERT","lineNumber":28,"content":""},{"type":"MODIFY","lineNumber":32,"content":"    private final FiberDropLineRepository fiberDropLineRepository;","oldContent":"    private final CustomerRepository customerRepository;"},{"type":"DELETE","lineNumber":36,"oldContent":"    private final TechnicianRepository technicianRepository;"},{"type":"INSERT","lineNumber":52,"content":"            throw new IllegalArgumentException(\"Invalid port number for splitter capacity.\");"},{"type":"DELETE","lineNumber":56,"oldContent":"        }"},{"type":"DELETE","lineNumber":58,"oldContent":"        // Check if port is already taken (more complex query needed, add later)"},{"type":"DELETE","lineNumber":60,"oldContent":"        // ---------------------------------------------"},{"type":"DELETE","lineNumber":62,"oldContent":""},{"type":"INSERT","lineNumber":58,"content":"        // Check if port is already taken (more complex query needed, add later)"},{"type":"INSERT","lineNumber":59,"content":"        // ---------------------------------------------"},{"type":"INSERT","lineNumber":60,"content":""},{"type":"INSERT","lineNumber":61,"content":"        // 3. Update Customer"},{"type":"INSERT","lineNumber":62,"content":"        customer.setSplitter(splitter);"},{"type":"DELETE","lineNumber":66,"oldContent":"        // 3. Update Customer"},{"type":"DELETE","lineNumber":68,"oldContent":"        customer.setSplitter(splitter);"},{"type":"INSERT","lineNumber":79,"content":"        // ---------------------------------------------------"},{"type":"INSERT","lineNumber":80,"content":""},{"type":"DELETE","lineNumber":84,"oldContent":"        // ---------------------------------------------------"},{"type":"DELETE","lineNumber":86,"oldContent":""}]},{"timestamp":1761026060131,"changes":[{"type":"DELETE","lineNumber":22,"oldContent":"@Service"},{"type":"DELETE","lineNumber":26,"oldContent":""},{"type":"INSERT","lineNumber":25,"content":"@Service"},{"type":"INSERT","lineNumber":28,"content":""},{"type":"DELETE","lineNumber":30,"oldContent":"    private final FiberDropLineRepository fiberDropLineRepository;"},{"type":"INSERT","lineNumber":32,"content":"    private final FiberDropLineRepository fiberDropLineRepository;"},{"type":"DELETE","lineNumber":49,"oldContent":"            throw new IllegalArgumentException(\"Invalid port number for splitter capacity.\");"},{"type":"INSERT","lineNumber":52,"content":"            throw new IllegalArgumentException(\"Invalid port number for splitter capacity.\");"},{"type":"INSERT","lineNumber":55,"content":"        Technician technician = technicianRepository.findById(DTO.technicianId())"},{"type":"INSERT","lineNumber":56,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Technician not found: \" + dto.technicianId()));"},{"type":"INSERT","lineNumber":57,"content":"        System.out.println(\"Found Technician: \" + technician.getName());"},{"type":"DELETE","lineNumber":57,"oldContent":"        Technician technician = technicianRepository.findById(dto.technicianId())"},{"type":"DELETE","lineNumber":60,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Technician not found: \" + dto.technicianId()));"},{"type":"DELETE","lineNumber":62,"oldContent":"        System.out.println(\"Found Technician: \" + technician.getName());"},{"type":"DELETE","lineNumber":76,"oldContent":"        // ---------------------------------------------------"},{"type":"DELETE","lineNumber":78,"oldContent":""},{"type":"INSERT","lineNumber":79,"content":"        // ---------------------------------------------------"},{"type":"INSERT","lineNumber":80,"content":""}]},{"timestamp":1761026064359,"changes":[{"type":"MODIFY","lineNumber":25,"content":"@Service","oldContent":"@Service"},{"type":"MODIFY","lineNumber":28,"content":"","oldContent":""},{"type":"MODIFY","lineNumber":32,"content":"    private final FiberDropLineRepository fiberDropLineRepository;","oldContent":"    private final FiberDropLineRepository fiberDropLineRepository;"},{"type":"MODIFY","lineNumber":52,"content":"            throw new IllegalArgumentException(\"Invalid port number for splitter capacity.\");","oldContent":"            throw new IllegalArgumentException(\"Invalid port number for splitter capacity.\");"},{"type":"DELETE","lineNumber":55,"oldContent":"        Technician technician = technicianRepository.findById(DTO.technicianId())"},{"type":"DELETE","lineNumber":56,"oldContent":"        // Check if port is already taken (more complex query needed, add later)"},{"type":"INSERT","lineNumber":55,"content":"        Technician technician = technicianRepository.findById(dto.technicianId())"},{"type":"MODIFY","lineNumber":58,"content":"        // Check if port is already taken (more complex query needed, add later)","oldContent":"        // ---------------------------------------------"},{"type":"INSERT","lineNumber":59,"content":"        // ---------------------------------------------"},{"type":"DELETE","lineNumber":77,"oldContent":"        // ---------------------------------------------------"},{"type":"MODIFY","lineNumber":79,"content":"        // ---------------------------------------------------","oldContent":""},{"type":"INSERT","lineNumber":80,"content":""}]},{"timestamp":1761026258317,"changes":[{"type":"INSERT","lineNumber":24,"content":""},{"type":"DELETE","lineNumber":25,"oldContent":"@Service"},{"type":"INSERT","lineNumber":27,"content":"public class AssignmentServiceImpl implements AssignmentService {"},{"type":"DELETE","lineNumber":28,"oldContent":""},{"type":"INSERT","lineNumber":31,"content":"    private final DeploymentTaskRepository deploymentTaskRepository;"},{"type":"DELETE","lineNumber":32,"oldContent":"    private final FiberDropLineRepository fiberDropLineRepository;"},{"type":"INSERT","lineNumber":51,"content":"        if (dto.port() <= 0 || dto.port() > splitter.getPortCapacity()) {"},{"type":"DELETE","lineNumber":52,"oldContent":"            throw new IllegalArgumentException(\"Invalid port number for splitter capacity.\");"},{"type":"DELETE","lineNumber":55,"oldContent":"        Technician technician = technicianRepository.findById(dto.technicianId())"},{"type":"DELETE","lineNumber":56,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Technician not found: \" + dto.technicianId()));"},{"type":"DELETE","lineNumber":59,"oldContent":"        System.out.println(\"Found Technician: \" + technician.getName());"},{"type":"INSERT","lineNumber":75,"content":"        splitterRepository.save(splitter); // Save the updated splitter"},{"type":"DELETE","lineNumber":80,"oldContent":"        splitterRepository.save(splitter); // Save the updated splitter"}]},{"timestamp":1761026262160,"changes":[{"type":"INSERT","lineNumber":49,"content":"        Technician technician = technicianRepository.findById(dto.technicianId())"},{"type":"INSERT","lineNumber":50,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Technician not found: \" + dto.technicianId()));"},{"type":"INSERT","lineNumber":51,"content":"        System.out.println(\"Found Technician: \" + technician.getName());"},{"type":"DELETE","lineNumber":72,"oldContent":"        splitterRepository.save(splitter); // Save the updated splitter"},{"type":"INSERT","lineNumber":78,"content":"        splitterRepository.save(splitter); // Save the updated splitter"}]},{"timestamp":1761026412831,"changes":[{"type":"MODIFY","lineNumber":49,"content":"//        Technician technician = technicianRepository.findById(dto.technicianId())","oldContent":"        Technician technician = technicianRepository.findById(dto.technicianId())"},{"type":"INSERT","lineNumber":50,"content":"//                .orElseThrow(() -> new EntityNotFoundException(\"Technician not found: \" + dto.technicianId()));"},{"type":"INSERT","lineNumber":51,"content":"//        System.out.println(\"Found Technician: \" + technician.getName());"},{"type":"DELETE","lineNumber":51,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Technician not found: \" + dto.technicianId()));"},{"type":"DELETE","lineNumber":53,"oldContent":"        System.out.println(\"Found Technician: \" + technician.getName());"},{"type":"INSERT","lineNumber":78,"content":"        splitterRepository.save(splitter); // Save the updated splitter"},{"type":"DELETE","lineNumber":80,"oldContent":"        splitterRepository.save(splitter); // Save the updated splitter"}]},{"timestamp":1761026438838,"changes":[{"type":"DELETE","lineNumber":49,"oldContent":"//        Technician technician = technicianRepository.findById(dto.technicianId())"},{"type":"MODIFY","lineNumber":49,"content":"        Technician technician = technicianRepository.findById(dto.technicianId())","oldContent":"//                .orElseThrow(() -> new EntityNotFoundException(\"Technician not found: \" + dto.technicianId()));"},{"type":"INSERT","lineNumber":50,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Technician not found: \" + dto.technicianId()));"},{"type":"INSERT","lineNumber":51,"content":"        System.out.println(\"Found Technician: \" + technician.getName());"},{"type":"DELETE","lineNumber":52,"oldContent":"//        System.out.println(\"Found Technician: \" + technician.getName());"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/DeploymentTaskRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/DeploymentTaskRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\n// package com.project.NetworkApp.repository;\n\nimport com.project.NetworkApp.entity.DeploymentTask;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface DeploymentTaskRepository extends JpaRepository<DeploymentTask, Integer> {\n    // Add custom queries later (e.g., findByTechnicianId)\n}\n","baseTimestamp":1760882237455,"deltas":[{"timestamp":1761033326861,"changes":[{"type":"MODIFY","lineNumber":10,"content":"    List<DeploymentTask> findByTechnician_IdAndStatus(Integer technicianId, TaskStatus status);","oldContent":"    // Add custom queries later (e.g., findByTechnicianId)"},{"type":"INSERT","lineNumber":11,"content":"    // --- End Fix ---"},{"type":"INSERT","lineNumber":12,"content":""},{"type":"INSERT","lineNumber":13,"content":"    List<DeploymentTask> findByTechnicianId(Integer technicianId); // Keep"}]},{"timestamp":1761033330825,"changes":[{"type":"INSERT","lineNumber":8,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":9,"content":""},{"type":"DELETE","lineNumber":12,"oldContent":"}"},{"type":"DELETE","lineNumber":14,"oldContent":""},{"type":"INSERT","lineNumber":16,"content":"}"},{"type":"INSERT","lineNumber":17,"content":""}]},{"timestamp":1761033333281,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.enums.TaskStatus;"},{"type":"DELETE","lineNumber":9,"oldContent":"@Repository"},{"type":"INSERT","lineNumber":11,"content":"@Repository"}]},{"timestamp":1761033434807,"changes":[{"type":"MODIFY","lineNumber":13,"content":"    List<DeploymentTask> findByTechnicianIdAndStatus(Integer technicianId, TaskStatus status);","oldContent":"    List<DeploymentTask> findByTechnician_IdAndStatus(Integer technicianId, TaskStatus status);"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/AssignmentController.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/AssignmentController.java","baseContent":"package com.project.NetworkApp.controller;\n\n// package com.project.NetworkApp.controller;\n\nimport com.project.NetworkApp.dto.AssignmentRequestDTO;\nimport com.project.NetworkApp.service.AssignmentService; // We'll create this next\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/assignments\")\n@RequiredArgsConstructor\npublic class AssignmentController {\n\n    private final AssignmentService assignmentService;\n\n    /**\n     * POST /assignments\n     * Assigns a customer to a network path (Splitter/Port) and creates a deployment task.\n     * Corresponds to Planner's Journey Step 2.\n     */\n    @PostMapping\n    public ResponseEntity<Void> createAssignment(@RequestBody AssignmentRequestDTO assignmentRequestDTO) {\n        assignmentService.assignNetworkPath(assignmentRequestDTO);\n        return ResponseEntity.ok().build(); // Return 200 OK on success\n    }\n}","baseTimestamp":1760883776776,"deltas":[{"timestamp":1760883781304,"changes":[{"type":"MODIFY","lineNumber":5,"content":"import com.project.NetworkApp.Service.AssignmentService; // We'll create this next","oldContent":"import com.project.NetworkApp.service.AssignmentService; // We'll create this next"}]},{"timestamp":1760883784437,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.D.AssignmentRequestDTO;","oldContent":"import com.project.NetworkApp.dto.AssignmentRequestDTO;"}]},{"timestamp":1760883787799,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.AssignmentRequestDTO;","oldContent":"import com.project.NetworkApp.D.AssignmentRequestDTO;"}]},{"timestamp":1760883810790,"changes":[{"type":"DELETE","lineNumber":8,"oldContent":"import org.springframework.web.bind.annotation.PostMapping;"},{"type":"DELETE","lineNumber":9,"oldContent":"import org.springframework.web.bind.annotation.RequestBody;"},{"type":"DELETE","lineNumber":10,"oldContent":"import org.springframework.web.bind.annotation.RequestMapping;"},{"type":"DELETE","lineNumber":11,"oldContent":"import org.springframework.web.bind.annotation.RestController;"},{"type":"INSERT","lineNumber":8,"content":"import org.springframework.web.bind.annotation.*;"},{"type":"INSERT","lineNumber":12,"content":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"INSERT","lineNumber":13,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/FiberDropLineRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/FiberDropLineRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\n// package com.project.NetworkApp.repository;\n\nimport com.project.NetworkApp.entity.FiberDropLine;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface FiberDropLineRepository extends JpaRepository<FiberDropLine, Integer> {\n    // Add custom queries if needed later\n}","baseTimestamp":1760886250732},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/TechnicianRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/TechnicianRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\n// package com.project.NetworkApp.repository;\n// ... imports\nimport java.util.List; // Import List\n\n@Repository\npublic interface TechnicianRepository extends JpaRepository<Technician, Integer> {\n    // --- ADD THIS METHOD ---\n    List<Technician> findByRegion(String region);\n}","baseTimestamp":1760888139962,"deltas":[{"timestamp":1760888144660,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.entity.Technician;"},{"type":"INSERT","lineNumber":5,"content":"import org.springframework.stereotype.Repository;"},{"type":"INSERT","lineNumber":6,"content":""}]},{"timestamp":1760888165048,"changes":[{"type":"MODIFY","lineNumber":5,"content":"import org.springframework.data.jpa.repository.JpaRepository;","oldContent":"import java.util.List; // Import List"},{"type":"INSERT","lineNumber":8,"content":"import java.util.List; // Import List"}]},{"timestamp":1761034983165,"changes":[{"type":"INSERT","lineNumber":14,"content":""},{"type":"INSERT","lineNumber":15,"content":"    Optional<Technician> findByUserId(Integer userId);"}]},{"timestamp":1761034987979,"changes":[{"type":"INSERT","lineNumber":9,"content":"import java.util.Optional;"},{"type":"DELETE","lineNumber":15,"oldContent":"}"},{"type":"INSERT","lineNumber":17,"content":"}"}]},{"timestamp":1761035916736,"changes":[{"type":"MODIFY","lineNumber":16,"content":"    Optional<Technician> findByUser_Id(Integer userId);","oldContent":"    Optional<Technician> findByUserId(Integer userId);"}]},{"timestamp":1761036243223,"changes":[{"type":"MODIFY","lineNumber":16,"content":"    Optional<TechnicianDTO> getTechnicianByUserId(Integer userId);","oldContent":"    Optional<Technician> findByUser_Id(Integer userId);"}]},{"timestamp":1761036246375,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.TechnicianDTO;"}]},{"timestamp":1761036458520,"changes":[{"type":"MODIFY","lineNumber":17,"content":"    Optional<Technician> getTechnicianByUserId(Integer userId);","oldContent":"    Optional<TechnicianDTO> getTechnicianByUserId(Integer userId);"}]},{"timestamp":1761036665534,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.project.NetworkApp.DTO.TechnicianDTO;"},{"type":"MODIFY","lineNumber":16,"content":"    Optional<Technician> findByUser_Id(Integer userId);","oldContent":"    Optional<Technician> getTechnicianByUserId(Integer userId);"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/TechnicianService.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/TechnicianService.java","baseContent":"package com.project.NetworkApp.Service;\n\npackage com.project.NetworkApp.service;\nimport com.project.NetworkApp.entity.Technician;\nimport java.util.List;\n\npublic interface TechnicianService {\n    // Modify to accept an optional region\n    List<Technician> getTechnicians(String region);\n}\n","baseTimestamp":1760888190384,"deltas":[{"timestamp":1760888194909,"changes":[{"type":"MODIFY","lineNumber":2,"content":"","oldContent":"package com.project.NetworkApp.service;"}]},{"timestamp":1761034899106,"changes":[{"type":"INSERT","lineNumber":9,"content":""},{"type":"INSERT","lineNumber":10,"content":"    Optional<Technician> getTechnicianByUserId(Integer userId);"}]},{"timestamp":1761034907247,"changes":[{"type":"INSERT","lineNumber":5,"content":"import java.util.Optional;"},{"type":"DELETE","lineNumber":10,"oldContent":"}"},{"type":"INSERT","lineNumber":12,"content":"}"}]},{"timestamp":1761036350377,"changes":[{"type":"INSERT","lineNumber":3,"content":"import com.project.NetworkApp.DTO.TechnicianDTO;"},{"type":"MODIFY","lineNumber":12,"content":"    public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId)","oldContent":"    Optional<Technician> getTechnicianByUserId(Integer userId);"}]},{"timestamp":1761036352819,"changes":[{"type":"DELETE","lineNumber":12,"oldContent":"    Optional<Technician> getTechnicianByUserId(Integer userId);"},{"type":"MODIFY","lineNumber":12,"content":"    public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId);","oldContent":"    public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId)"},{"type":"INSERT","lineNumber":13,"content":"}"}]},{"timestamp":1761036504680,"changes":[{"type":"DELETE","lineNumber":12,"oldContent":"    public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId);"},{"type":"MODIFY","lineNumber":12,"content":"    public Optional<Technician> getTechnicianByUserId(Integer userId);","oldContent":"    public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId)"},{"type":"INSERT","lineNumber":13,"content":"}"}]},{"timestamp":1761036641850,"changes":[{"type":"DELETE","lineNumber":12,"oldContent":"    public Optional<Technician> getTechnicianByUserId(Integer userId);"},{"type":"MODIFY","lineNumber":12,"content":"    public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId);","oldContent":"    public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId)"},{"type":"INSERT","lineNumber":13,"content":"}"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/TechnicianServiceImpl.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/TechnicianServiceImpl.java","baseContent":"package com.project.NetworkApp.Service;\n// Interface\npackage com.project.NetworkApp.service;\nimport com.project.NetworkApp.entity.Technician;\nimport java.util.List;\n\npublic interface TechnicianService {\n    // Modify to accept an optional region\n    List<Technician> getTechnicians(String region);\n}\n\n// Implementation\npackage com.project.NetworkApp.service;\n// ... imports\nimport org.springframework.util.StringUtils; // Import StringUtils\n\n@Service @RequiredArgsConstructor\npublic class TechnicianServiceImpl implements TechnicianService {\n    private final TechnicianRepository technicianRepository;\n\n    @Override\n    public List<Technician> getTechnicians(String region) {\n        // If a region is provided (and not empty), filter by it.\n        // Otherwise, return all technicians.\n        if (StringUtils.hasText(region)) {\n            return technicianRepository.findByRegion(region);\n        } else {\n            return technicianRepository.findAll();\n        }\n    }\n}\n","baseTimestamp":1760888214485,"deltas":[{"timestamp":1760888251180,"changes":[{"type":"INSERT","lineNumber":11,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":12,"content":""}]},{"timestamp":1761034919475,"changes":[{"type":"MODIFY","lineNumber":13,"content":"@Service","oldContent":"@Service"},{"type":"INSERT","lineNumber":28,"content":""},{"type":"INSERT","lineNumber":29,"content":"    @Override"},{"type":"INSERT","lineNumber":30,"content":"    public Optional<Technician> getTechnicianByUserId(Integer userId) {"},{"type":"INSERT","lineNumber":31,"content":"        // Call the repository method we defined earlier"},{"type":"INSERT","lineNumber":32,"content":"        return technicianRepository.findByUserId(userId);"},{"type":"INSERT","lineNumber":33,"content":"    }"}]},{"timestamp":1761034923587,"changes":[{"type":"INSERT","lineNumber":12,"content":"import java.util.Optional;"},{"type":"INSERT","lineNumber":13,"content":""},{"type":"DELETE","lineNumber":13,"oldContent":"@Service"},{"type":"DELETE","lineNumber":29,"oldContent":"}"},{"type":"DELETE","lineNumber":31,"oldContent":""},{"type":"MODIFY","lineNumber":34,"content":"    }","oldContent":"    }"},{"type":"INSERT","lineNumber":35,"content":"}"},{"type":"INSERT","lineNumber":36,"content":""}]},{"timestamp":1761035887643,"changes":[{"type":"MODIFY","lineNumber":14,"content":"@Service","oldContent":"@Service"},{"type":"INSERT","lineNumber":32,"content":"        // Call the repository method we defined earlier"},{"type":"INSERT","lineNumber":33,"content":"        System.out.println(\">>> Service: Searching for Technician by User ID: \" + userId); // Add log"},{"type":"INSERT","lineNumber":34,"content":"        try {"},{"type":"INSERT","lineNumber":35,"content":"            Optional<Technician> result = technicianRepository.findByUser_Id(userId);"},{"type":"INSERT","lineNumber":36,"content":"            System.out.println(\">>> Service: Found technician? \" + result.isPresent()); // Add log"},{"type":"INSERT","lineNumber":37,"content":"            return result;"},{"type":"INSERT","lineNumber":38,"content":"        } catch (Exception e) {"},{"type":"INSERT","lineNumber":39,"content":"            System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"INSERT","lineNumber":40,"content":"            e.printStackTrace(); // Print the full error stack trace"},{"type":"INSERT","lineNumber":41,"content":"            throw e; // Re-throw the exception so Spring handles it (usually results in 500)"},{"type":"INSERT","lineNumber":42,"content":"        }"},{"type":"DELETE","lineNumber":33,"oldContent":"    }"},{"type":"DELETE","lineNumber":35,"oldContent":"        return technicianRepository.findByUserId(userId);"}]},{"timestamp":1761035892717,"changes":[{"type":"INSERT","lineNumber":13,"content":""},{"type":"DELETE","lineNumber":14,"oldContent":"@Service"},{"type":"DELETE","lineNumber":33,"oldContent":"    }"},{"type":"DELETE","lineNumber":36,"oldContent":"}"},{"type":"DELETE","lineNumber":37,"oldContent":"            Optional<Technician> result = technicianRepository.findByUser_Id(userId);"},{"type":"INSERT","lineNumber":35,"content":"            Optional<Technician> result = technicianRepository.findByUserId(userId);"},{"type":"DELETE","lineNumber":39,"oldContent":""},{"type":"DELETE","lineNumber":41,"oldContent":"        }"},{"type":"DELETE","lineNumber":43,"oldContent":"            throw e; // Re-throw the exception so Spring handles it (usually results in 500)"},{"type":"INSERT","lineNumber":41,"content":"            throw e; // Re-throw the exception so Spring handles it (usually results in 500)"},{"type":"INSERT","lineNumber":42,"content":"        }"},{"type":"INSERT","lineNumber":43,"content":"    }"},{"type":"INSERT","lineNumber":44,"content":"}"},{"type":"INSERT","lineNumber":45,"content":""}]},{"timestamp":1761035911138,"changes":[{"type":"MODIFY","lineNumber":35,"content":"            Optional<Technician> result = technicianRepository.findByUser_Id(userId);","oldContent":"            Optional<Technician> result = technicianRepository.findByUserId(userId);"},{"type":"INSERT","lineNumber":38,"content":"        } catch (Exception e) {"},{"type":"INSERT","lineNumber":39,"content":"            System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"INSERT","lineNumber":40,"content":"            e.printStackTrace(); // Print the full error stack trace"},{"type":"DELETE","lineNumber":40,"oldContent":"        } catch (Exception e) {"},{"type":"DELETE","lineNumber":43,"oldContent":"            System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"DELETE","lineNumber":45,"oldContent":"            e.printStackTrace(); // Print the full error stack trace"}]},{"timestamp":1761036290140,"changes":[{"type":"DELETE","lineNumber":30,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":31,"oldContent":"    public Optional<Technician> getTechnicianByUserId(Integer userId) {"},{"type":"DELETE","lineNumber":32,"oldContent":"        // Call the repository method we defined earlier"},{"type":"DELETE","lineNumber":33,"oldContent":"        System.out.println(\">>> Service: Searching for Technician by User ID: \" + userId); // Add log"},{"type":"DELETE","lineNumber":34,"oldContent":"            Optional<Technician> result = technicianRepository.findByUserId(userId);"},{"type":"DELETE","lineNumber":35,"oldContent":"            Optional<Technician> result = technicianRepository.findByUser_Id(userId);"},{"type":"DELETE","lineNumber":36,"oldContent":"            System.out.println(\">>> Service: Found technician? \" + result.isPresent()); // Add log"},{"type":"DELETE","lineNumber":37,"oldContent":"            return result;"},{"type":"DELETE","lineNumber":38,"oldContent":"        } catch (Exception e) {"},{"type":"DELETE","lineNumber":39,"oldContent":"            throw e; // Re-throw the exception so Spring handles it (usually results in 500)"},{"type":"DELETE","lineNumber":40,"oldContent":"            System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"INSERT","lineNumber":30,"content":"// package com.project.NetworkApp.service;"},{"type":"INSERT","lineNumber":31,"content":"import com.project.NetworkApp.dto.TechnicianDTO; // Import DTO"},{"type":"INSERT","lineNumber":32,"content":"import com.project.NetworkApp.util.TechnicianUtility; // Import Utility"},{"type":"INSERT","lineNumber":33,"content":"// ... other imports ..."},{"type":"INSERT","lineNumber":34,"content":""},{"type":"INSERT","lineNumber":35,"content":"    @Service"},{"type":"INSERT","lineNumber":36,"content":"    @RequiredArgsConstructor"},{"type":"INSERT","lineNumber":37,"content":"    public class TechnicianServiceImpl implements TechnicianService {"},{"type":"INSERT","lineNumber":38,"content":"        private final TechnicianRepository technicianRepository;"},{"type":"INSERT","lineNumber":39,"content":""},{"type":"INSERT","lineNumber":40,"content":"        // ... getTechnicians ..."},{"type":"INSERT","lineNumber":41,"content":""},{"type":"INSERT","lineNumber":42,"content":"        // --- CHANGE RETURN TYPE and add mapping ---"},{"type":"INSERT","lineNumber":43,"content":"        @Override"},{"type":"INSERT","lineNumber":44,"content":"        public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId) {"},{"type":"INSERT","lineNumber":45,"content":"            System.out.println(\">>> Service: Searching for Technician by User ID: \" + userId);"},{"type":"INSERT","lineNumber":46,"content":"            try {"},{"type":"INSERT","lineNumber":47,"content":"                // Fetch the Technician entity"},{"type":"INSERT","lineNumber":48,"content":"                Optional<Technician> technicianOpt = technicianRepository.findByUser_Id(userId);"},{"type":"INSERT","lineNumber":49,"content":"                System.out.println(\">>> Service: Found technician entity? \" + technicianOpt.isPresent());"},{"type":"INSERT","lineNumber":50,"content":""},{"type":"INSERT","lineNumber":51,"content":"                // Map the entity to DTO if present"},{"type":"INSERT","lineNumber":52,"content":"                return technicianOpt.map(TechnicianUtility::toDTO); // Use map() on Optional"},{"type":"INSERT","lineNumber":53,"content":""},{"type":"INSERT","lineNumber":54,"content":"            } catch (Exception e) {"},{"type":"INSERT","lineNumber":55,"content":"                System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"INSERT","lineNumber":56,"content":"                e.printStackTrace();"},{"type":"INSERT","lineNumber":57,"content":"                // It's better to let the global exception handler manage this"},{"type":"INSERT","lineNumber":58,"content":"                // Or return Optional.empty() if that's preferred over 500"},{"type":"INSERT","lineNumber":59,"content":"                return Optional.empty();"},{"type":"INSERT","lineNumber":60,"content":"                // throw e; // Re-throwing might still cause serialization issues higher up"},{"type":"INSERT","lineNumber":61,"content":"            }"},{"type":"DELETE","lineNumber":42,"oldContent":"            e.printStackTrace(); // Print the full error stack trace"}]},{"timestamp":1761036292851,"changes":[{"type":"DELETE","lineNumber":30,"oldContent":"// package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":31,"oldContent":"import com.project.NetworkApp.dto.TechnicianDTO; // Import DTO"},{"type":"DELETE","lineNumber":32,"oldContent":"import com.project.NetworkApp.util.TechnicianUtility; // Import Utility"},{"type":"DELETE","lineNumber":33,"oldContent":"// ... other imports ..."},{"type":"DELETE","lineNumber":34,"oldContent":""},{"type":"DELETE","lineNumber":35,"oldContent":"    @Service"},{"type":"DELETE","lineNumber":36,"oldContent":"    @RequiredArgsConstructor"},{"type":"DELETE","lineNumber":37,"oldContent":"    public class TechnicianServiceImpl implements TechnicianService {"},{"type":"DELETE","lineNumber":38,"oldContent":"        private final TechnicianRepository technicianRepository;"},{"type":"DELETE","lineNumber":39,"oldContent":""},{"type":"DELETE","lineNumber":40,"oldContent":"        // ... getTechnicians ..."},{"type":"DELETE","lineNumber":41,"oldContent":""},{"type":"INSERT","lineNumber":30,"content":"    @Override"},{"type":"INSERT","lineNumber":31,"content":"    public Optional<Technician> getTechnicianByUserId(Integer userId) {"},{"type":"INSERT","lineNumber":32,"content":"        // Call the repository method we defined earlier"},{"type":"INSERT","lineNumber":33,"content":"        System.out.println(\">>> Service: Searching for Technician by User ID: \" + userId); // Add log"},{"type":"INSERT","lineNumber":34,"content":"        try {"},{"type":"INSERT","lineNumber":35,"content":"            Optional<Technician> result = technicianRepository.findByUser_Id(userId);"},{"type":"INSERT","lineNumber":36,"content":"            System.out.println(\">>> Service: Found technician? \" + result.isPresent()); // Add log"},{"type":"INSERT","lineNumber":37,"content":"            return result;"},{"type":"INSERT","lineNumber":38,"content":"        } catch (Exception e) {"},{"type":"INSERT","lineNumber":39,"content":"            System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"INSERT","lineNumber":40,"content":"            e.printStackTrace(); // Print the full error stack trace"},{"type":"INSERT","lineNumber":41,"content":"            throw e; // Re-throw the exception so Spring handles it (usually results in 500)"},{"type":"DELETE","lineNumber":43,"oldContent":"        // --- CHANGE RETURN TYPE and add mapping ---"},{"type":"DELETE","lineNumber":44,"oldContent":"        @Override"},{"type":"DELETE","lineNumber":46,"oldContent":"        public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId) {"},{"type":"DELETE","lineNumber":48,"oldContent":"            System.out.println(\">>> Service: Searching for Technician by User ID: \" + userId);"},{"type":"DELETE","lineNumber":50,"oldContent":"            try {"},{"type":"DELETE","lineNumber":51,"oldContent":"            }"},{"type":"DELETE","lineNumber":52,"oldContent":"                // Fetch the Technician entity"},{"type":"DELETE","lineNumber":53,"oldContent":"                // throw e; // Re-throwing might still cause serialization issues higher up"},{"type":"DELETE","lineNumber":54,"oldContent":"                Optional<Technician> technicianOpt = technicianRepository.findByUser_Id(userId);"},{"type":"DELETE","lineNumber":55,"oldContent":"                return Optional.empty();"},{"type":"DELETE","lineNumber":56,"oldContent":"                System.out.println(\">>> Service: Found technician entity? \" + technicianOpt.isPresent());"},{"type":"DELETE","lineNumber":57,"oldContent":"                // Or return Optional.empty() if that's preferred over 500"},{"type":"DELETE","lineNumber":58,"oldContent":""},{"type":"DELETE","lineNumber":59,"oldContent":"                // It's better to let the global exception handler manage this"},{"type":"DELETE","lineNumber":60,"oldContent":"                // Map the entity to DTO if present"},{"type":"DELETE","lineNumber":61,"oldContent":"                e.printStackTrace();"},{"type":"DELETE","lineNumber":62,"oldContent":"                return technicianOpt.map(TechnicianUtility::toDTO); // Use map() on Optional"},{"type":"DELETE","lineNumber":63,"oldContent":"                System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"DELETE","lineNumber":64,"oldContent":""},{"type":"DELETE","lineNumber":65,"oldContent":"            } catch (Exception e) {"}]},{"timestamp":1761036303165,"changes":[{"type":"DELETE","lineNumber":30,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":31,"oldContent":"    public Optional<Technician> getTechnicianByUserId(Integer userId) {"},{"type":"DELETE","lineNumber":32,"oldContent":"        // Call the repository method we defined earlier"},{"type":"DELETE","lineNumber":33,"oldContent":"        System.out.println(\">>> Service: Searching for Technician by User ID: \" + userId); // Add log"},{"type":"DELETE","lineNumber":34,"oldContent":"        try {"},{"type":"DELETE","lineNumber":35,"oldContent":"            Optional<Technician> result = technicianRepository.findByUser_Id(userId);"},{"type":"DELETE","lineNumber":36,"oldContent":"            System.out.println(\">>> Service: Found technician? \" + result.isPresent()); // Add log"},{"type":"DELETE","lineNumber":37,"oldContent":"            return result;"},{"type":"DELETE","lineNumber":38,"oldContent":"        } catch (Exception e) {"},{"type":"DELETE","lineNumber":39,"oldContent":"            System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"DELETE","lineNumber":40,"oldContent":"            e.printStackTrace(); // Print the full error stack trace"},{"type":"DELETE","lineNumber":41,"oldContent":"            throw e; // Re-throw the exception so Spring handles it (usually results in 500)"},{"type":"INSERT","lineNumber":30,"content":"    // package com.project.NetworkApp.service;"},{"type":"INSERT","lineNumber":31,"content":"import com.project.NetworkApp.dto.TechnicianDTO; // Import DTO"},{"type":"INSERT","lineNumber":32,"content":"import com.project.NetworkApp.util.TechnicianUtility; // Import Utility"},{"type":"INSERT","lineNumber":33,"content":"// ... other imports ..."},{"type":"INSERT","lineNumber":34,"content":""},{"type":"INSERT","lineNumber":35,"content":"    @Service"},{"type":"INSERT","lineNumber":36,"content":"    @RequiredArgsConstructor"},{"type":"INSERT","lineNumber":37,"content":"    public class TechnicianServiceImpl implements TechnicianService {"},{"type":"INSERT","lineNumber":38,"content":"        private final TechnicianRepository technicianRepository;"},{"type":"INSERT","lineNumber":39,"content":""},{"type":"INSERT","lineNumber":40,"content":"        // ... getTechnicians ..."},{"type":"INSERT","lineNumber":41,"content":""},{"type":"INSERT","lineNumber":42,"content":"        // --- CHANGE RETURN TYPE and add mapping ---"},{"type":"INSERT","lineNumber":43,"content":"        @Override"},{"type":"INSERT","lineNumber":44,"content":"        public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId) {"},{"type":"INSERT","lineNumber":45,"content":"            System.out.println(\">>> Service: Searching for Technician by User ID: \" + userId);"},{"type":"INSERT","lineNumber":46,"content":"            try {"},{"type":"INSERT","lineNumber":47,"content":"                // Fetch the Technician entity"},{"type":"INSERT","lineNumber":48,"content":"                Optional<Technician> technicianOpt = technicianRepository.findByUser_Id(userId);"},{"type":"INSERT","lineNumber":49,"content":"                System.out.println(\">>> Service: Found technician entity? \" + technicianOpt.isPresent());"},{"type":"INSERT","lineNumber":50,"content":""},{"type":"INSERT","lineNumber":51,"content":"                // Map the entity to DTO if present"},{"type":"INSERT","lineNumber":52,"content":"                return technicianOpt.map(TechnicianUtility::toDTO); // Use map() on Optional"},{"type":"INSERT","lineNumber":53,"content":""},{"type":"INSERT","lineNumber":54,"content":"            } catch (Exception e) {"},{"type":"INSERT","lineNumber":55,"content":"                System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"INSERT","lineNumber":56,"content":"                e.printStackTrace();"},{"type":"INSERT","lineNumber":57,"content":"                // It's better to let the global exception handler manage this"},{"type":"INSERT","lineNumber":58,"content":"                // Or return Optional.empty() if that's preferred over 500"},{"type":"INSERT","lineNumber":59,"content":"                return Optional.empty();"},{"type":"INSERT","lineNumber":60,"content":"                // throw e; // Re-throwing might still cause serialization issues higher up"},{"type":"INSERT","lineNumber":61,"content":"            }"}]},{"timestamp":1761036312728,"changes":[{"type":"DELETE","lineNumber":30,"oldContent":"    // package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":31,"oldContent":"import com.project.NetworkApp.dto.TechnicianDTO; // Import DTO"},{"type":"DELETE","lineNumber":32,"oldContent":"import com.project.NetworkApp.util.TechnicianUtility; // Import Utility"},{"type":"DELETE","lineNumber":33,"oldContent":"// ... other imports ..."},{"type":"DELETE","lineNumber":34,"oldContent":""},{"type":"DELETE","lineNumber":35,"oldContent":"    @Service"},{"type":"DELETE","lineNumber":36,"oldContent":"    @RequiredArgsConstructor"},{"type":"DELETE","lineNumber":37,"oldContent":"    public class TechnicianServiceImpl implements TechnicianService {"},{"type":"DELETE","lineNumber":38,"oldContent":"        private final TechnicianRepository technicianRepository;"},{"type":"DELETE","lineNumber":39,"oldContent":""},{"type":"DELETE","lineNumber":40,"oldContent":"        // ... getTechnicians ..."},{"type":"DELETE","lineNumber":41,"oldContent":""},{"type":"DELETE","lineNumber":42,"oldContent":"        // --- CHANGE RETURN TYPE and add mapping ---"},{"type":"INSERT","lineNumber":30,"content":"    @Override"},{"type":"INSERT","lineNumber":31,"content":"    public Optional<Technician> getTechnicianByUserId(Integer userId) {"},{"type":"INSERT","lineNumber":32,"content":"        // Call the repository method we defined earlier"},{"type":"INSERT","lineNumber":33,"content":"        System.out.println(\">>> Service: Searching for Technician by User ID: \" + userId); // Add log"},{"type":"INSERT","lineNumber":34,"content":"        try {"},{"type":"INSERT","lineNumber":35,"content":"            Optional<Technician> result = technicianRepository.findByUser_Id(userId);"},{"type":"INSERT","lineNumber":36,"content":"            System.out.println(\">>> Service: Found technician? \" + result.isPresent()); // Add log"},{"type":"INSERT","lineNumber":37,"content":"            return result;"},{"type":"INSERT","lineNumber":38,"content":"        } catch (Exception e) {"},{"type":"INSERT","lineNumber":39,"content":"            System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"INSERT","lineNumber":40,"content":"            e.printStackTrace(); // Print the full error stack trace"},{"type":"INSERT","lineNumber":41,"content":"            throw e; // Re-throw the exception so Spring handles it (usually results in 500)"},{"type":"DELETE","lineNumber":44,"oldContent":"        @Override"},{"type":"DELETE","lineNumber":46,"oldContent":"        public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId) {"},{"type":"DELETE","lineNumber":48,"oldContent":"            System.out.println(\">>> Service: Searching for Technician by User ID: \" + userId);"},{"type":"DELETE","lineNumber":50,"oldContent":"            try {"},{"type":"DELETE","lineNumber":51,"oldContent":"            }"},{"type":"DELETE","lineNumber":52,"oldContent":"                // Fetch the Technician entity"},{"type":"DELETE","lineNumber":53,"oldContent":"                // throw e; // Re-throwing might still cause serialization issues higher up"},{"type":"DELETE","lineNumber":54,"oldContent":"                Optional<Technician> technicianOpt = technicianRepository.findByUser_Id(userId);"},{"type":"DELETE","lineNumber":55,"oldContent":"                return Optional.empty();"},{"type":"DELETE","lineNumber":56,"oldContent":"                System.out.println(\">>> Service: Found technician entity? \" + technicianOpt.isPresent());"},{"type":"DELETE","lineNumber":57,"oldContent":"                // Or return Optional.empty() if that's preferred over 500"},{"type":"DELETE","lineNumber":58,"oldContent":""},{"type":"DELETE","lineNumber":59,"oldContent":"                // It's better to let the global exception handler manage this"},{"type":"DELETE","lineNumber":60,"oldContent":"                // Map the entity to DTO if present"},{"type":"DELETE","lineNumber":61,"oldContent":"                e.printStackTrace();"},{"type":"DELETE","lineNumber":62,"oldContent":"                return technicianOpt.map(TechnicianUtility::toDTO); // Use map() on Optional"},{"type":"DELETE","lineNumber":63,"oldContent":"                System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"DELETE","lineNumber":64,"oldContent":""},{"type":"DELETE","lineNumber":65,"oldContent":"            } catch (Exception e) {"}]},{"timestamp":1761036329556,"changes":[{"type":"DELETE","lineNumber":31,"oldContent":"    public Optional<Technician> getTechnicianByUserId(Integer userId) {"},{"type":"DELETE","lineNumber":32,"oldContent":"        // Call the repository method we defined earlier"},{"type":"DELETE","lineNumber":33,"oldContent":"        System.out.println(\">>> Service: Searching for Technician by User ID: \" + userId); // Add log"},{"type":"INSERT","lineNumber":31,"content":"    public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId) {"},{"type":"INSERT","lineNumber":32,"content":"        System.out.println(\">>> Service: Searching for Technician by User ID: \" + userId);"},{"type":"DELETE","lineNumber":35,"oldContent":"            Optional<Technician> result = technicianRepository.findByUser_Id(userId);"},{"type":"DELETE","lineNumber":36,"oldContent":"            System.out.println(\">>> Service: Found technician? \" + result.isPresent()); // Add log"},{"type":"DELETE","lineNumber":37,"oldContent":"            return result;"},{"type":"INSERT","lineNumber":34,"content":"            // Fetch the Technician entity"},{"type":"INSERT","lineNumber":35,"content":"            Optional<Technician> technicianOpt = technicianRepository.findByUser_Id(userId);"},{"type":"INSERT","lineNumber":36,"content":"            System.out.println(\">>> Service: Found technician entity? \" + technicianOpt.isPresent());"},{"type":"INSERT","lineNumber":37,"content":""},{"type":"INSERT","lineNumber":38,"content":"            // Map the entity to DTO if present"},{"type":"INSERT","lineNumber":39,"content":"            return technicianOpt.map(TechnicianUtility::toDTO); // Use map() on Optional"},{"type":"INSERT","lineNumber":40,"content":""},{"type":"DELETE","lineNumber":40,"oldContent":"            e.printStackTrace(); // Print the full error stack trace"},{"type":"DELETE","lineNumber":41,"oldContent":"            throw e; // Re-throw the exception so Spring handles it (usually results in 500)"},{"type":"INSERT","lineNumber":43,"content":"            e.printStackTrace();"},{"type":"INSERT","lineNumber":44,"content":"            // It's better to let the global exception handler manage this"},{"type":"INSERT","lineNumber":45,"content":"            // Or return Optional.empty() if that's preferred over 500"},{"type":"INSERT","lineNumber":46,"content":"            return Optional.empty();"},{"type":"INSERT","lineNumber":47,"content":"            // throw e; // Re-throwing might still cause serialization issues higher up"}]},{"timestamp":1761036335796,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.DTO.TechnicianDTO;"},{"type":"DELETE","lineNumber":33,"oldContent":"            // Fetch the Technician entity"},{"type":"INSERT","lineNumber":35,"content":"            // Fetch the Technician entity"},{"type":"DELETE","lineNumber":39,"oldContent":"        } catch (Exception e) {"},{"type":"DELETE","lineNumber":41,"oldContent":"            System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"DELETE","lineNumber":43,"oldContent":"        }"},{"type":"INSERT","lineNumber":42,"content":"        } catch (Exception e) {"},{"type":"INSERT","lineNumber":43,"content":"            System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"DELETE","lineNumber":45,"oldContent":"    }"},{"type":"DELETE","lineNumber":47,"oldContent":"}"},{"type":"MODIFY","lineNumber":49,"content":"        }","oldContent":""},{"type":"INSERT","lineNumber":50,"content":"    }"},{"type":"INSERT","lineNumber":51,"content":"}"},{"type":"INSERT","lineNumber":52,"content":""}]},{"timestamp":1761036371450,"changes":[{"type":"MODIFY","lineNumber":36,"content":"            Optional<Technician> technicianOpt = technicianRepository.findByUserId(userId);","oldContent":"            Optional<Technician> technicianOpt = technicianRepository.findByUser_Id(userId);"},{"type":"MODIFY","lineNumber":42,"content":"        } catch (Exception e) {","oldContent":"        } catch (Exception e) {"},{"type":"INSERT","lineNumber":47,"content":"            return Optional.empty();"},{"type":"INSERT","lineNumber":48,"content":"            // throw e; // Re-throwing might still cause serialization issues higher up"},{"type":"DELETE","lineNumber":49,"oldContent":"            return Optional.empty();"},{"type":"DELETE","lineNumber":51,"oldContent":"            // throw e; // Re-throwing might still cause serialization issues higher up"}]},{"timestamp":1761036399799,"changes":[{"type":"MODIFY","lineNumber":36,"content":"            Optional<Technician> technicianOpt = technicianRepository.getTechnicianByUserId(userId);","oldContent":"            Optional<Technician> technicianOpt = technicianRepository.findByUserId(userId);"},{"type":"INSERT","lineNumber":41,"content":""},{"type":"DELETE","lineNumber":42,"oldContent":"        } catch (Exception e) {"},{"type":"MODIFY","lineNumber":49,"content":"        }","oldContent":"        }"}]},{"timestamp":1761036424166,"changes":[{"type":"MODIFY","lineNumber":36,"content":"            Optional<TechnicianDTO> technicianOpt = technicianRepository.getTechnicianByUserId(userId);","oldContent":"            Optional<Technician> technicianOpt = technicianRepository.getTechnicianByUserId(userId);"},{"type":"INSERT","lineNumber":48,"content":"            // throw e; // Re-throwing might still cause serialization issues higher up"},{"type":"DELETE","lineNumber":49,"oldContent":"        }"}]},{"timestamp":1761036426457,"changes":[{"type":"INSERT","lineNumber":7,"content":"import com.project.NetworkApp.Utility.TechnicianUtility;"}]},{"timestamp":1761036451370,"changes":[{"type":"MODIFY","lineNumber":3,"content":"","oldContent":"package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.project.NetworkApp.Utility.TechnicianUtility;"},{"type":"MODIFY","lineNumber":36,"content":"            Optional<Technician> technicianOpt = technicianRepository.getTechnicianByUserId(userId);","oldContent":"            Optional<TechnicianDTO> technicianOpt = technicianRepository.getTechnicianByUserId(userId);"}]},{"timestamp":1761036464113,"changes":[{"type":"DELETE","lineNumber":1,"oldContent":"// Interface"},{"type":"DELETE","lineNumber":2,"oldContent":"package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":4,"oldContent":"import java.util.List;"},{"type":"INSERT","lineNumber":2,"content":"// Implementation"},{"type":"INSERT","lineNumber":3,"content":""},{"type":"INSERT","lineNumber":4,"content":"// ... imports"},{"type":"INSERT","lineNumber":7,"content":"import com.project.NetworkApp.Utility.TechnicianUtility;"},{"type":"DELETE","lineNumber":11,"oldContent":"public interface TechnicianService {"},{"type":"INSERT","lineNumber":12,"content":""},{"type":"DELETE","lineNumber":20,"oldContent":"// Implementation"},{"type":"DELETE","lineNumber":21,"oldContent":"package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":22,"oldContent":"// ... imports"},{"type":"DELETE","lineNumber":23,"oldContent":"import org.springframework.util.StringUtils; // Import StringUtils"},{"type":"DELETE","lineNumber":24,"oldContent":""},{"type":"DELETE","lineNumber":25,"oldContent":"@Service @RequiredArgsConstructor"},{"type":"DELETE","lineNumber":26,"oldContent":"public class TechnicianServiceImpl implements TechnicianService {"},{"type":"DELETE","lineNumber":27,"oldContent":"    private final TechnicianRepository technicianRepository;"},{"type":"DELETE","lineNumber":28,"oldContent":""},{"type":"INSERT","lineNumber":22,"content":"    public List<Technician> getTechnicians(String region) {"},{"type":"INSERT","lineNumber":23,"content":"        // If a region is provided (and not empty), filter by it."},{"type":"INSERT","lineNumber":24,"content":"        // Otherwise, return all technicians."},{"type":"INSERT","lineNumber":25,"content":"        if (StringUtils.hasText(region)) {"},{"type":"INSERT","lineNumber":26,"content":"            return technicianRepository.findByRegion(region);"},{"type":"INSERT","lineNumber":27,"content":"        } else {"},{"type":"INSERT","lineNumber":28,"content":"            return technicianRepository.findAll();"},{"type":"INSERT","lineNumber":29,"content":"        }"},{"type":"INSERT","lineNumber":30,"content":"    }"},{"type":"INSERT","lineNumber":36,"content":"            // Fetch the Technician entity"},{"type":"DELETE","lineNumber":36,"oldContent":"            Optional<TechnicianDTO> technicianOpt = technicianRepository.getTechnicianByUserId(userId);"},{"type":"DELETE","lineNumber":53,"oldContent":"            // throw e; // Re-throwing might still cause serialization issues higher up"},{"type":"DELETE","lineNumber":54,"oldContent":"                // Or return Optional.empty() if that's preferred over 500"},{"type":"DELETE","lineNumber":55,"oldContent":"                System.err.println(\"!!! Service ERROR finding technician by User ID: \" + userId);"},{"type":"DELETE","lineNumber":56,"oldContent":"            }"},{"type":"DELETE","lineNumber":57,"oldContent":"                e.printStackTrace();"},{"type":"DELETE","lineNumber":58,"oldContent":"                // throw e; // Re-throwing might still cause serialization issues higher up"},{"type":"DELETE","lineNumber":59,"oldContent":"                // It's better to let the global exception handler manage this"},{"type":"DELETE","lineNumber":60,"oldContent":"                return Optional.empty();"},{"type":"DELETE","lineNumber":61,"oldContent":"                // Or return Optional.empty() if that's preferred over 500"}]},{"timestamp":1761036570289,"changes":[{"type":"INSERT","lineNumber":1,"content":""},{"type":"DELETE","lineNumber":3,"oldContent":""},{"type":"DELETE","lineNumber":9,"oldContent":""},{"type":"DELETE","lineNumber":10,"oldContent":"    // Modify to accept an optional region"},{"type":"INSERT","lineNumber":9,"content":"import lombok.RequiredArgsConstructor;"},{"type":"INSERT","lineNumber":10,"content":"import org.springframework.stereotype.Service;"},{"type":"MODIFY","lineNumber":16,"content":"@Service","oldContent":""},{"type":"MODIFY","lineNumber":20,"content":"","oldContent":"// ... imports"},{"type":"INSERT","lineNumber":21,"content":"    @Override"},{"type":"DELETE","lineNumber":29,"oldContent":"        // Otherwise, return all technicians."},{"type":"MODIFY","lineNumber":33,"content":"    public Optional<Technician> getTechnicianByUserId(Integer userId) {","oldContent":"    public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId) {"},{"type":"MODIFY","lineNumber":37,"content":"            Optional<Technician> technicianOpt = technicianRepository.getTechnicianByUserId(userId);","oldContent":"            Optional<Technician> technicianOpt = technicianRepository.getTechnicianByUserId(userId);"}]},{"timestamp":1761036635652,"changes":[{"type":"MODIFY","lineNumber":0,"content":"package com.project.NetworkApp.Service; // Corrected package case","oldContent":"package com.project.NetworkApp.Service;"},{"type":"DELETE","lineNumber":2,"oldContent":"// Implementation"},{"type":"DELETE","lineNumber":3,"oldContent":""},{"type":"DELETE","lineNumber":4,"oldContent":"// ... imports"},{"type":"DELETE","lineNumber":6,"oldContent":""},{"type":"DELETE","lineNumber":7,"oldContent":"import com.project.NetworkApp.Utility.TechnicianUtility;"},{"type":"INSERT","lineNumber":3,"content":"import com.project.NetworkApp.Repository.TechnicianRepository;"},{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.Utility.TechnicianUtility; // Ensure this utility exists and works"},{"type":"DELETE","lineNumber":11,"oldContent":"    List<Technician> getTechnicians(String region);"},{"type":"INSERT","lineNumber":8,"content":"import org.springframework.util.StringUtils;"},{"type":"DELETE","lineNumber":18,"oldContent":"package com.project.NetworkApp.service;"},{"type":"DELETE","lineNumber":19,"oldContent":"// ... imports"},{"type":"INSERT","lineNumber":15,"content":"public class TechnicianServiceImpl implements TechnicianService { // Ensure this implements TechnicianService"},{"type":"INSERT","lineNumber":17,"content":"    private final TechnicianRepository technicianRepository;"},{"type":"INSERT","lineNumber":18,"content":""},{"type":"DELETE","lineNumber":23,"oldContent":"        // If a region is provided (and not empty), filter by it."},{"type":"DELETE","lineNumber":24,"oldContent":"        // Otherwise, return all technicians."},{"type":"INSERT","lineNumber":28,"content":"    // --- FIX 1: Change return type to Optional<TechnicianDTO> ---"},{"type":"DELETE","lineNumber":33,"oldContent":"    public Optional<Technician> getTechnicianByUserId(Integer userId) {"},{"type":"INSERT","lineNumber":30,"content":"    public Optional<TechnicianDTO> getTechnicianByUserId(Integer userId) {"},{"type":"DELETE","lineNumber":36,"oldContent":"            Optional<Technician> technicianOpt = technicianRepository.getTechnicianByUserId(userId);"},{"type":"DELETE","lineNumber":37,"oldContent":"            Optional<Technician> technicianOpt = technicianRepository.getTechnicianByUserId(userId);"},{"type":"INSERT","lineNumber":33,"content":"            // --- FIX 2: Ensure correct repository method name ---"},{"type":"INSERT","lineNumber":34,"content":"            Optional<Technician> technicianOpt = technicianRepository.findByUser_Id(userId);"},{"type":"DELETE","lineNumber":40,"oldContent":"            // Map the entity to DTO if present"},{"type":"DELETE","lineNumber":41,"oldContent":"            return technicianOpt.map(TechnicianUtility::toDTO); // Use map() on Optional"},{"type":"INSERT","lineNumber":37,"content":"            // Map the entity Optional to a DTO Optional"},{"type":"INSERT","lineNumber":38,"content":"            return technicianOpt.map(TechnicianUtility::toDTO); // This now matches the return type"},{"type":"DELETE","lineNumber":45,"oldContent":"            e.printStackTrace();"},{"type":"DELETE","lineNumber":46,"oldContent":"            // It's better to let the global exception handler manage this"},{"type":"DELETE","lineNumber":47,"oldContent":"            // Or return Optional.empty() if that's preferred over 500"},{"type":"DELETE","lineNumber":48,"oldContent":"            return Optional.empty();"},{"type":"DELETE","lineNumber":49,"oldContent":"            // throw e; // Re-throwing might still cause serialization issues higher up"},{"type":"INSERT","lineNumber":42,"content":"            e.printStackTrace(); // Log the error"},{"type":"INSERT","lineNumber":43,"content":"            return Optional.empty(); // Return empty on error"},{"type":"DELETE","lineNumber":53,"oldContent":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/TechnicianController.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/TechnicianController.java","baseContent":"package com.project.NetworkApp.controller;\n\n// package com.project.NetworkApp.controller;\n// ... imports\nimport org.springframework.web.bind.annotation.RequestParam; // Import RequestParam\n\n@RestController\n@RequestMapping(\"/technicians\")\n@RequiredArgsConstructor\npublic class TechnicianController {\n    private final TechnicianService technicianService;\n\n    @GetMapping\n    public ResponseEntity<List<Technician>> getTechnicians(\n            // Make region optional\n            @RequestParam(required = false) String region) {\n        return ResponseEntity.ok(technicianService.getTechnicians(region));\n    }\n}\n","baseTimestamp":1760888295074,"deltas":[{"timestamp":1760888302768,"changes":[{"type":"INSERT","lineNumber":4,"content":"import lombok.RequiredArgsConstructor;"},{"type":"INSERT","lineNumber":5,"content":"import org.springframework.web.bind.annotation.RequestMapping;"},{"type":"INSERT","lineNumber":7,"content":"import org.springframework.web.bind.annotation.RestController;"}]},{"timestamp":1760888305109,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.Service.TechnicianService;"},{"type":"DELETE","lineNumber":5,"oldContent":"import org.springframework.web.bind.annotation.RequestParam; // Import RequestParam"},{"type":"INSERT","lineNumber":7,"content":"import org.springframework.web.bind.annotation.RequestParam; // Import RequestParam"},{"type":"INSERT","lineNumber":8,"content":"import org.springframework.web.bind.annotation.RestController;"},{"type":"DELETE","lineNumber":9,"oldContent":"import org.springframework.web.bind.annotation.RestController;"}]},{"timestamp":1760888307933,"changes":[{"type":"INSERT","lineNumber":6,"content":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"DELETE","lineNumber":8,"oldContent":""},{"type":"INSERT","lineNumber":10,"content":""}]},{"timestamp":1760888310761,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.entity.Technician;"}]},{"timestamp":1760888314221,"changes":[{"type":"INSERT","lineNumber":12,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":13,"content":""}]},{"timestamp":1760888316843,"changes":[{"type":"INSERT","lineNumber":7,"content":"import org.springframework.http.ResponseEntity;"},{"type":"DELETE","lineNumber":13,"oldContent":"@RestController"},{"type":"INSERT","lineNumber":15,"content":"@RestController"}]},{"timestamp":1760888883826,"changes":[{"type":"DELETE","lineNumber":8,"oldContent":"import org.springframework.web.bind.annotation.GetMapping;"},{"type":"DELETE","lineNumber":9,"oldContent":"import org.springframework.web.bind.annotation.RequestMapping;"},{"type":"DELETE","lineNumber":10,"oldContent":"import org.springframework.web.bind.annotation.RequestParam; // Import RequestParam"},{"type":"DELETE","lineNumber":11,"oldContent":"import org.springframework.web.bind.annotation.RestController;"},{"type":"INSERT","lineNumber":8,"content":"import org.springframework.web.bind.annotation.*;"},{"type":"INSERT","lineNumber":14,"content":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"INSERT","lineNumber":15,"content":""}]},{"timestamp":1761034856845,"changes":[{"type":"DELETE","lineNumber":11,"oldContent":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"DELETE","lineNumber":13,"oldContent":""},{"type":"INSERT","lineNumber":14,"content":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"INSERT","lineNumber":15,"content":""},{"type":"INSERT","lineNumber":26,"content":"    @GetMapping(\"/by-user/{userId}\")"},{"type":"INSERT","lineNumber":27,"content":"    public ResponseEntity<Technician> getTechnicianByUserId(@PathVariable Integer userId) {"},{"type":"INSERT","lineNumber":28,"content":"        // Call the service method we created earlier"},{"type":"INSERT","lineNumber":29,"content":"        return technicianService.getTechnicianByUserId(userId)"},{"type":"INSERT","lineNumber":30,"content":"                // If found, return 200 OK with technician data"},{"type":"INSERT","lineNumber":31,"content":"                .map(ResponseEntity::ok)"},{"type":"INSERT","lineNumber":32,"content":"                // If not found (Optional is empty), return 404 Not Found"},{"type":"INSERT","lineNumber":33,"content":"                .orElseGet(() -> ResponseEntity.notFound().build());"},{"type":"INSERT","lineNumber":34,"content":"    }"}]},{"timestamp":1761035725485,"changes":[{"type":"DELETE","lineNumber":12,"oldContent":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"MODIFY","lineNumber":14,"content":"@CrossOrigin(\"http://localhost:5173\")","oldContent":""},{"type":"INSERT","lineNumber":15,"content":""},{"type":"DELETE","lineNumber":27,"oldContent":"}"},{"type":"MODIFY","lineNumber":29,"content":"        Optional<Technician> technicianOpt = technicianService.getTechnicianByUserId(userId);","oldContent":""},{"type":"DELETE","lineNumber":32,"oldContent":"        return technicianService.getTechnicianByUserId(userId)"},{"type":"DELETE","lineNumber":33,"oldContent":"                .orElseGet(() -> ResponseEntity.notFound().build());"},{"type":"DELETE","lineNumber":34,"oldContent":"                // If found, return 200 OK with technician data"},{"type":"DELETE","lineNumber":35,"oldContent":"                // If not found (Optional is empty), return 404 Not Found"},{"type":"DELETE","lineNumber":36,"oldContent":"                .map(ResponseEntity::ok)"},{"type":"INSERT","lineNumber":31,"content":"}"},{"type":"INSERT","lineNumber":32,"content":""}]},{"timestamp":1761035729383,"changes":[{"type":"INSERT","lineNumber":11,"content":"import java.util.Optional;"},{"type":"INSERT","lineNumber":14,"content":"@RequestMapping(\"/technicians\")"},{"type":"DELETE","lineNumber":15,"oldContent":"@RequestMapping(\"/technicians\")"},{"type":"DELETE","lineNumber":28,"oldContent":"        Optional<Technician> technicianOpt = technicianService.getTechnicianByUserId(userId);"},{"type":"MODIFY","lineNumber":30,"content":"        Optional<Technician> technicianOpt = technicianService.getTechnicianByUserId(userId);","oldContent":"}"},{"type":"INSERT","lineNumber":32,"content":"}"}]},{"timestamp":1761035732916,"changes":[{"type":"MODIFY","lineNumber":15,"content":"@CrossOrigin(\"http://localhost:5173\")","oldContent":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"INSERT","lineNumber":31,"content":""},{"type":"INSERT","lineNumber":32,"content":"        "}]},{"timestamp":1761035751820,"changes":[{"type":"INSERT","lineNumber":14,"content":"@RequestMapping(\"/technicians\")"},{"type":"DELETE","lineNumber":15,"oldContent":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"INSERT","lineNumber":32,"content":"        if (technicianOpt.isPresent()) {"},{"type":"INSERT","lineNumber":33,"content":"            return ResponseEntity.ok(technicianOpt.get()); // Return 200 OK if found"},{"type":"INSERT","lineNumber":34,"content":"        }"},{"type":"DELETE","lineNumber":33,"oldContent":"        "}]},{"timestamp":1761035757993,"changes":[{"type":"DELETE","lineNumber":33,"oldContent":"    }"},{"type":"INSERT","lineNumber":34,"content":"        }else {"},{"type":"INSERT","lineNumber":35,"content":"            // Log that the technician wasn't found for this user ID"},{"type":"INSERT","lineNumber":36,"content":"            System.err.println(\"WARN: Technician not found for user ID: \" + userId);"},{"type":"INSERT","lineNumber":37,"content":"            return ResponseEntity.notFound().build(); // Return 404 Not Found"},{"type":"INSERT","lineNumber":39,"content":"    }"}]},{"timestamp":1761036767892,"changes":[{"type":"MODIFY","lineNumber":30,"content":"        Optional<TechnicianDTO> technicianOpt = technicianService.getTechnicianByUserId(userId);","oldContent":"        Optional<Technician> technicianOpt = technicianService.getTechnicianByUserId(userId);"},{"type":"MODIFY","lineNumber":34,"content":"        }else {","oldContent":"        }else {"},{"type":"DELETE","lineNumber":36,"oldContent":"        }"},{"type":"DELETE","lineNumber":38,"oldContent":"}"},{"type":"DELETE","lineNumber":40,"oldContent":""},{"type":"INSERT","lineNumber":38,"content":"        }"},{"type":"INSERT","lineNumber":40,"content":"}"},{"type":"INSERT","lineNumber":41,"content":""}]},{"timestamp":1761036773239,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.TechnicianDTO;"},{"type":"INSERT","lineNumber":34,"content":"            return ResponseEntity.ok(technicianOpt.get()); // Return 200 OK if found"},{"type":"DELETE","lineNumber":34,"oldContent":"        }else {"},{"type":"DELETE","lineNumber":37,"oldContent":"        }"},{"type":"INSERT","lineNumber":39,"content":"        }"},{"type":"INSERT","lineNumber":40,"content":"    }"},{"type":"DELETE","lineNumber":41,"oldContent":"    }"}]},{"timestamp":1761036797895,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.project.NetworkApp.DTO.TechnicianDTO;"},{"type":"MODIFY","lineNumber":30,"content":"        Optional<Technician> technicianOpt = technicianService.getTechnicianByUserId(userId);","oldContent":"        Optional<TechnicianDTO> technicianOpt = technicianService.getTechnicianByUserId(userId);"},{"type":"MODIFY","lineNumber":34,"content":"        }else {","oldContent":"        }else {"},{"type":"MODIFY","lineNumber":40,"content":"}","oldContent":"}"}]},{"timestamp":1761036815688,"changes":[{"type":"MODIFY","lineNumber":28,"content":"    public ResponseEntity<TechnicianDTO> getTechnicianByUserId(@PathVariable Integer userId) {","oldContent":"    public ResponseEntity<Technician> getTechnicianByUserId(@PathVariable Integer userId) {"},{"type":"INSERT","lineNumber":29,"content":"        // Call the service method we created earlier"},{"type":"DELETE","lineNumber":30,"oldContent":"        Optional<TechnicianDTO> technicianOpt = technicianService.getTechnicianByUserId(userId);"},{"type":"MODIFY","lineNumber":34,"content":"        }else {","oldContent":"        }else {"},{"type":"MODIFY","lineNumber":40,"content":"}","oldContent":"}"}]},{"timestamp":1761036820335,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.TechnicianDTO;"},{"type":"INSERT","lineNumber":34,"content":"            return ResponseEntity.ok(technicianOpt.get()); // Return 200 OK if found"},{"type":"DELETE","lineNumber":34,"oldContent":"        }else {"},{"type":"INSERT","lineNumber":40,"content":"    }"},{"type":"DELETE","lineNumber":40,"oldContent":"}"}]},{"timestamp":1761036823485,"changes":[{"type":"MODIFY","lineNumber":31,"content":"        Optional<TechnicianDTO> technicianOpt = technicianService.getTechnicianByUserId(userId);","oldContent":"        Optional<Technician> technicianOpt = technicianService.getTechnicianByUserId(userId);"},{"type":"MODIFY","lineNumber":35,"content":"        }else {","oldContent":"        }else {"},{"type":"MODIFY","lineNumber":41,"content":"}","oldContent":"}"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/DeploymentTaskController.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/DeploymentTaskController.java","baseContent":"package com.project.NetworkApp.controller;\n\n// Make sure the package is scanned by Spring Boot\npackage com.project.NetworkApp.controller;\n\n// ... imports ...\nimport org.springframework.web.bind.annotation.GetMapping; // Verify this import\nimport org.springframework.web.bind.annotation.RequestMapping; // Verify this import\nimport org.springframework.web.bind.annotation.RestController; // Verify this import\n\n@RestController // <-- Is this present?\n@RequestMapping(\"/tasks\") // <-- Is this present and correct?\n@RequiredArgsConstructor\npublic class DeploymentTaskController {\n\n    private final DeploymentTaskService taskService;\n\n    @GetMapping(\"/my-tasks\") // <-- Is this present and correct?\n    public ResponseEntity<List<DeploymentTaskDTO>> getMyTasks(\n            @RequestParam Integer technicianId,\n            @RequestParam(defaultValue = \"SCHEDULED\") TaskStatus status) {\n        List<DeploymentTaskDTO> tasks = taskService.getTechnicianTasksByStatus(technicianId, status);\n        return ResponseEntity.ok(tasks);\n    }\n\n    // ... other methods like /complete ...\n}","baseTimestamp":1761032596045,"deltas":[{"timestamp":1761032610521,"changes":[{"type":"DELETE","lineNumber":3,"oldContent":"package com.project.NetworkApp.controller;"},{"type":"INSERT","lineNumber":4,"content":""}]},{"timestamp":1761032613426,"changes":[{"type":"INSERT","lineNumber":6,"content":"import lombok.RequiredArgsConstructor;"}]},{"timestamp":1761033455296,"changes":[{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.Service.DeploymentTaskService;"}]},{"timestamp":1761033458372,"changes":[{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.DTO.DeploymentTaskDTO;"}]},{"timestamp":1761033463645,"changes":[{"type":"INSERT","lineNumber":11,"content":"import org.springframework.web.bind.annotation.RequestParam;"},{"type":"INSERT","lineNumber":14,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":15,"content":""}]},{"timestamp":1761033466837,"changes":[{"type":"INSERT","lineNumber":9,"content":"import org.springframework.http.ResponseEntity;"},{"type":"DELETE","lineNumber":14,"oldContent":"@RestController // <-- Is this present?"},{"type":"MODIFY","lineNumber":17,"content":"@RestController // <-- Is this present?","oldContent":"@RequestMapping(\"/tasks\") // <-- Is this present and correct?"},{"type":"INSERT","lineNumber":18,"content":"@RequestMapping(\"/tasks\") // <-- Is this present and correct?"}]},{"timestamp":1761033469701,"changes":[{"type":"INSERT","lineNumber":8,"content":"import com.project.NetworkApp.enums.TaskStatus;"},{"type":"DELETE","lineNumber":16,"oldContent":"@RequestMapping(\"/tasks\") // <-- Is this present and correct?"},{"type":"INSERT","lineNumber":17,"content":""}]},{"timestamp":1761036942515,"changes":[{"type":"DELETE","lineNumber":11,"oldContent":"import org.springframework.web.bind.annotation.GetMapping; // Verify this import"},{"type":"DELETE","lineNumber":12,"oldContent":"import org.springframework.web.bind.annotation.RequestMapping; // Verify this import"},{"type":"DELETE","lineNumber":13,"oldContent":"import org.springframework.web.bind.annotation.RequestParam;"},{"type":"DELETE","lineNumber":14,"oldContent":"import org.springframework.web.bind.annotation.RestController; // Verify this import"},{"type":"INSERT","lineNumber":11,"content":"import org.springframework.web.bind.annotation.*;"},{"type":"INSERT","lineNumber":17,"content":"@CrossOrigin(\"http://localhost:5173\")"}]},{"timestamp":1761040531832,"changes":[{"type":"DELETE","lineNumber":14,"oldContent":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"INSERT","lineNumber":17,"content":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"INSERT","lineNumber":31,"content":"    @PostMapping(\"/{taskId}/complete\")"},{"type":"INSERT","lineNumber":32,"content":"    public ResponseEntity<Void> completeTask("},{"type":"INSERT","lineNumber":33,"content":"            @PathVariable Integer taskId, // Get task ID from the URL path"},{"type":"INSERT","lineNumber":34,"content":"            @RequestBody CompleteTaskRequestDTO completionDetails) { // Get details from request body"},{"type":"INSERT","lineNumber":35,"content":"        taskService.completeTask(taskId, completionDetails); // Call the service method"},{"type":"INSERT","lineNumber":36,"content":"        return ResponseEntity.ok().build(); // Return 200 OK on success"},{"type":"INSERT","lineNumber":37,"content":"    }"},{"type":"INSERT","lineNumber":38,"content":""}]},{"timestamp":1761040539228,"changes":[{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.DTO.CompleteTaskRequestDTO;"},{"type":"DELETE","lineNumber":16,"oldContent":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"INSERT","lineNumber":18,"content":"@CrossOrigin(\"http://localhost:5173\")"},{"type":"DELETE","lineNumber":32,"oldContent":"    // ... other methods like /complete ..."},{"type":"DELETE","lineNumber":34,"oldContent":"}"},{"type":"DELETE","lineNumber":36,"oldContent":""},{"type":"MODIFY","lineNumber":38,"content":"    }","oldContent":"    }"},{"type":"INSERT","lineNumber":39,"content":""},{"type":"INSERT","lineNumber":40,"content":"    // ... other methods like /complete ..."},{"type":"INSERT","lineNumber":41,"content":"}"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/DeploymentTaskService.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/DeploymentTaskService.java","baseContent":"package com.project.NetworkApp.Service;\n\npackage com.project.NetworkApp.service;\n\nimport com.project.NetworkApp.dto.CompleteTaskRequestDTO;\nimport com.project.NetworkApp.dto.DeploymentTaskDTO;\nimport com.project.NetworkApp.enums.TaskStatus;\nimport java.util.List;\n\npublic interface DeploymentTaskService {\n\n    /**\n     * Retrieves tasks for a specific technician filtered by status.\n     * @param technicianId The ID of the technician.\n     * @param status The desired task status (e.g., SCHEDULED).\n     * @return A list of matching task DTOs.\n     */\n    List<DeploymentTaskDTO> getTechnicianTasksByStatus(Integer technicianId, TaskStatus status);\n\n    /**\n     * Marks a task as complete, assigns assets, and updates customer status.\n     * @param taskId The ID of the task to complete.\n     * @param completionDetails DTO containing asset IDs and notes.\n     */\n    void completeTask(Integer taskId, CompleteTaskRequestDTO completionDetails);\n\n    // Add other methods later if needed (e.g., updateTaskStatusToInProgress)\n}\n","baseTimestamp":1761032727560,"deltas":[{"timestamp":1761032731421,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"package com.project.NetworkApp.service;"},{"type":"INSERT","lineNumber":3,"content":""}]},{"timestamp":1761032734918,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.CompleteTaskRequestDTO;","oldContent":"import com.project.NetworkApp.dto.CompleteTaskRequestDTO;"}]},{"timestamp":1761032740374,"changes":[{"type":"MODIFY","lineNumber":5,"content":"import com.project.NetworkApp.DTO.DeploymentTaskDTO;","oldContent":"import com.project.NetworkApp.dto.DeploymentTaskDTO;"}]},{"timestamp":1761032838773,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.project.NetworkApp.DTO.CompleteTaskRequestDTO;"},{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.","oldContent":"import com.project.NetworkApp.DTO.DeploymentTaskDTO;"},{"type":"INSERT","lineNumber":5,"content":";"}]},{"timestamp":1761032959091,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.project.NetworkApp.DTO."},{"type":"DELETE","lineNumber":5,"oldContent":"import com.project.NetworkApp.DTO.DeploymentTaskDTO;"},{"type":"INSERT","lineNumber":4,"content":""},{"type":"INSERT","lineNumber":5,"content":""}]},{"timestamp":1761032962621,"changes":[{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.DTO.DeploymentTaskDTO;"}]},{"timestamp":1761032970451,"changes":[{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.DTO.CompleteTaskRequestDTO;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/CompleteTaskRequestDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/CompleteTaskRequestDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\npackage com.project.NetworkApp.dto;\n\n/**\n * DTO for receiving details needed to complete a deployment task.\n */\npublic record CompleteTaskRequestDTO(\n        Integer ontAssetId,      // ID of the ONT Asset being assigned\n        Integer routerAssetId,   // ID of the Router Asset being assigned\n        String completionNotes   // Optional notes from the technician\n) {}","baseTimestamp":1761032847197,"deltas":[{"timestamp":1761032849276,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"package com.project.NetworkApp.dto;"},{"type":"INSERT","lineNumber":3,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/DeploymentTaskDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/DeploymentTaskDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\npackage com.project.NetworkApp.dto;\n\nimport com.project.NetworkApp.enums.TaskStatus;\nimport java.time.LocalDate;\n\n/**\n * DTO for transferring DeploymentTask data, often used for lists or summaries.\n */\npublic record DeploymentTaskDTO(\n        Integer id,              // Task ID\n        Integer customerId,      // ID of the associated customer\n        String customerName,     // Customer's name for display\n        String customerAddress,  // Customer's address for display\n        Integer technicianId,    // ID of the assigned technician\n        TaskStatus status,       // Current status of the task\n        LocalDate scheduledDate, // Date the task is scheduled for\n        String notes             // Notes related to the task\n) {}\n","baseTimestamp":1761032868235,"deltas":[{"timestamp":1761032874742,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"package com.project.NetworkApp.dto;"},{"type":"INSERT","lineNumber":3,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/DeploymentTaskUtility.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/DeploymentTaskUtility.java","baseContent":"package com.project.NetworkApp.Utility;\n\npackage com.project.NetworkApp.util;\n\nimport com.project.NetworkApp.dto.DeploymentTaskDTO;\nimport com.project.NetworkApp.entity.Customer;\nimport com.project.NetworkApp.entity.DeploymentTask;\nimport com.project.NetworkApp.entity.Technician;\n\n/**\n * Utility class to map between DeploymentTask entities and DTOs.\n */\npublic final class DeploymentTaskUtility {\n\n    /**\n     * Private constructor to prevent instantiation.\n     */\n    private DeploymentTaskUtility() {}\n\n    /**\n     * Converts a DeploymentTask entity to a DeploymentTaskDTO.\n     * Safely handles potentially null related entities (Customer, Technician).\n     * @param task The DeploymentTask entity.\n     * @return The resulting DeploymentTaskDTO.\n     */\n    public static DeploymentTaskDTO toDTO(DeploymentTask task) {\n        if (task == null) {\n            return null;\n        }\n\n        Customer customer = task.getCustomer(); // Get related customer (might be null if relationship isn't loaded or set)\n        Technician technician = task.getTechnician(); // Get related technician (might be null)\n\n        return new DeploymentTaskDTO(\n                task.getId(),\n                customer != null ? customer.getId() : null, // Safely get customer ID\n                customer != null ? customer.getName() : \"N/A\", // Safely get customer name\n                customer != null ? customer.getAddress() : \"N/A\", // Safely get customer address\n                technician != null ? technician.getId() : null, // Safely get technician ID\n                task.getStatus(),\n                task.getScheduledDate(),\n                task.getNotes()\n        );\n    }\n\n    // No toEntity method is typically needed for basic task display/completion,\n    // as tasks are usually created based on specific actions (like assignment).\n    // If you need to create/update tasks via DTO later, add a toEntity method here.\n}\n","baseTimestamp":1761032902483,"deltas":[{"timestamp":1761032917656,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"package com.project.NetworkApp.util;"},{"type":"INSERT","lineNumber":3,"content":""}]},{"timestamp":1761032925669,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.DeploymentTaskDTO;","oldContent":"import com.project.NetworkApp.dto.DeploymentTaskDTO;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/DeploymentTaskServiceImpl.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/DeploymentTaskServiceImpl.java","baseContent":"package com.project.NetworkApp.Service;\n\npackage com.project.NetworkApp.service;\n\nimport com.project.NetworkApp.dto.CompleteTaskRequestDTO;\nimport com.project.NetworkApp.dto.DeploymentTaskDTO;\nimport com.project.NetworkApp.entity.Asset;\nimport com.project.NetworkApp.entity.AssignedAssets;\nimport com.project.NetworkApp.entity.Customer;\nimport com.project.NetworkApp.entity.DeploymentTask;\nimport com.project.NetworkApp.enums.AssetStatus;\nimport com.project.NetworkApp.enums.CustomerStatus;\nimport com.project.NetworkApp.enums.TaskStatus;\nimport com.project.NetworkApp.repository.AssetRepository;\nimport com.project.NetworkApp.repository.AssignedAssetsRepository;\nimport com.project.NetworkApp.repository.CustomerRepository;\nimport com.project.NetworkApp.repository.DeploymentTaskRepository;\nimport com.project.NetworkApp.util.DeploymentTaskUtility; // Ensure you have this utility\nimport jakarta.persistence.EntityNotFoundException;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport java.time.LocalDateTime;\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n@Service\n@RequiredArgsConstructor\npublic class DeploymentTaskServiceImpl implements DeploymentTaskService {\n\n    private final DeploymentTaskRepository taskRepository;\n    private final AssetRepository assetRepository;\n    private final AssignedAssetsRepository assignedAssetsRepository;\n    private final CustomerRepository customerRepository;\n\n    @Override\n    public List<DeploymentTaskDTO> getTechnicianTasksByStatus(Integer technicianId, TaskStatus status) {\n        List<DeploymentTask> tasks = taskRepository.findByTechnicianIdAndStatus(technicianId, status);\n        // Ensure DeploymentTaskUtility exists and has the toDTO method\n        return tasks.stream().map(DeploymentTaskUtility::toDTO).collect(Collectors.toList());\n    }\n\n    @Override\n    @Transactional\n    public void completeTask(Integer taskId, CompleteTaskRequestDTO dto) {\n        // 1. Find the Task\n        DeploymentTask task = taskRepository.findById(taskId)\n                .orElseThrow(() -> new EntityNotFoundException(\"Task not found: \" + taskId));\n\n        if (task.getStatus() != TaskStatus.SCHEDULED && task.getStatus() != TaskStatus.INPROGRESS) {\n            throw new IllegalStateException(\"Task cannot be completed from its current status: \" + task.getStatus());\n        }\n\n        // 2. Find the Customer\n        Customer customer = task.getCustomer();\n        if (customer == null) throw new EntityNotFoundException(\"Customer not found for task: \" + taskId);\n\n        // 3. Find and Validate Assets\n        Asset ont = findAndValidateAsset(dto.ontAssetId(), AssetStatus.AVAILABLE);\n        Asset router = findAndValidateAsset(dto.routerAssetId(), AssetStatus.AVAILABLE);\n\n        // 4. Update Task Status & Notes\n        task.setStatus(TaskStatus.COMPLETED);\n        task.setNotes( (task.getNotes() != null ? task.getNotes() + \"\\n\" : \"\") + \"Completed: \" + (dto.completionNotes() != null ? dto.completionNotes() : \"\"));\n        taskRepository.save(task);\n\n        // 5. Update Asset Statuses & assign date/customer\n        updateAssetAssignment(ont, customer);\n        updateAssetAssignment(router, customer);\n\n        // 6. Create AssignedAssets links\n        createAssignedAssetLink(customer, ont);\n        createAssignedAssetLink(customer, router);\n\n        // 7. Update Customer Status to ACTIVE\n        customer.setStatus(CustomerStatus.ACTIVE);\n        customerRepository.save(customer);\n    }\n\n    // Helper to find and validate asset\n    private Asset findAndValidateAsset(Integer assetId, AssetStatus expectedStatus) {\n        if (assetId == null) { // Added null check\n            throw new IllegalArgumentException(\"Asset ID cannot be null for assignment.\");\n        }\n        Asset asset = assetRepository.findById(assetId)\n                .orElseThrow(() -> new EntityNotFoundException(\"Asset not found: \" + assetId));\n        if (asset.getStatus() != expectedStatus) {\n            throw new IllegalStateException(\"Asset \" + assetId + \" (\"+asset.getSerialNumber()+\") is not in the expected status: \" + expectedStatus + \", current status: \" + asset.getStatus());\n        }\n        return asset;\n    }\n\n    // Helper to update asset status and assignment details\n    private void updateAssetAssignment(Asset asset, Customer customer) {\n        asset.setStatus(AssetStatus.ASSIGNED);\n        asset.setAssignedToCustomerId(customer.getId());\n        asset.setAssignedDate(LocalDateTime.now());\n        assetRepository.save(asset);\n    }\n\n    // Helper to create the link in AssignedAssets table\n    private void createAssignedAssetLink(Customer customer, Asset asset) {\n        AssignedAssets link = new AssignedAssets();\n        link.setCustomer(customer);\n        link.setAsset(asset);\n        assignedAssetsRepository.save(link);\n    }\n}\n","baseTimestamp":1761032984119,"deltas":[{"timestamp":1761032990025,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.DeploymentTaskDTO;"}]},{"timestamp":1761032999487,"changes":[{"type":"MODIFY","lineNumber":14,"content":"import com.project.NetworkApp.Repository.AssetRepository;","oldContent":"import com.project.NetworkApp.repository.AssetRepository;"}]},{"timestamp":1761033001586,"changes":[{"type":"MODIFY","lineNumber":15,"content":"import com.project.NetworkApp.Repository.AssignedAssetsRepository;","oldContent":"import com.project.NetworkApp.repository.AssignedAssetsRepository;"}]},{"timestamp":1761033004834,"changes":[{"type":"MODIFY","lineNumber":16,"content":"import com.project.NetworkApp.Repository.CustomerRepository;","oldContent":"import com.project.NetworkApp.repository.CustomerRepository;"}]},{"timestamp":1761033008155,"changes":[{"type":"MODIFY","lineNumber":17,"content":"import com.project.NetworkApp.Repository.DeploymentTaskRepository;","oldContent":"import com.project.NetworkApp.repository.DeploymentTaskRepository;"}]},{"timestamp":1761033014263,"changes":[{"type":"MODIFY","lineNumber":18,"content":"import com.project.NetworkApp.Utility.DeploymentTaskUtility; // Ensure you have this utility","oldContent":"import com.project.NetworkApp.util.DeploymentTaskUtility; // Ensure you have this utility"}]},{"timestamp":1761033019310,"changes":[{"type":"MODIFY","lineNumber":5,"content":"import com.project.NetworkApp.DTO.CompleteTaskRequestDTO;","oldContent":"import com.project.NetworkApp.dto.CompleteTaskRequestDTO;"}]},{"timestamp":1761033022294,"changes":[{"type":"MODIFY","lineNumber":6,"content":"import com.project.NetworkApp.DTO.DeploymentTaskDTO;","oldContent":"import com.project.NetworkApp.dto.DeploymentTaskDTO;"}]},{"timestamp":1761033024818,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"package com.project.NetworkApp.service;"},{"type":"INSERT","lineNumber":3,"content":""}]},{"timestamp":1761033355882,"changes":[{"type":"MODIFY","lineNumber":39,"content":"        List<DeploymentTask> findByTechnician_IdAndStatus(Integer technicianId, TaskStatus status);","oldContent":"        List<DeploymentTask> tasks = taskRepository.findByTechnicianIdAndStatus(technicianId, status);"}]},{"timestamp":1761033389152,"changes":[{"type":"MODIFY","lineNumber":39,"content":"        List<DeploymentTask> findByTechnician_IdAndStatus( technicianId, TaskStatus status);","oldContent":"        List<DeploymentTask> findByTechnician_IdAndStatus(Integer technicianId, TaskStatus status);"}]},{"timestamp":1761033391698,"changes":[{"type":"MODIFY","lineNumber":39,"content":"        List<DeploymentTask> findByTechnician_IdAndStatus( technicianId,  status);","oldContent":"        List<DeploymentTask> findByTechnician_IdAndStatus( technicianId, TaskStatus status);"}]},{"timestamp":1761033394987,"changes":[{"type":"MODIFY","lineNumber":39,"content":"        List<DeploymentTask> findByTechnician_IdAndStatus(technicianId,  status);","oldContent":"        List<DeploymentTask> findByTechnician_IdAndStatus( technicianId,  status);"}]},{"timestamp":1761033402960,"changes":[{"type":"MODIFY","lineNumber":39,"content":"        List<DeploymentTask> tasks = taskRepository.findByTechnicianIdAndStatus(technicianId, status);","oldContent":"        List<DeploymentTask> findByTechnician_IdAndStatus(technicianId,  status);"}]},{"timestamp":1761040117905,"changes":[{"type":"MODIFY","lineNumber":45,"content":"    @Transactional // Ensures all steps succeed or fail together","oldContent":"    @Transactional"},{"type":"MODIFY","lineNumber":47,"content":"        // 1. Find the Task & associated Customer","oldContent":"        // 1. Find the Task"},{"type":"INSERT","lineNumber":50,"content":"        Customer customer = task.getCustomer();"},{"type":"INSERT","lineNumber":51,"content":"        if (customer == null) throw new EntityNotFoundException(\"Customer not found for task: \" + taskId);"},{"type":"INSERT","lineNumber":53,"content":"        // Validate task status (e.g., must be SCHEDULED or INPROGRESS)"},{"type":"DELETE","lineNumber":55,"oldContent":"        // 2. Find the Customer"},{"type":"DELETE","lineNumber":56,"oldContent":"        Customer customer = task.getCustomer();"},{"type":"DELETE","lineNumber":57,"oldContent":"        if (customer == null) throw new EntityNotFoundException(\"Customer not found for task: \" + taskId);"},{"type":"DELETE","lineNumber":58,"oldContent":""},{"type":"MODIFY","lineNumber":58,"content":"        // 2. Find and Validate Assets (ONT and Router must be AVAILABLE)","oldContent":"        // 3. Find and Validate Assets"},{"type":"MODIFY","lineNumber":62,"content":"        // --- Database Updates ---","oldContent":"        // 4. Update Task Status & Notes"},{"type":"INSERT","lineNumber":63,"content":""},{"type":"INSERT","lineNumber":64,"content":"        // 3. Update Task Status & Notes"},{"type":"MODIFY","lineNumber":67,"content":"        taskRepository.save(task); // Update 'deployment_tasks' table","oldContent":"        taskRepository.save(task);"},{"type":"DELETE","lineNumber":68,"oldContent":"        // 5. Update Asset Statuses & assign date/customer"},{"type":"DELETE","lineNumber":69,"oldContent":"        updateAssetAssignment(ont, customer);"},{"type":"MODIFY","lineNumber":69,"content":"        // 4. Update Asset Statuses & assign date/customer","oldContent":"        updateAssetAssignment(router, customer);"},{"type":"INSERT","lineNumber":70,"content":"        updateAssetAssignment(ont, customer);    // Updates 'assets' table for ONT"},{"type":"INSERT","lineNumber":71,"content":"        updateAssetAssignment(router, customer); // Updates 'assets' table for Router"},{"type":"DELETE","lineNumber":72,"oldContent":"        // 6. Create AssignedAssets links"},{"type":"DELETE","lineNumber":73,"oldContent":"        createAssignedAssetLink(customer, ont);"},{"type":"MODIFY","lineNumber":73,"content":"        // 5. Create AssignedAssets links","oldContent":"        createAssignedAssetLink(customer, router);"},{"type":"INSERT","lineNumber":74,"content":"        createAssignedAssetLink(customer, ont);    // Creates row in 'assigned_assets' table"},{"type":"INSERT","lineNumber":75,"content":"        createAssignedAssetLink(customer, router); // Creates row in 'assigned_assets' table"},{"type":"MODIFY","lineNumber":77,"content":"        // 6. Update Customer Status to ACTIVE","oldContent":"        // 7. Update Customer Status to ACTIVE"},{"type":"DELETE","lineNumber":78,"oldContent":"        customerRepository.save(customer);"},{"type":"MODIFY","lineNumber":79,"content":"        customerRepository.save(customer); // Updates 'customers' table","oldContent":"    }"},{"type":"INSERT","lineNumber":81,"content":"        // --- End Database Updates ---"},{"type":"INSERT","lineNumber":82,"content":"    }"}]},{"timestamp":1761040161798,"changes":[{"type":"MODIFY","lineNumber":52,"content":"","oldContent":""},{"type":"INSERT","lineNumber":53,"content":"        // Validate task status (e.g., must be SCHEDULED or INPROGRESS)"},{"type":"DELETE","lineNumber":55,"oldContent":"        // Validate task status (e.g., must be SCHEDULED or INPROGRESS)"},{"type":"INSERT","lineNumber":61,"content":""},{"type":"DELETE","lineNumber":63,"oldContent":"        // 4. Update Task Status & Notes"},{"type":"DELETE","lineNumber":67,"oldContent":"        taskRepository.save(task);"},{"type":"INSERT","lineNumber":68,"content":""},{"type":"MODIFY","lineNumber":70,"content":"        updateAssetAssignment(ont, customer);    // Updates 'assets' table for ONT","oldContent":"        updateAssetAssignment(router, customer);"},{"type":"MODIFY","lineNumber":74,"content":"        createAssignedAssetLink(customer, ont);    // Creates row in 'assigned_assets' table","oldContent":"        createAssignedAssetLink(customer, router);"},{"type":"MODIFY","lineNumber":78,"content":"        customer.setStatus(CustomerStatus.ACTIVE);","oldContent":"        // 7. Update Customer Status to ACTIVE"},{"type":"MODIFY","lineNumber":83,"content":"    // Helper to find and validate asset","oldContent":"    // Helper to find and validate asset"},{"type":"MODIFY","lineNumber":109,"content":"        // assignedOn is usually set automatically by @CreationTimestamp in AssignedAssets entity","oldContent":"        assignedAssetsRepository.save(link);"},{"type":"INSERT","lineNumber":110,"content":"        assignedAssetsRepository.save(link); // Saves new row to 'assigned_assets' table"}]},{"timestamp":1761040169728,"changes":[{"type":"INSERT","lineNumber":51,"content":"        if (customer == null) throw new EntityNotFoundException(\"Customer not found for task: \" + taskId);"},{"type":"DELETE","lineNumber":52,"oldContent":""},{"type":"MODIFY","lineNumber":68,"content":"","oldContent":""},{"type":"MODIFY","lineNumber":77,"content":"        // 6. Update Customer Status to ACTIVE","oldContent":"        // 7. Update Customer Status to ACTIVE"},{"type":"INSERT","lineNumber":82,"content":"    }"},{"type":"DELETE","lineNumber":83,"oldContent":"    // Helper to find and validate asset"},{"type":"MODIFY","lineNumber":101,"content":"        assetRepository.save(asset); // Saves changes to the 'assets' table","oldContent":"        assetRepository.save(asset);"},{"type":"DELETE","lineNumber":103,"oldContent":""}]},{"timestamp":1761040187484,"changes":[{"type":"INSERT","lineNumber":67,"content":"        taskRepository.save(task); // Update 'deployment_tasks' table"},{"type":"DELETE","lineNumber":68,"oldContent":""},{"type":"INSERT","lineNumber":84,"content":"    // Helper to find and validate asset"},{"type":"MODIFY","lineNumber":86,"content":"        if (assetId == null) {","oldContent":"        if (assetId == null) { // Added null check"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/AssignedAssetsRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/AssignedAssetsRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\npackage com.project.NetworkApp.repository;\n\nimport com.project.NetworkApp.entity.AssignedAssets;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n/**\n * Repository interface for the AssignedAssets join table entity.\n * Provides standard CRUD operations.\n */\n@Repository\npublic interface AssignedAssetsRepository extends JpaRepository<AssignedAssets, Integer> {\n    // You can add custom query methods here later if needed, for example:\n    // List<AssignedAssets> findByCustomerId(Integer customerId);\n    // List<AssignedAssets> findByAssetId(Integer assetId);\n}\n","baseTimestamp":1761033160636,"deltas":[{"timestamp":1761033165344,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"package com.project.NetworkApp.repository;"},{"type":"INSERT","lineNumber":3,"content":""}]},{"timestamp":1761042351301,"changes":[{"type":"INSERT","lineNumber":17,"content":"    List<AssignedAssets> findByCustomer_Id(Integer customerId);"}]},{"timestamp":1761042355706,"changes":[{"type":"INSERT","lineNumber":8,"content":"import java.util.List;"},{"type":"INSERT","lineNumber":9,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/TechnicianDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/TechnicianDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\npackage com.project.NetworkApp.dto;\n\n// DTO for returning Technician information\npublic record TechnicianDTO(\n        Integer id,\n        String name,\n        String contact,\n        String region,\n        Integer userId // Include the user ID from the associated User\n) {}","baseTimestamp":1761036186124,"deltas":[{"timestamp":1761036189033,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"package com.project.NetworkApp.dto;"},{"type":"INSERT","lineNumber":3,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/TechnicianDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/TechnicianDTO.java","baseContent":"package com.project.NetworkApp.Utility;\n\npackage com.project.NetworkApp.util;\n\nimport com.project.NetworkApp.dto.TechnicianDTO;\nimport com.project.NetworkApp.entity.Technician;\nimport com.project.NetworkApp.entity.User; // Import User\n\npublic final class TechnicianUtility {\n\n    private TechnicianUtility() {}\n\n    public static TechnicianDTO toDTO(Technician technician) {\n        if (technician == null) {\n            return null;\n        }\n        User user = technician.getUser(); // Get the associated User object\n        return new TechnicianDTO(\n                technician.getId(),\n                technician.getName(),\n                technician.getContact(),\n                technician.getRegion(),\n                user != null ? user.getId() : null // Safely get the user's ID\n        );\n    }\n\n    // No toEntity needed for this specific use case yet\n}\n","baseTimestamp":1761036208119,"deltas":[{"timestamp":1761036213129,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.TechnicianDTO;","oldContent":"import com.project.NetworkApp.dto.TechnicianDTO;"}]},{"timestamp":1761036215850,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"package com.project.NetworkApp.util;"},{"type":"INSERT","lineNumber":3,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/config/WebConfig.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/config/WebConfig.java","baseContent":"package com.project.NetworkApp.config;\n\npackage com.project.NetworkApp.config; // Adjust package name as needed\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.CorsRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class WebConfig {\n\n    @Bean\n    public WebMvcConfigurer corsConfigurer() {\n        return new WebMvcConfigurer() {\n            @Override\n            public void addCorsMappings(CorsRegistry registry) {\n                registry.addMapping(\"/**\") // Allow CORS for all endpoints\n                        .allowedOrigins(\"http://localhost:5173\") // Your frontend origin\n                        .allowedMethods(\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\") // Allowed HTTP methods\n                        .allowedHeaders(\"*\") // Allow all headers\n                        .allowCredentials(true); // Allow cookies if needed\n            }\n        };\n    }\n}","baseTimestamp":1761040385081,"deltas":[{"timestamp":1761040389501,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// Adjust package name as needed","oldContent":"package com.project.NetworkApp.config; // Adjust package name as needed"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/AssignedAssetsResponseDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/AssignedAssetsResponseDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\nimport com.project.NetworkApp.enums.AssetType; // Import AssetType\n\n// DTO to return details about an asset assigned to a customer\npublic record AssignedAssetsResponseDTO(\n        Integer assignedAssetId, // ID of the link in assigned_assets table\n        Integer assetId,         // ID of the actual Asset\n        String serialNumber,     // Asset's serial number\n        String model,            // Asset's model\n        AssetType assetType      // Type (ONT, ROUTER)\n) {}","baseTimestamp":1761042008441},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/AssignedAssetsUtility.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/AssignedAssetsUtility.java","baseContent":"package com.project.NetworkApp.Utility;\n\npackage com.project.NetworkApp.util;\n\nimport com.project.NetworkApp.dto.AssignedAssetsResponseDTO;\nimport com.project.NetworkApp.entity.Asset;\nimport com.project.NetworkApp.entity.AssignedAssets;\n\npublic final class AssignedAssetsUtility {\n    private AssignedAssetsUtility() {}\n\n    public static AssignedAssetsResponseDTO toDTO(AssignedAssets assignedAsset) {\n        if (assignedAsset == null) return null;\n        Asset asset = assignedAsset.getAsset(); // Get the related Asset\n\n        return new AssignedAssetsResponseDTO(\n                assignedAsset.getId(),\n                asset != null ? asset.getId() : null,\n                asset != null ? asset.getSerialNumber() : \"N/A\",\n                asset != null ? asset.getModel() : \"N/A\",\n                asset != null ? asset.getAssetType() : null\n        );\n    }\n}","baseTimestamp":1761042145017,"deltas":[{"timestamp":1761042154895,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.DTO.AssignedAssetsResponseDTO;","oldContent":"import com.project.NetworkApp.dto.AssignedAssetsResponseDTO;"}]},{"timestamp":1761042159675,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"package com.project.NetworkApp.util;"},{"type":"DELETE","lineNumber":3,"oldContent":""},{"type":"INSERT","lineNumber":2,"content":"p"},{"type":"INSERT","lineNumber":3,"content":"ackage com.project.NetworkApp.util;"}]},{"timestamp":1761042162344,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"p"},{"type":"DELETE","lineNumber":3,"oldContent":"ackage com.project.NetworkApp.util;"},{"type":"INSERT","lineNumber":2,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssignedAssetsService.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssignedAssetsService.java","baseContent":"package com.project.NetworkApp.Service;\n\nimport com.project.NetworkApp.dto.AssignedAssetsResponseDTO;\nimport java.util.List;\npublic interface AssignedAssetsService {\n    List<AssignedAssetsResponseDTO> getAssetsAssignedToCustomer(Integer customerId);\n}","baseTimestamp":1761042242859,"deltas":[{"timestamp":1761042247499,"changes":[{"type":"MODIFY","lineNumber":2,"content":"import com.project.NetworkApp.DTO.AssignedAssetsResponseDTO;","oldContent":"import com.project.NetworkApp.dto.AssignedAssetsResponseDTO;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssignedAssetsServiceImpl.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/AssignedAssetsServiceImpl.java","baseContent":"package com.project.NetworkApp.Service;\n\nimport com.project.NetworkApp.dto.AssignedAssetsResponseDTO;\nimport com.project.NetworkApp.entity.AssignedAssets;\nimport com.project.NetworkApp.repository.AssignedAssetsRepository;\nimport com.project.NetworkApp.util.AssignedAssetsUtility; // Import utility\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Service;\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n@Service\n@RequiredArgsConstructor\npublic class AssignedAssetsServiceImpl implements AssignedAssetsService {\n    private final AssignedAssetsRepository assignedAssetsRepository;\n\n    @Override\n    public List<AssignedAssetsResponseDTO> getAssetsAssignedToCustomer(Integer customerId) {\n        // Find links by customer ID (Need to add this method to the repository)\n        List<AssignedAssets> assignments = assignedAssetsRepository.findByCustomerId(customerId);\n        return assignments.stream()\n                .map(AssignedAssetsUtility::toDTO)\n                .collect(Collectors.toList());\n    }\n}\n","baseTimestamp":1761042320668,"deltas":[{"timestamp":1761042366275,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.Repository.AssignedAssetsRepository;","oldContent":"import com.project.NetworkApp.repository.AssignedAssetsRepository;"}]},{"timestamp":1761042374350,"changes":[{"type":"MODIFY","lineNumber":2,"content":"import com.project.NetworkApp.DTO.AssignedAssetsResponseDTO;","oldContent":"import com.project.NetworkApp.dto.AssignedAssetsResponseDTO;"}]},{"timestamp":1761042378903,"changes":[{"type":"MODIFY","lineNumber":5,"content":"import com.project.NetworkApp.Utility.AssignedAssetsUtility; // Import utility","oldContent":"import com.project.NetworkApp.util.AssignedAssetsUtility; // Import utility"}]},{"timestamp":1761042431217,"changes":[{"type":"MODIFY","lineNumber":19,"content":"        List<AssignedAssets> assignments = assignedAssetsRepository.findByCustomer_Id(customerId);","oldContent":"        List<AssignedAssets> assignments = assignedAssetsRepository.findByCustomerId(customerId);"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/AssignedAssetsController.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/controller/AssignedAssetsController.java","baseContent":"package com.project.NetworkApp.controller;\n\npackage com.project.NetworkApp.controller;\nimport com.project.NetworkApp.dto.AssignedAssetsResponseDTO;\nimport com.project.NetworkApp.service.AssignedAssetsService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/assigned-assets\")\n@RequiredArgsConstructor\npublic class AssignedAssetsController {\n    private final AssignedAssetsService assignedAssetsService;\n\n    @GetMapping(\"/by-customer/{customerId}\")\n    public ResponseEntity<List<AssignedAssetsResponseDTO>> getAssignedAssets(\n            @PathVariable Integer customerId) {\n        return ResponseEntity.ok(assignedAssetsService.getAssetsAssignedToCustomer(customerId));\n    }\n}","baseTimestamp":1761042509300,"deltas":[{"timestamp":1761042522373,"changes":[{"type":"MODIFY","lineNumber":4,"content":"import com.project.NetworkApp.Service.AssignedAssetsService;","oldContent":"import com.project.NetworkApp.service.AssignedAssetsService;"}]},{"timestamp":1761042526184,"changes":[{"type":"MODIFY","lineNumber":3,"content":"import com.project.NetworkApp.DTO.AssignedAssetsResponseDTO;","oldContent":"import com.project.NetworkApp.dto.AssignedAssetsResponseDTO;"}]},{"timestamp":1761042529791,"changes":[{"type":"MODIFY","lineNumber":2,"content":"","oldContent":"package com.project.NetworkApp.controller;"}]},{"timestamp":1761045782875,"changes":[{"type":"INSERT","lineNumber":12,"content":"@CrossOrigin(\"http://localhost:5173\")"}]}]}}}