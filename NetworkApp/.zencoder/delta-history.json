{"snapshots":{"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/pom.xml":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/pom.xml","baseContent":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\t xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>3.2.5</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\t<groupId>com.prodapt</groupId>\n\t<artifactId>FilmRental</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<name>FilmRental</name>\n\t<description>Demo project for Spring Boot</description>\n\t<url/>\n\t<licenses>\n\t\t<license/>\n\t</licenses>\n\t<developers>\n\t\t<developer/>\n\t</developers>\n\t<scm>\n\t\t<connection/>\n\t\t<developerConnection/>\n\t\t<tag/>\n\t\t<url/>\n\t</scm>\n\t<properties>\n\t\t<java.version>17</java.version>\n\t</properties>\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t\t<optional>true</optional>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.mysql</groupId>\n\t\t\t<artifactId>mysql-connector-j</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t<artifactId>lombok</artifactId>\n\t\t\t<optional>true</optional>\n\t\t</dependency>\n\t\t<!-- <dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-tomcat</artifactId>\n\t\t\t<scope>provided</scope>\n\t\t</dependency> -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.fasterxml.jackson.dataformat</groupId>\n\t\t\t<artifactId>jackson-dataformat-xml</artifactId>\n\t\t</dependency>\n\n\t\t<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui -->\n\t\t<dependency>\n\t\t\t<groupId>org.springdoc</groupId>\n\t\t\t<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\n\t\t\t<version>2.5.0</version>\n\t\t</dependency>\n\n\n\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<annotationProcessorPaths>\n\t\t\t\t\t\t<path>\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n\t\t\t\t\t\t\t<version>1.18.34</version>\n\t\t\t\t\t\t</path>\n\t\t\t\t\t</annotationProcessorPaths>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<excludes>\n\t\t\t\t\t\t<exclude>\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n\t\t\t\t\t\t</exclude>\n\t\t\t\t\t</excludes>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n</project>\n\n","baseTimestamp":1760685404996,"deltas":[{"timestamp":1760685412559,"changes":[{"type":"MODIFY","lineNumber":10,"content":"\t<groupId>com.project</groupId>","oldContent":"\t<groupId>com.prodapt</groupId>"}]},{"timestamp":1760685421503,"changes":[{"type":"MODIFY","lineNumber":11,"content":"\t<artifactId>NetworkApp</artifactId>","oldContent":"\t<artifactId>FilmRental</artifactId>"}]},{"timestamp":1760685425461,"changes":[{"type":"MODIFY","lineNumber":13,"content":"\t<name>NetworkApp</name>","oldContent":"\t<name>FilmRental</name>"}]},{"timestamp":1760690744737,"changes":[{"type":"MODIFY","lineNumber":11,"content":"\t<artifactId>NetworkApp_Backend</artifactId>","oldContent":"\t<artifactId>NetworkApp</artifactId>"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/resources/application.properties":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/resources/application.properties","baseContent":"spring.application.name=NetworkApp\nspring.datasource.url=jdbc:mysql://localhost:3306/flight?createDatabaseIfNotExist=true\nspring.datasource.username=root\nspring.datasource.password=root\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect\nspring.jpa.hibernate.ddl-auto=update\nspring.jpa.show-sql=true\n","baseTimestamp":1760685461658,"deltas":[{"timestamp":1760685471395,"changes":[{"type":"MODIFY","lineNumber":1,"content":"spring.datasource.url=jdbc:mysql://localhost:3306/NetworkApp?createDatabaseIfNotExist=true","oldContent":"spring.datasource.url=jdbc:mysql://localhost:3306/flight?createDatabaseIfNotExist=true"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/ConnectionType.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/ConnectionType.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum ConnectionType {\n    WIRED,\n    WIRELESS\n}","baseTimestamp":1760685625386},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/CustomerStatus.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/CustomerStatus.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum CustomerStatus {\n    ACTIVE,\n    INACTIVE,\n    PENDING\n}","baseTimestamp":1760685643575},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/AssetType.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/AssetType.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum AssetType {\n    ONT,\n    ROUTER,\n    SWITCH,\n    CPE,\n    FIBERROLL\n}","baseTimestamp":1760685663390},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/AssetStatus.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/AssetStatus.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum AssetStatus {\n    AVAILABLE,\n    ASSIGNED,\n    FAULTY,\n    RETIRED\n}","baseTimestamp":1760685690288},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/FibreLineStatus.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/FibreLineStatus.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum FiberLineStatus {\n    ACTIVE,\n    DISCONNECTED\n}\n","baseTimestamp":1760685709087},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/TaskStatus.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/TaskStatus.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum TaskStatus {\n    SCHEDULED,\n    INPROGRESS,\n    COMPLETED,\n    FAILED\n}","baseTimestamp":1760685733920},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/UserRole.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/enums/UserRole.java","baseContent":"package com.project.NetworkApp.enums;\n\npublic enum UserRole {\n    PLANNER,\n    TECHNICIAN,\n    ADMIN,\n    SUPPORTAGENT\n}","baseTimestamp":1760688822567},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Headend.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Headend.java","baseContent":"package com.project.NetworkApp.entity;\n\nv","baseTimestamp":1760688856583,"deltas":[{"timestamp":1760688858890,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.model;","oldContent":"v"},{"type":"INSERT","lineNumber":3,"content":""},{"type":"INSERT","lineNumber":4,"content":"import jakarta.persistence.*;"},{"type":"INSERT","lineNumber":5,"content":"import lombok.AllArgsConstructor;"},{"type":"INSERT","lineNumber":6,"content":"import lombok.Getter;"},{"type":"INSERT","lineNumber":7,"content":"import lombok.NoArgsConstructor;"},{"type":"INSERT","lineNumber":8,"content":"import lombok.Setter;"},{"type":"INSERT","lineNumber":9,"content":"import java.util.Set;"},{"type":"INSERT","lineNumber":10,"content":""},{"type":"INSERT","lineNumber":11,"content":"@Entity"},{"type":"INSERT","lineNumber":12,"content":"@Table(name = \"headends\")"},{"type":"INSERT","lineNumber":13,"content":"@Getter"},{"type":"INSERT","lineNumber":14,"content":"@Setter"},{"type":"INSERT","lineNumber":15,"content":"@NoArgsConstructor"},{"type":"INSERT","lineNumber":16,"content":"@AllArgsConstructor"},{"type":"INSERT","lineNumber":17,"content":"public class Headend {"},{"type":"INSERT","lineNumber":18,"content":""},{"type":"INSERT","lineNumber":19,"content":"    @Id"},{"type":"INSERT","lineNumber":20,"content":"    @GeneratedValue(strategy = GenerationType.IDENTITY)"},{"type":"INSERT","lineNumber":21,"content":"    @Column(name = \"headend_id\")"},{"type":"INSERT","lineNumber":22,"content":"    private Integer id;"},{"type":"INSERT","lineNumber":23,"content":""},{"type":"INSERT","lineNumber":24,"content":"    private String name;"},{"type":"INSERT","lineNumber":25,"content":"    private String location;"},{"type":"INSERT","lineNumber":26,"content":""},{"type":"INSERT","lineNumber":27,"content":"    // A Headend feeds many FDHs"},{"type":"INSERT","lineNumber":28,"content":"    @OneToMany(mappedBy = \"headend\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)"},{"type":"INSERT","lineNumber":29,"content":"    private Set<Fdh> fdhs;"},{"type":"INSERT","lineNumber":30,"content":"}"}]},{"timestamp":1760689009534,"changes":[{"type":"MODIFY","lineNumber":4,"content":"// package com.example.inventory.entity;","oldContent":"}"},{"type":"INSERT","lineNumber":5,"content":""},{"type":"DELETE","lineNumber":6,"oldContent":"    private Set<Fdh> fdhs;"},{"type":"DELETE","lineNumber":8,"oldContent":"    @OneToMany(mappedBy = \"headend\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)"},{"type":"DELETE","lineNumber":10,"oldContent":"    // A Headend feeds many FDHs"},{"type":"DELETE","lineNumber":12,"oldContent":""},{"type":"DELETE","lineNumber":14,"oldContent":"    private String location;"},{"type":"DELETE","lineNumber":16,"oldContent":"    private String name;"},{"type":"DELETE","lineNumber":18,"oldContent":""},{"type":"DELETE","lineNumber":20,"oldContent":"    private Integer id;"},{"type":"DELETE","lineNumber":22,"oldContent":"    @Column(name = \"headend_id\")"},{"type":"DELETE","lineNumber":24,"oldContent":"    @GeneratedValue(strategy = GenerationType.IDENTITY)"},{"type":"DELETE","lineNumber":26,"oldContent":"    @Id"},{"type":"DELETE","lineNumber":28,"oldContent":""},{"type":"INSERT","lineNumber":20,"content":""},{"type":"INSERT","lineNumber":21,"content":"    @Id"},{"type":"INSERT","lineNumber":22,"content":"    @GeneratedValue(strategy = GenerationType.IDENTITY)"},{"type":"INSERT","lineNumber":23,"content":"    @Column(name = \"headend_id\")"},{"type":"INSERT","lineNumber":24,"content":"    private Integer id;"},{"type":"INSERT","lineNumber":25,"content":""},{"type":"INSERT","lineNumber":26,"content":"    private String name;"},{"type":"INSERT","lineNumber":27,"content":"    private String location;"},{"type":"INSERT","lineNumber":28,"content":""},{"type":"INSERT","lineNumber":29,"content":"    @OneToMany(mappedBy = \"headend\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)"},{"type":"INSERT","lineNumber":30,"content":"    private Set<Fdh> fdhs;"},{"type":"INSERT","lineNumber":31,"content":"}"}]},{"timestamp":1760689262550,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.model;"},{"type":"DELETE","lineNumber":4,"oldContent":"// package com.example.inventory.entity;"},{"type":"INSERT","lineNumber":12,"content":"@Table(name = \"headends\")"},{"type":"INSERT","lineNumber":13,"content":"@Getter"},{"type":"INSERT","lineNumber":14,"content":"@Setter"},{"type":"INSERT","lineNumber":15,"content":"@NoArgsConstructor"},{"type":"INSERT","lineNumber":16,"content":"@AllArgsConstructor"},{"type":"INSERT","lineNumber":17,"content":"public class Headend {"},{"type":"DELETE","lineNumber":16,"oldContent":"@Table(name = \"headends\")"},{"type":"DELETE","lineNumber":19,"oldContent":"@Getter"},{"type":"DELETE","lineNumber":22,"oldContent":"@Setter"},{"type":"DELETE","lineNumber":25,"oldContent":"@NoArgsConstructor"},{"type":"DELETE","lineNumber":28,"oldContent":"@AllArgsConstructor"},{"type":"DELETE","lineNumber":30,"oldContent":"public class Headend {"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Fdh.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Fdh.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.util.Set;\n\n@Entity\n@Table(name = \"fdh\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Fdh {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"fdh_id\")\n    private Integer id;\n\n    private String name;\n    private String location;\n    private String region;\n    private int maxPorts;\n\n    // Many FDHs belong to one Headend\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"headend_id\") // This matches your SQL\n    private Headend headend;\n\n    // One FDH has many Splitters\n    @OneToMany(mappedBy = \"fdh\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)\n    private Set<Splitter> splitters;\n}","baseTimestamp":1760688876428,"deltas":[{"timestamp":1760689021326,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"DELETE","lineNumber":29,"oldContent":"    // Many FDHs belong to one Headend"},{"type":"MODIFY","lineNumber":30,"content":"    @JoinColumn(name = \"headend_id\")","oldContent":"    @JoinColumn(name = \"headend_id\") // This matches your SQL"},{"type":"DELETE","lineNumber":34,"oldContent":"    // One FDH has many Splitters"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Splitter.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Splitter.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.util.Set;\n\n@Entity\n@Table(name = \"splitters\") // I'll pluralize \"Splitter\" to follow convention\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Splitter {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"splitter_id\")\n    private Integer id;\n\n    private String model;\n    private int portCapacity;\n    private int usedPorts;\n    private String location;\n\n    // Many Splitters belong to one FDH\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"fdh_id\") // This matches your SQL\n    private Fdh fdh;\n\n    // One Splitter serves many Customers\n    @OneToMany(mappedBy = \"splitter\", fetch = FetchType.LAZY)\n    private Set<Customer> customers;\n\n    // One Splitter is the source for many Fiber Drop Lines\n    @OneToMany(mappedBy = \"splitter\", fetch = FetchType.LAZY)\n    private Set<FiberDropLine> fiberDropLines;\n}","baseTimestamp":1760688891459,"deltas":[{"timestamp":1760689033415,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"MODIFY","lineNumber":12,"content":"@Table(name = \"splitters\")","oldContent":"@Table(name = \"splitters\") // I'll pluralize \"Splitter\" to follow convention"},{"type":"DELETE","lineNumber":29,"oldContent":"    // Many Splitters belong to one FDH"},{"type":"MODIFY","lineNumber":30,"content":"    @JoinColumn(name = \"fdh_id\")","oldContent":"    @JoinColumn(name = \"fdh_id\") // This matches your SQL"},{"type":"DELETE","lineNumber":34,"oldContent":"    // One Splitter serves many Customers"},{"type":"DELETE","lineNumber":38,"oldContent":"    // One Splitter is the source for many Fiber Drop Lines"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Customer.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Customer.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport com.example.inventory.model.enums.ConnectionType;\nimport com.example.inventory.model.enums.CustomerStatus;\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport org.hibernate.annotations.CreationTimestamp;\nimport java.time.LocalDateTime;\nimport java.util.Set;\n\n@Entity\n@Table(name = \"customers\") // Pluralized\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Customer {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"customer_id\")\n    private Integer id;\n\n    private String name;\n\n    @Column(columnDefinition = \"TEXT\")\n    private String address;\n\n    private String neighborhood;\n    private String plan;\n\n    @Enumerated(EnumType.STRING)\n    private ConnectionType connectionType;\n\n    @Enumerated(EnumType.STRING)\n    private CustomerStatus status;\n\n    @Column(name = \"assigned_port\")\n    private int assignedPort;\n\n    @CreationTimestamp // Automatically sets the time when created\n    @Column(updatable = false)\n    private LocalDateTime createdAt;\n\n    // Many Customers are connected to one Splitter\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"splitter_id\") // This matches your SQL\n    private Splitter splitter;\n\n    // One Customer has many AssignedAssets (the join table)\n    @OneToMany(mappedBy = \"customer\", cascade = CascadeType.ALL, orphanRemoval = true)\n    private Set<AssignedAssets> assignedAssets;\n\n    // One Customer has one Fiber Drop Line\n    @OneToOne(mappedBy = \"customer\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)\n    private FiberDropLine fiberDropLine;\n\n    // One Customer can have many Deployment Tasks\n    @OneToMany(mappedBy = \"customer\", fetch = FetchType.LAZY)\n    private Set<DeploymentTask> deploymentTasks;\n}","baseTimestamp":1760688905904,"deltas":[{"timestamp":1760689049790,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.model.enums.ConnectionType;"},{"type":"MODIFY","lineNumber":4,"content":"// package com.example.inventory.entity;","oldContent":"import com.example.inventory.model.enums.CustomerStatus;"},{"type":"INSERT","lineNumber":5,"content":""},{"type":"INSERT","lineNumber":6,"content":"import com.example.inventory.enums.ConnectionType;"},{"type":"INSERT","lineNumber":7,"content":"import com.example.inventory.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":16,"oldContent":"@Table(name = \"customers\") // Pluralized"},{"type":"INSERT","lineNumber":18,"content":"@Table(name = \"customers\")"},{"type":"DELETE","lineNumber":45,"oldContent":"    @CreationTimestamp // Automatically sets the time when created"},{"type":"INSERT","lineNumber":47,"content":"    @CreationTimestamp"},{"type":"DELETE","lineNumber":49,"oldContent":"    // Many Customers are connected to one Splitter"},{"type":"MODIFY","lineNumber":52,"content":"    @JoinColumn(name = \"splitter_id\")","oldContent":"    @JoinColumn(name = \"splitter_id\") // This matches your SQL"},{"type":"DELETE","lineNumber":54,"oldContent":"    // One Customer has many AssignedAssets (the join table)"},{"type":"DELETE","lineNumber":58,"oldContent":"    // One Customer has one Fiber Drop Line"},{"type":"DELETE","lineNumber":62,"oldContent":"    // One Customer can have many Deployment Tasks"}]},{"timestamp":1760689216404,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.model;"},{"type":"DELETE","lineNumber":4,"oldContent":"// package com.example.inventory.entity;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.inventory.model.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":6,"oldContent":"import com.example.inventory.enums.ConnectionType;"},{"type":"DELETE","lineNumber":8,"oldContent":"import com.example.inventory.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":18,"oldContent":"@Getter"},{"type":"INSERT","lineNumber":14,"content":"@Getter"},{"type":"DELETE","lineNumber":47,"oldContent":"    @Column(updatable = false)"},{"type":"INSERT","lineNumber":43,"content":"    @Column(updatable = false)"},{"type":"DELETE","lineNumber":52,"oldContent":"    @JoinColumn(name = \"splitter_id\") // This matches your SQL"},{"type":"INSERT","lineNumber":48,"content":"    private Splitter splitter;"}]},{"timestamp":1760689220521,"changes":[{"type":"INSERT","lineNumber":3,"content":"import com.project.NetworkApp.enums.ConnectionType;"},{"type":"DELETE","lineNumber":9,"oldContent":"@Getter"},{"type":"INSERT","lineNumber":15,"content":"@Getter"},{"type":"DELETE","lineNumber":38,"oldContent":"    @Column(updatable = false)"},{"type":"DELETE","lineNumber":43,"oldContent":"    private Splitter splitter;"},{"type":"INSERT","lineNumber":44,"content":"    @Column(updatable = false)"},{"type":"INSERT","lineNumber":49,"content":"    private Splitter splitter;"}]},{"timestamp":1760689223747,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":43,"oldContent":"    @Column(updatable = false)"},{"type":"INSERT","lineNumber":45,"content":"    @Column(updatable = false)"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Asset.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Asset.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport com.example.inventory.model.enums.AssetStatus;\nimport com.example.inventory.model.enums.AssetType;\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.time.LocalDateTime;\nimport java.util.Set;\n\n@Entity\n@Table(name = \"assets\") // Pluralized\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Asset {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"asset_id\")\n    private Integer id;\n\n    @Enumerated(EnumType.STRING)\n    private AssetType assetType;\n\n    private String model;\n\n    @Column(unique = true, nullable = false)\n    private String serialNumber;\n\n    @Enumerated(EnumType.STRING)\n    private AssetStatus status;\n\n    private String location; // e.g., \"Warehouse\", \"Customer Premise\"\n\n    // This field from your SQL is NOT a relationship, just a log\n    private Integer assignedToCustomerId;\n\n    private LocalDateTime assignedDate;\n\n    // One Asset can be in many assignments (though typically just one active)\n    @OneToMany(mappedBy = \"asset\", cascade = CascadeType.ALL, orphanRemoval = true)\n    private Set<AssignedAssets> assignments;\n}","baseTimestamp":1760688923074,"deltas":[{"timestamp":1760689060683,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.model.enums.AssetStatus;"},{"type":"MODIFY","lineNumber":4,"content":"import com.example.inventory.enums.AssetStatus;","oldContent":"import com.example.inventory.model.enums.AssetType;"},{"type":"INSERT","lineNumber":5,"content":"import com.example.inventory.enums.AssetType;"},{"type":"MODIFY","lineNumber":15,"content":"@Table(name = \"assets\")","oldContent":"@Table(name = \"assets\") // Pluralized"},{"type":"MODIFY","lineNumber":38,"content":"    private String location;","oldContent":"    private String location; // e.g., \"Warehouse\", \"Customer Premise\""},{"type":"DELETE","lineNumber":40,"oldContent":"    // This field from your SQL is NOT a relationship, just a log"},{"type":"DELETE","lineNumber":42,"oldContent":""},{"type":"DELETE","lineNumber":45,"oldContent":"    // One Asset can be in many assignments (though typically just one active)"}]},{"timestamp":1760689190309,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.enums.AssetStatus;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.inventory.model.enums.AssetType;"},{"type":"INSERT","lineNumber":4,"content":""}]},{"timestamp":1760689196482,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.enums.AssetType;"}]},{"timestamp":1760689199922,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.enums.AssetStatus;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/AssignedAssets.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/AssignedAssets.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport org.hibernate.annotations.CreationTimestamp;\nimport java.time.LocalDateTime;\n\n@Entity\n@Table(name = \"assigned_assets\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class AssignedAssets {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Integer id;\n\n    // Many assignments point to one Customer\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"customer_id\")\n    private Customer customer;\n\n    // Many assignments point to one Asset\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"asset_id\")\n    private Asset asset;\n\n    @CreationTimestamp\n    @Column(updatable = false)\n    private LocalDateTime assignedOn;\n}\n","baseTimestamp":1760688942074,"deltas":[{"timestamp":1760689071686,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"DELETE","lineNumber":24,"oldContent":"    // Many assignments point to one Customer"},{"type":"DELETE","lineNumber":29,"oldContent":"    // Many assignments point to one Asset"},{"type":"DELETE","lineNumber":38,"oldContent":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/FiberDropLine.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/FiberDropLine.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport com.example.inventory.model.enums.FiberLineStatus;\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.math.BigDecimal;\n\n@Entity\n@Table(name = \"fiber_drop_lines\") // Pluralized\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class FiberDropLine {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"line_id\")\n    private Integer id;\n\n    @Column(precision = 6, scale = 2)\n    private BigDecimal lengthMeters;\n\n    @Enumerated(EnumType.STRING)\n    private FiberLineStatus status;\n\n    // Many lines can come from one Splitter\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"from_splitter_id\")\n    private Splitter splitter;\n\n    // One line goes to one Customer\n    @OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"to_customer_id\", unique = true) // one-to-one\n    private Customer customer;\n}","baseTimestamp":1760688958408,"deltas":[{"timestamp":1760689100793,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"MODIFY","lineNumber":4,"content":"import com.example.inventory.enums.FiberLineStatus;","oldContent":"import com.example.inventory.model.enums.FiberLineStatus;"},{"type":"MODIFY","lineNumber":13,"content":"@Table(name = \"fiber_drop_lines\")","oldContent":"@Table(name = \"fiber_drop_lines\") // Pluralized"},{"type":"DELETE","lineNumber":31,"oldContent":"    // Many lines can come from one Splitter"},{"type":"DELETE","lineNumber":36,"oldContent":"    // One line goes to one Customer"},{"type":"DELETE","lineNumber":38,"oldContent":"    @JoinColumn(name = \"to_customer_id\", unique = true) // one-to-one"},{"type":"INSERT","lineNumber":36,"content":"    @JoinColumn(name = \"to_customer_id\", unique = true)"}]},{"timestamp":1760689251793,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.entity;"},{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.enums.FiberLineStatus;"},{"type":"MODIFY","lineNumber":34,"content":"    @JoinColumn(name = \"to_customer_id\", unique = true)","oldContent":"    @JoinColumn(name = \"to_customer_id\", unique = true)"}]},{"timestamp":1760689256375,"changes":[{"type":"INSERT","lineNumber":3,"content":"import com.project.NetworkApp.enums.FiberLineStatus;"},{"type":"DELETE","lineNumber":32,"oldContent":"    @JoinColumn(name = \"to_customer_id\", unique = true)"},{"type":"MODIFY","lineNumber":33,"content":"","oldContent":"    @JoinColumn(name = \"to_customer_id\", unique = true)"},{"type":"INSERT","lineNumber":35,"content":"    @JoinColumn(name = \"to_customer_id\", unique = true)"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Technician.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/Technician.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.model;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.util.Set;\n\n@Entity\n@Table(name = \"technicians\") // Pluralized\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Technician {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"technician_id\")\n    private Integer id;\n\n    private String name;\n    private String contact;\n    private String region;\n\n    // One Technician has many Deployment Tasks\n    @OneToMany(mappedBy = \"technician\", fetch = FetchType.LAZY)\n    private Set<DeploymentTask> deploymentTasks;\n}\n","baseTimestamp":1760688982703,"deltas":[{"timestamp":1760689111680,"changes":[{"type":"MODIFY","lineNumber":2,"content":"// package com.example.inventory.entity;","oldContent":"// package com.example.inventory.model;"},{"type":"MODIFY","lineNumber":12,"content":"@Table(name = \"technicians\")","oldContent":"@Table(name = \"technicians\") // Pluralized"},{"type":"DELETE","lineNumber":28,"oldContent":"    // One Technician has many Deployment Tasks"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/DeploymentTask.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/DeploymentTask.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.entity;\n\nimport com.example.inventory.enums.TaskStatus;\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.time.LocalDate;\n\n@Entity\n@Table(name = \"deployment_tasks\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class DeploymentTask {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"task_id\")\n    private Integer id;\n\n    @Enumerated(EnumType.STRING)\n    private TaskStatus status;\n\n    private LocalDate scheduledDate;\n\n    @Column(columnDefinition = \"TEXT\")\n    private String notes;\n\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"customer_id\")\n    private Customer customer;\n\n    @ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"technician_id\")\n    private Technician technician;\n}\n","baseTimestamp":1760689126852,"deltas":[{"timestamp":1760689232380,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.entity;"},{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.enums.TaskStatus;"}]},{"timestamp":1760689239904,"changes":[{"type":"INSERT","lineNumber":3,"content":"import com.project.NetworkApp.enums.TaskStatus;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/User.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/User.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.entity;\n\nimport com.example.inventory.enums.UserRole;\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport java.time.LocalDateTime;\n\n@Entity\n@Table(name = \"users\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class User {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"user_id\")\n    private Integer id;\n\n    @Column(unique = true, nullable = false)\n    private String username;\n\n    @Column(name = \"password_hash\", nullable = false)\n    private String password;\n\n    @Enumerated(EnumType.STRING)\n    private UserRole role;\n\n    private LocalDateTime lastLogin;\n}","baseTimestamp":1760689161738,"deltas":[{"timestamp":1760689297234,"changes":[{"type":"MODIFY","lineNumber":4,"content":"","oldContent":"import com.example.inventory.enums.UserRole;"}]},{"timestamp":1760689301590,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.enums.UserRole;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/AuditLog.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/entity/AuditLog.java","baseContent":"package com.project.NetworkApp.entity;\n\n// package com.example.inventory.entity;\n\nimport jakarta.persistence.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\nimport lombok.Setter;\nimport org.hibernate.annotations.CreationTimestamp;\nimport java.time.LocalDateTime;\n\n@Entity\n@Table(name = \"audit_logs\")\n@Getter\n@Setter\n@NoArgsConstructor\n@AllArgsConstructor\npublic class AuditLog {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = \"log_id\")\n    private Long id;\n\n    private Integer userId;\n\n    private String actionType;\n\n    @Column(columnDefinition = \"TEXT\")\n    private String description;\n\n    @CreationTimestamp\n    @Column(updatable = false)\n    private LocalDateTime timestamp;\n}","baseTimestamp":1760689173797},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/CustomerRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/CustomerRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\n// package com.example.inventory.repository;\n\nimport com.example.inventory.entity.Customer;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.List;\n\n/**\n * Repository interface for Customer entity.\n * JpaRepository gives us CRUD (Create, Read, Update, Delete) methods for free.\n * The two generic types are the Entity class (Customer) and the type of its Primary Key (Integer).\n */\n@Repository\npublic interface CustomerRepository extends JpaRepository<Customer, Integer> {\n\n    // Spring Data JPA is smart. It can create queries from method names.\n    // This method will automatically generate a query like:\n    // \"SELECT c FROM Customer c WHERE c.neighborhood = ?1\"\n    List<Customer> findByNeighborhood(String neighborhood);\n\n    // This method will find all customers with a specific status.\n    List<Customer> findByStatus(com.example.inventory.enums.CustomerStatus status);\n\n}","baseTimestamp":1760692554539,"deltas":[{"timestamp":1760692564804,"changes":[{"type":"DELETE","lineNumber":1,"oldContent":""},{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.repository;"},{"type":"DELETE","lineNumber":3,"oldContent":""},{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.entity.Customer;"}]},{"timestamp":1760692568349,"changes":[{"type":"INSERT","lineNumber":1,"content":"import com.project.NetworkApp.entity.Customer;"}]},{"timestamp":1760692587789,"changes":[{"type":"DELETE","lineNumber":7,"oldContent":"/**"},{"type":"DELETE","lineNumber":8,"oldContent":" * Repository interface for Customer entity."},{"type":"DELETE","lineNumber":9,"oldContent":" * JpaRepository gives us CRUD (Create, Read, Update, Delete) methods for free."},{"type":"DELETE","lineNumber":10,"oldContent":" * The two generic types are the Entity class (Customer) and the type of its Primary Key (Integer)."},{"type":"DELETE","lineNumber":11,"oldContent":" */"}]},{"timestamp":1760692601197,"changes":[{"type":"DELETE","lineNumber":10,"oldContent":"    // Spring Data JPA is smart. It can create queries from method names."},{"type":"DELETE","lineNumber":11,"oldContent":"    // This method will automatically generate a query like:"},{"type":"DELETE","lineNumber":12,"oldContent":"    // \"SELECT c FROM Customer c WHERE c.neighborhood = ?1\""}]},{"timestamp":1760692606647,"changes":[{"type":"MODIFY","lineNumber":12,"content":"   ","oldContent":"    // This method will find all customers with a specific status."}]},{"timestamp":1760692638352,"changes":[{"type":"MODIFY","lineNumber":13,"content":"    List<Customer> findByStatus(com.project.NetworkApp.enums.CustomerStatus status);","oldContent":"    List<Customer> findByStatus(com.example.inventory.enums.CustomerStatus status);"}]},{"timestamp":1760692641119,"changes":[{"type":"MODIFY","lineNumber":12,"content":"","oldContent":"   "}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/CustomerDTO.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/DTO/CustomerDTO.java","baseContent":"package com.project.NetworkApp.DTO;\n\n// package com.example.inventory.dto;\n\nimport com.example.inventory.enums.ConnectionType;\nimport com.example.inventory.enums.CustomerStatus;\nimport java.time.LocalDateTime;\n\n/**\n * DTO for transferring Customer data. This is the object that will be\n * sent and received in our REST API's request and response bodies.\n *\n * We use a Java 'record' for this because it's immutable and provides\n * constructor, getters, equals(), hashCode(), and toString() automatically.\n */\npublic record CustomerDTO(\n        Integer id,\n        String name,\n        String address,\n        String neighborhood,\n        String plan,\n        ConnectionType connectionType,\n        CustomerStatus status,\n        int assignedPort,\n        LocalDateTime createdAt,\n\n        // We include the ID of the related entity, not the whole object.\n        // This is a best practice for clean APIs.\n        Integer splitterId\n) {\n}","baseTimestamp":1760692706331,"deltas":[{"timestamp":1760692713328,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.enums.ConnectionType;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.inventory.enums.CustomerStatus;"},{"type":"INSERT","lineNumber":4,"content":""}]},{"timestamp":1760692716978,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.enums.ConnectionType;"},{"type":"INSERT","lineNumber":6,"content":""}]},{"timestamp":1760692720929,"changes":[{"type":"INSERT","lineNumber":6,"content":"import com.project.NetworkApp.enums.CustomerStatus;"},{"type":"INSERT","lineNumber":7,"content":""},{"type":"DELETE","lineNumber":8,"oldContent":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/CustomerService.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/CustomerService.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.example.inventory.service;\n\nimport com.example.inventory.dto.CustomerDTO;\nimport java.util.List;\n\n/**\n * Interface for customer-related business logic.\n * This defines the contract for our Customer service, outlining the operations\n * that can be performed.\n */\npublic interface CustomerService {\n\n    /**\n     * Creates a new customer.\n     * @param customerDTO The DTO containing the new customer's data.\n     * @return The DTO of the newly created customer.\n     */\n    CustomerDTO createCustomer(CustomerDTO customerDTO);\n\n    /**\n     * Retrieves a customer by their ID.\n     * @param id The ID of the customer to retrieve.\n     * @return The DTO of the found customer, or throws an exception if not found.\n     */\n    CustomerDTO getCustomerById(Integer id);\n\n    /**\n     * Retrieves all customers.\n     * @return A list of all customer DTOs.\n     */\n    List<CustomerDTO> getAllCustomers();\n\n    // We will add update and delete methods later.\n}","baseTimestamp":1760693144348,"deltas":[{"timestamp":1760693154986,"changes":[{"type":"MODIFY","lineNumber":4,"content":"","oldContent":"import com.example.inventory.dto.CustomerDTO;"}]},{"timestamp":1760693158112,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.DTO.CustomerDTO;"},{"type":"INSERT","lineNumber":6,"content":""}]},{"timestamp":1760694604546,"changes":[{"type":"INSERT","lineNumber":6,"content":""},{"type":"DELETE","lineNumber":8,"oldContent":""},{"type":"INSERT","lineNumber":36,"content":"    CustomerDTO updateCustomer(Integer id, CustomerDTO customerDTO);"},{"type":"INSERT","lineNumber":37,"content":""},{"type":"INSERT","lineNumber":38,"content":"    /**"},{"type":"INSERT","lineNumber":39,"content":"     * Deactivates a customer (sets their status to INACTIVE)."},{"type":"INSERT","lineNumber":40,"content":"     * @param id The ID of the customer to deactivate."},{"type":"INSERT","lineNumber":41,"content":"     */"},{"type":"INSERT","lineNumber":42,"content":"    void deactivateCustomer(Integer id);"},{"type":"INSERT","lineNumber":43,"content":""}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/SplitterRepository.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Repository/SplitterRepository.java","baseContent":"package com.project.NetworkApp.Repository;\n\n// package com.example.inventory.repository;\n\nimport com.example.inventory.entity.Splitter;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface SplitterRepository extends JpaRepository<Splitter, Integer> {\n    // You can add custom query methods here later if needed\n}","baseTimestamp":1760693196310,"deltas":[{"timestamp":1760693199353,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.entity.Splitter;"}]},{"timestamp":1760693202448,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.entity.Splitter;"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/CustomerServiceImpl.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Service/CustomerServiceImpl.java","baseContent":"package com.project.NetworkApp.Service;\n\n// package com.example.inventory.service;\n\nimport com.example.inventory.dto.CustomerDTO;\nimport com.example.inventory.entity.Customer;\nimport com.example.inventory.entity.Splitter;\nimport com.example.inventory.repository.CustomerRepository;\nimport com.example.inventory.repository.SplitterRepository; // We'll need this soon\nimport jakarta.persistence.EntityNotFoundException;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n/**\n * Implementation of the CustomerService interface.\n * This class contains the core business logic for customer operations.\n */\n@Service // Marks this class as a Spring service bean\n@RequiredArgsConstructor // Lombok annotation to create a constructor for all final fields\npublic class CustomerServiceImpl implements CustomerService {\n\n    // Dependency Injection: Spring will automatically provide an instance of our repository.\n    private final CustomerRepository customerRepository;\n\n    // We inject the SplitterRepository to link a customer to a splitter.\n    // You will need to create this repository interface similar to CustomerRepository.\n    private final SplitterRepository splitterRepository;\n\n    @Override\n    public CustomerDTO createCustomer(CustomerDTO customerDTO) {\n        // 1. Convert the incoming DTO to a Customer entity\n        Customer customer = toEntity(customerDTO);\n\n        // 2. Save the new Customer entity using the repository\n        Customer savedCustomer = customerRepository.save(customer);\n\n        // 3. Convert the saved entity back to a DTO to return to the caller\n        return toDTO(savedCustomer);\n    }\n\n    @Override\n    public CustomerDTO getCustomerById(Integer id) {\n        // Find the customer by ID or throw an exception if it doesn't exist\n        Customer customer = customerRepository.findById(id)\n                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));\n        return toDTO(customer);\n    }\n\n    @Override\n    public List<CustomerDTO> getAllCustomers() {\n        // Fetch all customers from the database\n        List<Customer> customers = customerRepository.findAll();\n\n        // Convert the list of entities to a list of DTOs and return it\n        return customers.stream()\n                .map(this::toDTO)\n                .collect(Collectors.toList());\n    }\n\n    // --- Private Helper Methods (Mappers) ---\n\n    /**\n     * Converts a Customer entity to a CustomerDTO.\n     */\n    private CustomerDTO toDTO(Customer customer) {\n        return new CustomerDTO(\n                customer.getId(),\n                customer.getName(),\n                customer.getAddress(),\n                customer.getNeighborhood(),\n                customer.getPlan(),\n                customer.getConnectionType(),\n                customer.getStatus(),\n                customer.getAssignedPort(),\n                customer.getCreatedAt(),\n                // Safely get the splitter ID, handling the case where it might be null\n                customer.getSplitter() != null ? customer.getSplitter().getId() : null\n        );\n    }\n\n    /**\n     * Converts a CustomerDTO to a Customer entity.\n     */\n    private Customer toEntity(CustomerDTO dto) {\n        Customer customer = new Customer();\n        customer.setName(dto.name());\n        customer.setAddress(dto.address());\n        customer.setNeighborhood(dto.neighborhood());\n        customer.setPlan(dto.plan());\n        customer.setConnectionType(dto.connectionType());\n        customer.setStatus(dto.status());\n        customer.setAssignedPort(dto.assignedPort());\n\n        // Find the associated Splitter and link it\n        if (dto.splitterId() != null) {\n            Splitter splitter = splitterRepository.findById(dto.splitterId())\n                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + dto.splitterId()));\n            customer.setSplitter(splitter);\n        }\n\n        return customer;\n    }\n}","baseTimestamp":1760693243855,"deltas":[{"timestamp":1760693250535,"changes":[{"type":"DELETE","lineNumber":3,"oldContent":""},{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.dto.CustomerDTO;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.inventory.entity.Customer;"},{"type":"DELETE","lineNumber":6,"oldContent":"import com.example.inventory.entity.Splitter;"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.example.inventory.repository.CustomerRepository;"},{"type":"DELETE","lineNumber":8,"oldContent":"import com.example.inventory.repository.SplitterRepository; // We'll need this soon"},{"type":"INSERT","lineNumber":3,"content":" // We'll need this soon"}]},{"timestamp":1760693257248,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.Repository.CustomerRepository;"}]},{"timestamp":1760693260600,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.Repository.SplitterRepository;"}]},{"timestamp":1760693265002,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.CustomerDTO;"},{"type":"INSERT","lineNumber":7,"content":"import com.project.NetworkApp.entity.Customer;"}]},{"timestamp":1760693271088,"changes":[{"type":"DELETE","lineNumber":7,"oldContent":"import jakarta.persistence.EntityNotFoundException;"},{"type":"INSERT","lineNumber":8,"content":"import com.project.NetworkApp.entity.Splitter;"},{"type":"INSERT","lineNumber":9,"content":"import jakarta.persistence.EntityNotFoundException;"}]},{"timestamp":1760694628664,"changes":[{"type":"MODIFY","lineNumber":8,"content":"import com.project.NetworkApp.entity.Splitter;","oldContent":"import com.project.NetworkApp.entity.Splitter;"},{"type":"INSERT","lineNumber":105,"content":""},{"type":"INSERT","lineNumber":106,"content":"    @Override"},{"type":"INSERT","lineNumber":107,"content":"    public CustomerDTO updateCustomer(Integer id, CustomerDTO customerDTO) {"},{"type":"INSERT","lineNumber":108,"content":"        // 1. Find the existing customer"},{"type":"INSERT","lineNumber":109,"content":"        Customer existingCustomer = customerRepository.findById(id)"},{"type":"INSERT","lineNumber":110,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"INSERT","lineNumber":111,"content":""},{"type":"INSERT","lineNumber":112,"content":"        // 2. Update the entity's fields from the DTO"},{"type":"INSERT","lineNumber":113,"content":"        existingCustomer.setName(customerDTO.name());"},{"type":"INSERT","lineNumber":114,"content":"        existingCustomer.setAddress(customerDTO.address());"},{"type":"INSERT","lineNumber":115,"content":"        existingCustomer.setNeighborhood(customerDTO.neighborhood());"},{"type":"INSERT","lineNumber":116,"content":"        existingCustomer.setPlan(customerDTO.plan());"},{"type":"INSERT","lineNumber":117,"content":"        existingCustomer.setConnectionType(customerDTO.connectionType());"},{"type":"INSERT","lineNumber":118,"content":"        existingCustomer.setStatus(customerDTO.status());"},{"type":"INSERT","lineNumber":119,"content":"        existingCustomer.setAssignedPort(customerDTO.assignedPort());"},{"type":"INSERT","lineNumber":120,"content":""},{"type":"INSERT","lineNumber":121,"content":"        // 3. Handle the relationship with Splitter"},{"type":"INSERT","lineNumber":122,"content":"        if (customerDTO.splitterId() != null) {"},{"type":"INSERT","lineNumber":123,"content":"            Splitter splitter = splitterRepository.findById(customerDTO.splitterId())"},{"type":"INSERT","lineNumber":124,"content":"                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + customerDTO.splitterId()));"},{"type":"INSERT","lineNumber":125,"content":"            existingCustomer.setSplitter(splitter);"},{"type":"INSERT","lineNumber":126,"content":"        } else {"},{"type":"INSERT","lineNumber":127,"content":"            existingCustomer.setSplitter(null);"},{"type":"INSERT","lineNumber":128,"content":"        }"},{"type":"INSERT","lineNumber":129,"content":""},{"type":"INSERT","lineNumber":130,"content":"        // 4. Save the updated entity"},{"type":"INSERT","lineNumber":131,"content":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"INSERT","lineNumber":132,"content":""},{"type":"INSERT","lineNumber":133,"content":"        // 5. Return the updated DTO"},{"type":"INSERT","lineNumber":134,"content":"        return toDTO(updatedCustomer);"},{"type":"INSERT","lineNumber":135,"content":"    }"},{"type":"INSERT","lineNumber":136,"content":""},{"type":"INSERT","lineNumber":137,"content":"    @Override"},{"type":"INSERT","lineNumber":138,"content":"    public void deactivateCustomer(Integer id) {"},{"type":"INSERT","lineNumber":139,"content":"        // 1. Find the existing customer"},{"type":"INSERT","lineNumber":140,"content":"        Customer customer = customerRepository.findById(id)"},{"type":"INSERT","lineNumber":141,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"INSERT","lineNumber":142,"content":""},{"type":"INSERT","lineNumber":143,"content":"        // 2. Change the status to INACTIVE"},{"type":"INSERT","lineNumber":144,"content":"        customer.setStatus(CustomerStatus.INACTIVE);"},{"type":"INSERT","lineNumber":145,"content":""},{"type":"INSERT","lineNumber":146,"content":"        // 3. Save the change"},{"type":"INSERT","lineNumber":147,"content":"        customerRepository.save(customer);"},{"type":"INSERT","lineNumber":148,"content":"    }"}]},{"timestamp":1760694632000,"changes":[{"type":"INSERT","lineNumber":7,"content":"import com.project.NetworkApp.entity.Customer;"},{"type":"MODIFY","lineNumber":9,"content":"import com.project.NetworkApp.enums.CustomerStatus;","oldContent":"import com.project.NetworkApp.entity.Splitter;"},{"type":"DELETE","lineNumber":106,"oldContent":"}"},{"type":"DELETE","lineNumber":108,"oldContent":"    }"},{"type":"DELETE","lineNumber":110,"oldContent":"        customerRepository.save(customer);"},{"type":"DELETE","lineNumber":112,"oldContent":"        // 3. Save the change"},{"type":"DELETE","lineNumber":114,"oldContent":""},{"type":"DELETE","lineNumber":116,"oldContent":"        customer.setStatus(CustomerStatus.INACTIVE);"},{"type":"DELETE","lineNumber":118,"oldContent":"        // 2. Change the status to INACTIVE"},{"type":"DELETE","lineNumber":120,"oldContent":""},{"type":"DELETE","lineNumber":122,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"DELETE","lineNumber":124,"oldContent":"        Customer customer = customerRepository.findById(id)"},{"type":"DELETE","lineNumber":126,"oldContent":"        // 1. Find the existing customer"},{"type":"DELETE","lineNumber":128,"oldContent":"    public void deactivateCustomer(Integer id) {"},{"type":"DELETE","lineNumber":130,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":132,"oldContent":""},{"type":"DELETE","lineNumber":134,"oldContent":"    }"},{"type":"DELETE","lineNumber":136,"oldContent":"        return toDTO(updatedCustomer);"},{"type":"DELETE","lineNumber":138,"oldContent":"        // 5. Return the updated DTO"},{"type":"DELETE","lineNumber":140,"oldContent":""},{"type":"DELETE","lineNumber":142,"oldContent":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"DELETE","lineNumber":144,"oldContent":"        // 4. Save the updated entity"},{"type":"DELETE","lineNumber":146,"oldContent":""},{"type":"DELETE","lineNumber":148,"oldContent":"        }"},{"type":"INSERT","lineNumber":129,"content":"        }"},{"type":"INSERT","lineNumber":130,"content":""},{"type":"INSERT","lineNumber":131,"content":"        // 4. Save the updated entity"},{"type":"INSERT","lineNumber":132,"content":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"INSERT","lineNumber":133,"content":""},{"type":"INSERT","lineNumber":134,"content":"        // 5. Return the updated DTO"},{"type":"INSERT","lineNumber":135,"content":"        return toDTO(updatedCustomer);"},{"type":"INSERT","lineNumber":136,"content":"    }"},{"type":"INSERT","lineNumber":137,"content":""},{"type":"INSERT","lineNumber":138,"content":"    @Override"},{"type":"INSERT","lineNumber":139,"content":"    public void deactivateCustomer(Integer id) {"},{"type":"INSERT","lineNumber":140,"content":"        // 1. Find the existing customer"},{"type":"INSERT","lineNumber":141,"content":"        Customer customer = customerRepository.findById(id)"},{"type":"INSERT","lineNumber":142,"content":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"INSERT","lineNumber":143,"content":""},{"type":"INSERT","lineNumber":144,"content":"        // 2. Change the status to INACTIVE"},{"type":"INSERT","lineNumber":145,"content":"        customer.setStatus(CustomerStatus.INACTIVE);"},{"type":"INSERT","lineNumber":146,"content":""},{"type":"INSERT","lineNumber":147,"content":"        // 3. Save the change"},{"type":"INSERT","lineNumber":148,"content":"        customerRepository.save(customer);"},{"type":"INSERT","lineNumber":149,"content":"    }"},{"type":"INSERT","lineNumber":150,"content":"}"}]},{"timestamp":1760695022364,"changes":[{"type":"DELETE","lineNumber":2,"oldContent":"// package com.example.inventory.service;"},{"type":"DELETE","lineNumber":3,"oldContent":" // We'll need this soon"},{"type":"DELETE","lineNumber":4,"oldContent":"import com.project.NetworkApp.DTO.CustomerDTO;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.project.NetworkApp.Repository.CustomerRepository;"},{"type":"DELETE","lineNumber":6,"oldContent":"import com.project.NetworkApp.Repository.SplitterRepository;"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.project.NetworkApp.entity.Customer;"},{"type":"DELETE","lineNumber":8,"oldContent":"import com.project.NetworkApp.entity.Splitter;"},{"type":"DELETE","lineNumber":9,"oldContent":"import com.project.NetworkApp.entity.Splitter;"},{"type":"DELETE","lineNumber":10,"oldContent":"import com.project.NetworkApp.enums.CustomerStatus;"},{"type":"INSERT","lineNumber":2,"content":"/// package com.example.inventory.service;"},{"type":"INSERT","lineNumber":3,"content":""},{"type":"INSERT","lineNumber":4,"content":"import com.example.inventory.dto.CustomerDTO;"},{"type":"INSERT","lineNumber":5,"content":"import com.example.inventory.entity.Customer;"},{"type":"INSERT","lineNumber":6,"content":"import com.example.inventory.enums.CustomerStatus;"},{"type":"INSERT","lineNumber":7,"content":"import com.example.inventory.repository.CustomerRepository;"},{"type":"INSERT","lineNumber":8,"content":"import com.example.inventory.repository.SplitterRepository;"},{"type":"INSERT","lineNumber":9,"content":"import com.example.inventory.util.CustomerUtility; // <-- IMPORT THE UTILITY"},{"type":"INSERT","lineNumber":10,"content":"import jakarta.persistence.EntityNotFoundException;"},{"type":"DELETE","lineNumber":17,"oldContent":"/**"},{"type":"DELETE","lineNumber":18,"oldContent":" * Implementation of the CustomerService interface."},{"type":"DELETE","lineNumber":19,"oldContent":" * This class contains the core business logic for customer operations."},{"type":"DELETE","lineNumber":20,"oldContent":" */"},{"type":"DELETE","lineNumber":21,"oldContent":"@Service // Marks this class as a Spring service bean"},{"type":"DELETE","lineNumber":22,"oldContent":"@RequiredArgsConstructor // Lombok annotation to create a constructor for all final fields"},{"type":"INSERT","lineNumber":17,"content":"@Service"},{"type":"INSERT","lineNumber":18,"content":"@RequiredArgsConstructor"},{"type":"DELETE","lineNumber":25,"oldContent":"    // Dependency Injection: Spring will automatically provide an instance of our repository."},{"type":"INSERT","lineNumber":22,"content":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"DELETE","lineNumber":28,"oldContent":"    // We inject the SplitterRepository to link a customer to a splitter."},{"type":"DELETE","lineNumber":29,"oldContent":"    // You will need to create this repository interface similar to CustomerRepository."},{"type":"DELETE","lineNumber":30,"oldContent":"    private final SplitterRepository splitterRepository;"},{"type":"DELETE","lineNumber":31,"oldContent":""},{"type":"DELETE","lineNumber":34,"oldContent":"        // 1. Convert the incoming DTO to a Customer entity"},{"type":"DELETE","lineNumber":35,"oldContent":"        Customer customer = toEntity(customerDTO);"},{"type":"DELETE","lineNumber":36,"oldContent":""},{"type":"DELETE","lineNumber":37,"oldContent":"        // 2. Save the new Customer entity using the repository"},{"type":"INSERT","lineNumber":26,"content":"        // Pass the repository to the utility method"},{"type":"INSERT","lineNumber":27,"content":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":39,"oldContent":""},{"type":"DELETE","lineNumber":40,"oldContent":"        // 3. Convert the saved entity back to a DTO to return to the caller"},{"type":"DELETE","lineNumber":41,"oldContent":"        return toDTO(savedCustomer);"},{"type":"INSERT","lineNumber":29,"content":"        return CustomerUtility.toDTO(savedCustomer);"},{"type":"DELETE","lineNumber":46,"oldContent":"        // Find the customer by ID or throw an exception if it doesn't exist"},{"type":"DELETE","lineNumber":49,"oldContent":"        return toDTO(customer);"},{"type":"INSERT","lineNumber":36,"content":"        return CustomerUtility.toDTO(customer);"},{"type":"DELETE","lineNumber":54,"oldContent":"        // Fetch all customers from the database"},{"type":"DELETE","lineNumber":55,"oldContent":"        List<Customer> customers = customerRepository.findAll();"},{"type":"DELETE","lineNumber":56,"oldContent":""},{"type":"DELETE","lineNumber":57,"oldContent":"        // Convert the list of entities to a list of DTOs and return it"},{"type":"DELETE","lineNumber":58,"oldContent":"        return customers.stream()"},{"type":"DELETE","lineNumber":59,"oldContent":"                .map(this::toDTO)"},{"type":"INSERT","lineNumber":41,"content":"        return customerRepository.findAll().stream()"},{"type":"INSERT","lineNumber":42,"content":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"DELETE","lineNumber":63,"oldContent":"    // --- Private Helper Methods (Mappers) ---"},{"type":"DELETE","lineNumber":64,"oldContent":""},{"type":"DELETE","lineNumber":65,"oldContent":"    /**"},{"type":"DELETE","lineNumber":66,"oldContent":"     * Converts a Customer entity to a CustomerDTO."},{"type":"DELETE","lineNumber":67,"oldContent":"     */"},{"type":"DELETE","lineNumber":68,"oldContent":"    private CustomerDTO toDTO(Customer customer) {"},{"type":"DELETE","lineNumber":69,"oldContent":"        return new CustomerDTO("},{"type":"DELETE","lineNumber":70,"oldContent":"                customer.getId(),"},{"type":"DELETE","lineNumber":71,"oldContent":"                customer.getName(),"},{"type":"DELETE","lineNumber":72,"oldContent":"                customer.getAddress(),"},{"type":"DELETE","lineNumber":73,"oldContent":"                customer.getNeighborhood(),"},{"type":"DELETE","lineNumber":74,"oldContent":"                customer.getPlan(),"},{"type":"DELETE","lineNumber":75,"oldContent":"                customer.getConnectionType(),"},{"type":"DELETE","lineNumber":76,"oldContent":"                customer.getStatus(),"},{"type":"DELETE","lineNumber":77,"oldContent":"                customer.getAssignedPort(),"},{"type":"DELETE","lineNumber":78,"oldContent":"                customer.getCreatedAt(),"},{"type":"DELETE","lineNumber":79,"oldContent":"                // Safely get the splitter ID, handling the case where it might be null"},{"type":"DELETE","lineNumber":80,"oldContent":"                customer.getSplitter() != null ? customer.getSplitter().getId() : null"},{"type":"DELETE","lineNumber":81,"oldContent":"        );"},{"type":"DELETE","lineNumber":82,"oldContent":"    }"},{"type":"DELETE","lineNumber":83,"oldContent":""},{"type":"DELETE","lineNumber":84,"oldContent":"    /**"},{"type":"DELETE","lineNumber":85,"oldContent":"     * Converts a CustomerDTO to a Customer entity."},{"type":"DELETE","lineNumber":86,"oldContent":"     */"},{"type":"DELETE","lineNumber":87,"oldContent":"    private Customer toEntity(CustomerDTO dto) {"},{"type":"DELETE","lineNumber":88,"oldContent":"        Customer customer = new Customer();"},{"type":"DELETE","lineNumber":89,"oldContent":"        customer.setName(dto.name());"},{"type":"DELETE","lineNumber":90,"oldContent":"        customer.setAddress(dto.address());"},{"type":"DELETE","lineNumber":91,"oldContent":"        customer.setNeighborhood(dto.neighborhood());"},{"type":"DELETE","lineNumber":92,"oldContent":"        customer.setPlan(dto.plan());"},{"type":"DELETE","lineNumber":93,"oldContent":"        customer.setConnectionType(dto.connectionType());"},{"type":"DELETE","lineNumber":94,"oldContent":"        customer.setStatus(dto.status());"},{"type":"DELETE","lineNumber":95,"oldContent":"        customer.setAssignedPort(dto.assignedPort());"},{"type":"DELETE","lineNumber":96,"oldContent":""},{"type":"DELETE","lineNumber":97,"oldContent":"        // Find the associated Splitter and link it"},{"type":"DELETE","lineNumber":98,"oldContent":"        if (dto.splitterId() != null) {"},{"type":"DELETE","lineNumber":99,"oldContent":"            Splitter splitter = splitterRepository.findById(dto.splitterId())"},{"type":"DELETE","lineNumber":100,"oldContent":"                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + dto.splitterId()));"},{"type":"DELETE","lineNumber":101,"oldContent":"            customer.setSplitter(splitter);"},{"type":"DELETE","lineNumber":102,"oldContent":"        }"},{"type":"DELETE","lineNumber":103,"oldContent":""},{"type":"DELETE","lineNumber":104,"oldContent":"        return customer;"},{"type":"DELETE","lineNumber":105,"oldContent":"    }"},{"type":"DELETE","lineNumber":106,"oldContent":""},{"type":"DELETE","lineNumber":109,"oldContent":"        // 1. Find the existing customer"},{"type":"DELETE","lineNumber":110,"oldContent":"        Customer existingCustomer = customerRepository.findById(id)"},{"type":"DELETE","lineNumber":111,"oldContent":"                .orElseThrow(() -> new EntityNotFoundException(\"Customer not found with id: \" + id));"},{"type":"DELETE","lineNumber":112,"oldContent":""},{"type":"DELETE","lineNumber":113,"oldContent":"        // 2. Update the entity's fields from the DTO"},{"type":"DELETE","lineNumber":114,"oldContent":"        existingCustomer.setName(customerDTO.name());"},{"type":"DELETE","lineNumber":115,"oldContent":"        existingCustomer.setAddress(customerDTO.address());"},{"type":"DELETE","lineNumber":116,"oldContent":"        existingCustomer.setNeighborhood(customerDTO.neighborhood());"},{"type":"DELETE","lineNumber":117,"oldContent":"        existingCustomer.setPlan(customerDTO.plan());"},{"type":"INSERT","lineNumber":48,"content":"        // Ensure the customer exists before proceeding"},{"type":"INSERT","lineNumber":49,"content":"        if (!customerRepository.existsById(id)) {"},{"type":"INSERT","lineNumber":50,"content":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"DELETE","lineNumber":119,"oldContent":"        existingCustomer.setConnectionType(customerDTO.connectionType());"},{"type":"DELETE","lineNumber":121,"oldContent":"        // 4. Save the updated entity"},{"type":"DELETE","lineNumber":122,"oldContent":"        existingCustomer.setStatus(customerDTO.status());"},{"type":"DELETE","lineNumber":123,"oldContent":"        Customer updatedCustomer = customerRepository.save(existingCustomer);"},{"type":"INSERT","lineNumber":53,"content":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":54,"content":"        customerToUpdate.setId(id); // Set the ID to ensure an update, not an insert"},{"type":"DELETE","lineNumber":125,"oldContent":"        existingCustomer.setAssignedPort(customerDTO.assignedPort());"},{"type":"DELETE","lineNumber":126,"oldContent":"        // 5. Return the updated DTO"},{"type":"DELETE","lineNumber":127,"oldContent":"        return toDTO(updatedCustomer);"},{"type":"DELETE","lineNumber":128,"oldContent":""},{"type":"INSERT","lineNumber":56,"content":"        Customer updatedCustomer = customerRepository.save(customerToUpdate);"},{"type":"INSERT","lineNumber":57,"content":"        return CustomerUtility.toDTO(updatedCustomer);"},{"type":"DELETE","lineNumber":131,"oldContent":"        // 3. Handle the relationship with Splitter"},{"type":"DELETE","lineNumber":134,"oldContent":"        if (customerDTO.splitterId() != null) {"},{"type":"DELETE","lineNumber":135,"oldContent":"        // 1. Find the existing customer"},{"type":"DELETE","lineNumber":137,"oldContent":"            Splitter splitter = splitterRepository.findById(customerDTO.splitterId())"},{"type":"DELETE","lineNumber":139,"oldContent":""},{"type":"DELETE","lineNumber":140,"oldContent":"                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + customerDTO.splitterId()));"},{"type":"DELETE","lineNumber":141,"oldContent":"        // 2. Change the status to INACTIVE"},{"type":"DELETE","lineNumber":143,"oldContent":"            existingCustomer.setSplitter(splitter);"},{"type":"DELETE","lineNumber":144,"oldContent":""},{"type":"DELETE","lineNumber":145,"oldContent":"        // 3. Save the change"},{"type":"DELETE","lineNumber":146,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":149,"oldContent":"            existingCustomer.setSplitter(null);"}]},{"timestamp":1760695029631,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.dto.CustomerDTO;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.inventory.entity.Customer;"},{"type":"DELETE","lineNumber":6,"oldContent":"import com.example.inventory.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.example.inventory.repository.CustomerRepository;"},{"type":"DELETE","lineNumber":8,"oldContent":"import com.example.inventory.repository.SplitterRepository;"},{"type":"DELETE","lineNumber":9,"oldContent":"import com.example.inventory.util.CustomerUtility; // <-- IMPORT THE UTILITY"},{"type":"INSERT","lineNumber":4,"content":" <-- IMPORT THE UTILITY"},{"type":"DELETE","lineNumber":19,"oldContent":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"DELETE","lineNumber":22,"oldContent":"        // Pass the repository to the utility method"},{"type":"DELETE","lineNumber":24,"oldContent":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":17,"content":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"DELETE","lineNumber":26,"oldContent":"        return CustomerUtility.toDTO(savedCustomer);"},{"type":"DELETE","lineNumber":29,"oldContent":"        return CustomerUtility.toDTO(customer);"},{"type":"INSERT","lineNumber":21,"content":"        // Pass the repository to the utility method"},{"type":"INSERT","lineNumber":22,"content":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":31,"oldContent":"        return customerRepository.findAll().stream()"},{"type":"DELETE","lineNumber":32,"oldContent":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"INSERT","lineNumber":24,"content":"        return CustomerUtility.toDTO(savedCustomer);"},{"type":"DELETE","lineNumber":38,"oldContent":"        // Ensure the customer exists before proceeding"},{"type":"DELETE","lineNumber":40,"oldContent":"        if (!customerRepository.existsById(id)) {"},{"type":"DELETE","lineNumber":41,"oldContent":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"INSERT","lineNumber":31,"content":"        return CustomerUtility.toDTO(customer);"},{"type":"DELETE","lineNumber":45,"oldContent":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":47,"oldContent":"        customerToUpdate.setId(id); // Set the ID to ensure an update, not an insert"},{"type":"DELETE","lineNumber":48,"oldContent":"        Customer updatedCustomer = customerRepository.save(customerToUpdate);"},{"type":"DELETE","lineNumber":49,"oldContent":"        return CustomerUtility.toDTO(updatedCustomer);"},{"type":"INSERT","lineNumber":36,"content":"        return customerRepository.findAll().stream()"},{"type":"INSERT","lineNumber":37,"content":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"INSERT","lineNumber":43,"content":"        // Ensure the customer exists before proceeding"},{"type":"INSERT","lineNumber":44,"content":"        if (!customerRepository.existsById(id)) {"},{"type":"INSERT","lineNumber":45,"content":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"INSERT","lineNumber":48,"content":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":49,"content":"        customerToUpdate.setId(id); // Set the ID to ensure an update, not an insert"},{"type":"INSERT","lineNumber":51,"content":"        Customer updatedCustomer = customerRepository.save(customerToUpdate);"},{"type":"INSERT","lineNumber":52,"content":"        return CustomerUtility.toDTO(updatedCustomer);"}]},{"timestamp":1760695032226,"changes":[{"type":"MODIFY","lineNumber":5,"content":" import com.project.NetworkApp.Repository.CustomerRepository;","oldContent":"import jakarta.persistence.EntityNotFoundException;"},{"type":"INSERT","lineNumber":6,"content":" import jakarta.persistence.EntityNotFoundException;"},{"type":"DELETE","lineNumber":12,"oldContent":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"DELETE","lineNumber":16,"oldContent":"        // Pass the repository to the utility method"},{"type":"DELETE","lineNumber":18,"oldContent":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":20,"oldContent":"        return CustomerUtility.toDTO(savedCustomer);"},{"type":"INSERT","lineNumber":18,"content":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"INSERT","lineNumber":22,"content":"        // Pass the repository to the utility method"},{"type":"INSERT","lineNumber":23,"content":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"MODIFY","lineNumber":25,"content":"        return CustomerUtility.toDTO(savedCustomer);","oldContent":"        return CustomerUtility.toDTO(customer);"},{"type":"DELETE","lineNumber":29,"oldContent":"        return customerRepository.findAll().stream()"},{"type":"MODIFY","lineNumber":32,"content":"        return CustomerUtility.toDTO(customer);","oldContent":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"DELETE","lineNumber":35,"oldContent":"        // Ensure the customer exists before proceeding"},{"type":"DELETE","lineNumber":37,"oldContent":"        if (!customerRepository.existsById(id)) {"},{"type":"DELETE","lineNumber":39,"oldContent":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"DELETE","lineNumber":41,"oldContent":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":42,"oldContent":"        customerToUpdate.setId(id); // Set the ID to ensure an update, not an insert"},{"type":"INSERT","lineNumber":37,"content":"        return customerRepository.findAll().stream()"},{"type":"INSERT","lineNumber":38,"content":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"DELETE","lineNumber":44,"oldContent":"        Customer updatedCustomer = customerRepository.save(customerToUpdate);"},{"type":"DELETE","lineNumber":46,"oldContent":"        return CustomerUtility.toDTO(updatedCustomer);"},{"type":"INSERT","lineNumber":44,"content":"        // Ensure the customer exists before proceeding"},{"type":"INSERT","lineNumber":45,"content":"        if (!customerRepository.existsById(id)) {"},{"type":"INSERT","lineNumber":46,"content":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"INSERT","lineNumber":49,"content":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":50,"content":"        customerToUpdate.setId(id); // Set the ID to ensure an update, not an insert"},{"type":"INSERT","lineNumber":52,"content":"        Customer updatedCustomer = customerRepository.save(customerToUpdate);"},{"type":"INSERT","lineNumber":53,"content":"        return CustomerUtility.toDTO(updatedCustomer);"}]},{"timestamp":1760695034598,"changes":[{"type":"INSERT","lineNumber":6,"content":" import com.project.NetworkApp.Repository.SplitterRepository;"},{"type":"DELETE","lineNumber":17,"oldContent":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"INSERT","lineNumber":19,"content":"    private final SplitterRepository splitterRepository; // Still needed to pass to the utility"},{"type":"DELETE","lineNumber":20,"oldContent":"        // Pass the repository to the utility method"},{"type":"DELETE","lineNumber":22,"oldContent":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":23,"content":"        // Pass the repository to the utility method"},{"type":"INSERT","lineNumber":24,"content":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":30,"oldContent":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"MODIFY","lineNumber":31,"content":"        Customer customer = customerRepository.findById(id)","oldContent":"        return CustomerUtility.toDTO(customer);"},{"type":"INSERT","lineNumber":33,"content":"        return CustomerUtility.toDTO(customer);"},{"type":"DELETE","lineNumber":35,"oldContent":"        return customerRepository.findAll().stream()"},{"type":"DELETE","lineNumber":36,"oldContent":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"INSERT","lineNumber":38,"content":"        return customerRepository.findAll().stream()"},{"type":"INSERT","lineNumber":39,"content":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"INSERT","lineNumber":41,"content":"    }"},{"type":"INSERT","lineNumber":42,"content":""},{"type":"INSERT","lineNumber":43,"content":"    @Override"},{"type":"INSERT","lineNumber":44,"content":"    public CustomerDTO updateCustomer(Integer id, CustomerDTO customerDTO) {"},{"type":"DELETE","lineNumber":42,"oldContent":"    }"},{"type":"INSERT","lineNumber":48,"content":"        }"},{"type":"DELETE","lineNumber":45,"oldContent":"    @Override"},{"type":"DELETE","lineNumber":47,"oldContent":"    public CustomerDTO updateCustomer(Integer id, CustomerDTO customerDTO) {"},{"type":"DELETE","lineNumber":49,"oldContent":"        }"},{"type":"DELETE","lineNumber":52,"oldContent":""}]},{"timestamp":1760695038900,"changes":[{"type":"INSERT","lineNumber":5,"content":" import com.project.NetworkApp.DTO.CustomerDTO;"},{"type":"INSERT","lineNumber":8,"content":" import com.project.NetworkApp.entity.Customer;"},{"type":"DELETE","lineNumber":22,"oldContent":"        // Pass the repository to the utility method"},{"type":"INSERT","lineNumber":25,"content":"        // Pass the repository to the utility method"},{"type":"DELETE","lineNumber":37,"oldContent":"        return customerRepository.findAll().stream()"},{"type":"INSERT","lineNumber":40,"content":"        return customerRepository.findAll().stream()"},{"type":"DELETE","lineNumber":41,"oldContent":"        // Ensure the customer exists before proceeding"},{"type":"DELETE","lineNumber":43,"oldContent":"        if (!customerRepository.existsById(id)) {"},{"type":"DELETE","lineNumber":46,"oldContent":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"INSERT","lineNumber":47,"content":"        // Ensure the customer exists before proceeding"},{"type":"INSERT","lineNumber":48,"content":"        if (!customerRepository.existsById(id)) {"},{"type":"INSERT","lineNumber":49,"content":"            throw new EntityNotFoundException(\"Customer not found with id: \" + id);"},{"type":"INSERT","lineNumber":50,"content":"        }"},{"type":"DELETE","lineNumber":50,"oldContent":"        }"}]},{"timestamp":1760695041393,"changes":[{"type":"MODIFY","lineNumber":8,"content":" import com.project.NetworkApp.Utility.CustomerUtility;","oldContent":" import jakarta.persistence.EntityNotFoundException;"},{"type":"INSERT","lineNumber":10,"content":" import jakarta.persistence.EntityNotFoundException;"},{"type":"DELETE","lineNumber":25,"oldContent":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":27,"content":"        Customer customer = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"DELETE","lineNumber":40,"oldContent":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"INSERT","lineNumber":42,"content":"                .map(CustomerUtility::toDTO) // Using a method reference"},{"type":"DELETE","lineNumber":46,"oldContent":"        // Ensure the customer exists before proceeding"},{"type":"INSERT","lineNumber":48,"content":"        // Ensure the customer exists before proceeding"},{"type":"DELETE","lineNumber":49,"oldContent":""},{"type":"DELETE","lineNumber":51,"oldContent":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"},{"type":"INSERT","lineNumber":52,"content":""},{"type":"INSERT","lineNumber":53,"content":"        Customer customerToUpdate = CustomerUtility.toEntity(customerDTO, splitterRepository);"}]},{"timestamp":1760695045882,"changes":[{"type":"INSERT","lineNumber":10,"content":" import com.project.NetworkApp.enums.CustomerStatus;"},{"type":"DELETE","lineNumber":51,"oldContent":""},{"type":"INSERT","lineNumber":53,"content":""}]},{"timestamp":1760695050233,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":" <-- IMPORT THE UTILITY"}]}]},"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/CustomerUtility.java":{"filePath":"C:/Users/subadeveswaran.v/Downloads/NetworkApp/NetworkApp/src/main/java/com/project/NetworkApp/Utility/CustomerUtility.java","baseContent":"package com.project.NetworkApp.Utility;\n\n// package com.example.inventory.util;\n\nimport com.example.inventory.dto.CustomerDTO;\nimport com.example.inventory.entity.Customer;\nimport com.example.inventory.entity.Splitter;\nimport com.example.inventory.repository.SplitterRepository;\nimport jakarta.persistence.EntityNotFoundException;\n\n/**\n * A plain utility class with static methods for mapping between\n * Customer entities and DTOs.\n */\npublic final class CustomerUtility {\n\n    /**\n     * A private constructor to prevent this utility class from being instantiated.\n     */\n    private CustomerUtility() {}\n\n    /**\n     * Converts a Customer entity to a CustomerDTO.\n     * This method is self-contained and has no dependencies.\n     *\n     * @param customer The Customer entity to convert.\n     * @return The resulting CustomerDTO.\n     */\n    public static CustomerDTO toDTO(Customer customer) {\n        if (customer == null) {\n            return null;\n        }\n\n        return new CustomerDTO(\n                customer.getId(),\n                customer.getName(),\n                customer.getAddress(),\n                customer.getNeighborhood(),\n                customer.getPlan(),\n                customer.getConnectionType(),\n                customer.getStatus(),\n                customer.getAssignedPort(),\n                customer.getCreatedAt(),\n                customer.getSplitter() != null ? customer.getSplitter().getId() : null\n        );\n    }\n\n    /**\n     * Converts a CustomerDTO to a Customer entity.\n     *\n     * @param dto The CustomerDTO to convert.\n     * @param splitterRepository A repository instance needed to find the associated Splitter.\n     * @return The resulting Customer entity.\n     */\n    public static Customer toEntity(CustomerDTO dto, SplitterRepository splitterRepository) {\n        Customer customer = new Customer();\n        customer.setName(dto.name());\n        customer.setAddress(dto.address());\n        customer.setNeighborhood(dto.neighborhood());\n        customer.setPlan(dto.plan());\n        customer.setConnectionType(dto.connectionType());\n        customer.setStatus(dto.status());\n        customer.setAssignedPort(dto.assignedPort());\n\n        // Use the passed-in repository to find and link the Splitter\n        if (dto.splitterId() != null) {\n            Splitter splitter = splitterRepository.findById(dto.splitterId())\n                    .orElseThrow(() -> new EntityNotFoundException(\"Splitter not found with id: \" + dto.splitterId()));\n            customer.setSplitter(splitter);\n        }\n\n        return customer;\n    }\n}","baseTimestamp":1760694979367,"deltas":[{"timestamp":1760694984409,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import com.example.inventory.dto.CustomerDTO;"},{"type":"DELETE","lineNumber":5,"oldContent":"import com.example.inventory.entity.Customer;"},{"type":"DELETE","lineNumber":6,"oldContent":"import com.example.inventory.entity.Splitter;"},{"type":"DELETE","lineNumber":7,"oldContent":"import com.example.inventory.repository.SplitterRepository;"}]},{"timestamp":1760694987748,"changes":[{"type":"INSERT","lineNumber":4,"content":"import com.project.NetworkApp.DTO.CustomerDTO;"}]},{"timestamp":1760694989820,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.entity.Customer;"}]},{"timestamp":1760694995308,"changes":[{"type":"INSERT","lineNumber":5,"content":"import com.project.NetworkApp.Repository.SplitterRepository;"}]},{"timestamp":1760695000306,"changes":[{"type":"INSERT","lineNumber":7,"content":"import com.project.NetworkApp.entity.Splitter;"}]}]}}}